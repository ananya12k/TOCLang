Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    LSQUARE
    RSQUARE

Grammar

Rule 0     S' -> statement
Rule 1     statement -> ALPHABET ID EQUALS LBRACE alphabet_list RBRACE
Rule 2     alphabet_list -> ID
Rule 3     alphabet_list -> alphabet_list COMMA ID
Rule 4     statement -> STR ID EQUALS SINGLEQUOTE STRING SINGLEQUOTE
Rule 5     statement -> INITIAL COLON LBRACE ID RBRACE
Rule 6     statement -> FINAL COLON LBRACE final_list RBRACE
Rule 7     final_list -> ID
Rule 8     final_list -> final_list COMMA ID
Rule 9     statement -> STATES COLON LBRACE states_list RBRACE
Rule 10    states_list -> ID
Rule 11    states_list -> states_list COMMA ID
Rule 12    statement -> TRANSITIONS COLON LBRACE transitions_list RBRACE
Rule 13    transitions_list -> transition
Rule 14    transitions_list -> transitions_list COMMA transition
Rule 15    transition -> LBRACE FROM COLON ID COMMA TO COLON ID COMMA ONN COLON ID RBRACE
Rule 16    transition -> LBRACE FROM COLON ID COMMA TO COLON ID COMMA ONN COLON ID COMMA POP COLON ID COMMA PUSH COLON ID COMMA STACK COLON ID RBRACE
Rule 17    statement -> FA ID LPAREN RPAREN LBRACE statement_list_fa RBRACE
Rule 18    statement_list_fa -> statement
Rule 19    statement_list_fa -> statement_list_fa statement
Rule 20    statement -> PDA ID LPAREN RPAREN LBRACE statement_list_pda RBRACE
Rule 21    statement_list_pda -> statement
Rule 22    statement_list_pda -> statement_list_pda statement
Rule 23    statement -> STACK_INIT COLON ID
Rule 24    statement -> CFG ID LPAREN RPAREN LBRACE statement_list_cfg RBRACE
Rule 25    statement_list_cfg -> statement
Rule 26    statement_list_cfg -> statement_list_cfg statement
Rule 27    statement -> NONTERMINALS COLON LBRACE nonterminals_list RBRACE
Rule 28    nonterminals_list -> ID
Rule 29    nonterminals_list -> nonterminals_list COMMA ID
Rule 30    statement -> TERMINALS COLON LBRACE terminals_list RBRACE
Rule 31    terminals_list -> ID
Rule 32    terminals_list -> terminals_list COMMA ID
Rule 33    statement -> START COLON ID
Rule 34    statement -> RULES COLON LBRACE rules_list RBRACE
Rule 35    rules_list -> rule
Rule 36    rules_list -> rules_list rule
Rule 37    rule -> ID ARROW rule_rhs SEMICOLON
Rule 38    rule_rhs -> ID
Rule 39    rule_rhs -> rule_rhs PIPE ID
Rule 40    rule_rhs -> rule_rhs PIPE EPSILON
Rule 41    statement -> RE ID EQUALS SINGLEQUOTE REGEX SINGLEQUOTE
Rule 42    REGEX -> REGEX_CONTENT
Rule 43    REGEX_CONTENT -> REGEX_CONTENT REGEX_CHAR
Rule 44    REGEX_CONTENT -> REGEX_CHAR
Rule 45    REGEX_CHAR -> REGEX_SPECIAL_CHAR
Rule 46    REGEX_CHAR -> REGEX_LITERAL_CHAR
Rule 47    REGEX_SPECIAL_CHAR -> STAR
Rule 48    REGEX_SPECIAL_CHAR -> PLUS
Rule 49    REGEX_SPECIAL_CHAR -> OR
Rule 50    REGEX_SPECIAL_CHAR -> DOT
Rule 51    REGEX_SPECIAL_CHAR -> CARET
Rule 52    REGEX_SPECIAL_CHAR -> DOLLAR
Rule 53    REGEX_SPECIAL_CHAR -> QUESTION
Rule 54    REGEX_SPECIAL_CHAR -> LPAREN
Rule 55    REGEX_SPECIAL_CHAR -> RPAREN
Rule 56    REGEX_SPECIAL_CHAR -> LBRACE
Rule 57    REGEX_SPECIAL_CHAR -> RBRACE
Rule 58    statement -> MINIMIZE LPAREN ID RPAREN
Rule 59    statement -> SIMULATE LPAREN ID COMMA ID RPAREN
Rule 60    statement -> VISUALIZE LPAREN ID RPAREN
Rule 61    statement -> CONCAT LPAREN ID COMMA ID RPAREN
Rule 62    statement -> POWER LPAREN ID COMMA NUMBER RPAREN
Rule 63    statement -> KLEENE LPAREN ID RPAREN
Rule 64    statement -> CONVERT LPAREN ID COMMA ID RPAREN
Rule 65    statement -> CHECKPUMPINGLEMMAREG LPAREN ID RPAREN
Rule 66    statement -> CHECKPUMPINGLEMMACFL LPAREN ID RPAREN
Rule 67    statement -> ISEQUIVALENT LPAREN ID COMMA ID RPAREN
Rule 68    show_type -> YES
Rule 69    show_type -> NO
Rule 70    show_type -> REGULAR
Rule 71    show_type -> ISNOTREGULAR
Rule 72    show_type -> CFL
Rule 73    show_type -> ISNOTCFL
Rule 74    show_type -> ACCEPT
Rule 75    show_type -> REJECT
Rule 76    statement -> SHOW LPAREN show_type RPAREN
Rule 77    statement -> UNION LPAREN ID COMMA ID RPAREN
Rule 78    statement -> INTERSECT LPAREN ID COMMA ID RPAREN
Rule 79    statement -> COMPLEMENT LPAREN ID RPAREN
Rule 80    statement -> DIFF LPAREN ID COMMA ID RPAREN
Rule 81    statement -> ISDFA LPAREN ID RPAREN
Rule 82    statement -> ISNFA LPAREN ID RPAREN
Rule 83    statement -> ISDPDA LPAREN ID RPAREN
Rule 84    statement -> ISNPDA LPAREN ID RPAREN
Rule 85    statement -> IF LPAREN condition RPAREN LBRACE statement RBRACE ELSE LBRACE statement RBRACE
Rule 86    statement -> IF LPAREN condition RPAREN LBRACE statement RBRACE ELSE IF LPAREN condition RPAREN LBRACE statement RBRACE
Rule 87    statement -> IF LPAREN condition RPAREN LBRACE statement RBRACE ELSE IF LPAREN condition RPAREN LBRACE statement RBRACE ELSE LBRACE statement RBRACE
Rule 88    statement -> IF LPAREN condition RPAREN LBRACE statement RBRACE
Rule 89    condition -> CHECKPUMPINGLEMMAREG
Rule 90    condition -> CHECKPUMPINGLEMMACFL
Rule 91    condition -> ISEQUIVALENT
Rule 92    condition -> ISDFA
Rule 93    condition -> ISNFA
Rule 94    condition -> ISDPDA
Rule 95    condition -> ISNPDA
Rule 96    statement -> SLCOMMENT
Rule 97    statement -> MLCOMMENT
Rule 98    statement -> DOCCOMMENT

Terminals, with rules where they appear

ACCEPT               : 74
ALPHABET             : 1
ARROW                : 37
CARET                : 51
CFG                  : 24
CFL                  : 72
CHECKPUMPINGLEMMACFL : 66 90
CHECKPUMPINGLEMMAREG : 65 89
COLON                : 5 6 9 12 15 15 15 16 16 16 16 16 16 23 27 30 33 34
COMMA                : 3 8 11 14 15 15 16 16 16 16 16 29 32 59 61 62 64 67 77 78 80
COMPLEMENT           : 79
CONCAT               : 61
CONVERT              : 64
DIFF                 : 80
DOCCOMMENT           : 98
DOLLAR               : 52
DOT                  : 50
ELSE                 : 85 86 87 87
EPSILON              : 40
EQUALS               : 1 4 41
FA                   : 17
FINAL                : 6
FROM                 : 15 16
ID                   : 1 2 3 4 5 7 8 10 11 15 15 15 16 16 16 16 16 16 17 20 23 24 28 29 31 32 33 37 38 39 41 58 59 59 60 61 61 62 63 64 64 65 66 67 67 77 77 78 78 79 80 80 81 82 83 84
IF                   : 85 86 86 87 87 88
INITIAL              : 5
INTERSECT            : 78
ISDFA                : 81 92
ISDPDA               : 83 94
ISEQUIVALENT         : 67 91
ISNFA                : 82 93
ISNOTCFL             : 73
ISNOTREGULAR         : 71
ISNPDA               : 84 95
KLEENE               : 63
LBRACE               : 1 5 6 9 12 15 16 17 20 24 27 30 34 56 85 85 86 86 87 87 87 88
LPAREN               : 17 20 24 54 58 59 60 61 62 63 64 65 66 67 76 77 78 79 80 81 82 83 84 85 86 86 87 87 88
LSQUARE              : 
MINIMIZE             : 58
MLCOMMENT            : 97
NO                   : 69
NONTERMINALS         : 27
NUMBER               : 62
ONN                  : 15 16
OR                   : 49
PDA                  : 20
PIPE                 : 39 40
PLUS                 : 48
POP                  : 16
POWER                : 62
PUSH                 : 16
QUESTION             : 53
RBRACE               : 1 5 6 9 12 15 16 17 20 24 27 30 34 57 85 85 86 86 87 87 87 88
RE                   : 41
REGEX_LITERAL_CHAR   : 46
REGULAR              : 70
REJECT               : 75
RPAREN               : 17 20 24 55 58 59 60 61 62 63 64 65 66 67 76 77 78 79 80 81 82 83 84 85 86 86 87 87 88
RSQUARE              : 
RULES                : 34
SEMICOLON            : 37
SHOW                 : 76
SIMULATE             : 59
SINGLEQUOTE          : 4 4 41 41
SLCOMMENT            : 96
STACK                : 16
STACK_INIT           : 23
STAR                 : 47
START                : 33
STATES               : 9
STR                  : 4
STRING               : 4
TERMINALS            : 30
TO                   : 15 16
TRANSITIONS          : 12
UNION                : 77
VISUALIZE            : 60
YES                  : 68
error                : 

Nonterminals, with rules where they appear

REGEX                : 41
REGEX_CHAR           : 43 44
REGEX_CONTENT        : 42 43
REGEX_SPECIAL_CHAR   : 45
alphabet_list        : 1 3
condition            : 85 86 86 87 87 88
final_list           : 6 8
nonterminals_list    : 27 29
rule                 : 35 36
rule_rhs             : 37 39 40
rules_list           : 34 36
show_type            : 76
statement            : 18 19 21 22 25 26 85 85 86 86 87 87 87 88 0
statement_list_cfg   : 24 26
statement_list_fa    : 17 19
statement_list_pda   : 20 22
states_list          : 9 11
terminals_list       : 30 32
transition           : 13 14
transitions_list     : 12 14

Parsing method: LALR

state 0

    (0) S' -> . statement
    (1) statement -> . ALPHABET ID EQUALS LBRACE alphabet_list RBRACE
    (4) statement -> . STR ID EQUALS SINGLEQUOTE STRING SINGLEQUOTE
    (5) statement -> . INITIAL COLON LBRACE ID RBRACE
    (6) statement -> . FINAL COLON LBRACE final_list RBRACE
    (9) statement -> . STATES COLON LBRACE states_list RBRACE
    (12) statement -> . TRANSITIONS COLON LBRACE transitions_list RBRACE
    (17) statement -> . FA ID LPAREN RPAREN LBRACE statement_list_fa RBRACE
    (20) statement -> . PDA ID LPAREN RPAREN LBRACE statement_list_pda RBRACE
    (23) statement -> . STACK_INIT COLON ID
    (24) statement -> . CFG ID LPAREN RPAREN LBRACE statement_list_cfg RBRACE
    (27) statement -> . NONTERMINALS COLON LBRACE nonterminals_list RBRACE
    (30) statement -> . TERMINALS COLON LBRACE terminals_list RBRACE
    (33) statement -> . START COLON ID
    (34) statement -> . RULES COLON LBRACE rules_list RBRACE
    (41) statement -> . RE ID EQUALS SINGLEQUOTE REGEX SINGLEQUOTE
    (58) statement -> . MINIMIZE LPAREN ID RPAREN
    (59) statement -> . SIMULATE LPAREN ID COMMA ID RPAREN
    (60) statement -> . VISUALIZE LPAREN ID RPAREN
    (61) statement -> . CONCAT LPAREN ID COMMA ID RPAREN
    (62) statement -> . POWER LPAREN ID COMMA NUMBER RPAREN
    (63) statement -> . KLEENE LPAREN ID RPAREN
    (64) statement -> . CONVERT LPAREN ID COMMA ID RPAREN
    (65) statement -> . CHECKPUMPINGLEMMAREG LPAREN ID RPAREN
    (66) statement -> . CHECKPUMPINGLEMMACFL LPAREN ID RPAREN
    (67) statement -> . ISEQUIVALENT LPAREN ID COMMA ID RPAREN
    (76) statement -> . SHOW LPAREN show_type RPAREN
    (77) statement -> . UNION LPAREN ID COMMA ID RPAREN
    (78) statement -> . INTERSECT LPAREN ID COMMA ID RPAREN
    (79) statement -> . COMPLEMENT LPAREN ID RPAREN
    (80) statement -> . DIFF LPAREN ID COMMA ID RPAREN
    (81) statement -> . ISDFA LPAREN ID RPAREN
    (82) statement -> . ISNFA LPAREN ID RPAREN
    (83) statement -> . ISDPDA LPAREN ID RPAREN
    (84) statement -> . ISNPDA LPAREN ID RPAREN
    (85) statement -> . IF LPAREN condition RPAREN LBRACE statement RBRACE ELSE LBRACE statement RBRACE
    (86) statement -> . IF LPAREN condition RPAREN LBRACE statement RBRACE ELSE IF LPAREN condition RPAREN LBRACE statement RBRACE
    (87) statement -> . IF LPAREN condition RPAREN LBRACE statement RBRACE ELSE IF LPAREN condition RPAREN LBRACE statement RBRACE ELSE LBRACE statement RBRACE
    (88) statement -> . IF LPAREN condition RPAREN LBRACE statement RBRACE
    (96) statement -> . SLCOMMENT
    (97) statement -> . MLCOMMENT
    (98) statement -> . DOCCOMMENT

    ALPHABET        shift and go to state 2
    STR             shift and go to state 3
    INITIAL         shift and go to state 4
    FINAL           shift and go to state 5
    STATES          shift and go to state 6
    TRANSITIONS     shift and go to state 7
    FA              shift and go to state 8
    PDA             shift and go to state 9
    STACK_INIT      shift and go to state 10
    CFG             shift and go to state 11
    NONTERMINALS    shift and go to state 12
    TERMINALS       shift and go to state 13
    START           shift and go to state 14
    RULES           shift and go to state 15
    RE              shift and go to state 16
    MINIMIZE        shift and go to state 17
    SIMULATE        shift and go to state 18
    VISUALIZE       shift and go to state 19
    CONCAT          shift and go to state 20
    POWER           shift and go to state 21
    KLEENE          shift and go to state 22
    CONVERT         shift and go to state 23
    CHECKPUMPINGLEMMAREG shift and go to state 24
    CHECKPUMPINGLEMMACFL shift and go to state 25
    ISEQUIVALENT    shift and go to state 26
    SHOW            shift and go to state 27
    UNION           shift and go to state 28
    INTERSECT       shift and go to state 29
    COMPLEMENT      shift and go to state 30
    DIFF            shift and go to state 31
    ISDFA           shift and go to state 32
    ISNFA           shift and go to state 33
    ISDPDA          shift and go to state 34
    ISNPDA          shift and go to state 35
    IF              shift and go to state 36
    SLCOMMENT       shift and go to state 37
    MLCOMMENT       shift and go to state 38
    DOCCOMMENT      shift and go to state 39

    statement                      shift and go to state 1

state 1

    (0) S' -> statement .



state 2

    (1) statement -> ALPHABET . ID EQUALS LBRACE alphabet_list RBRACE

    ID              shift and go to state 40


state 3

    (4) statement -> STR . ID EQUALS SINGLEQUOTE STRING SINGLEQUOTE

    ID              shift and go to state 41


state 4

    (5) statement -> INITIAL . COLON LBRACE ID RBRACE

    COLON           shift and go to state 42


state 5

    (6) statement -> FINAL . COLON LBRACE final_list RBRACE

    COLON           shift and go to state 43


state 6

    (9) statement -> STATES . COLON LBRACE states_list RBRACE

    COLON           shift and go to state 44


state 7

    (12) statement -> TRANSITIONS . COLON LBRACE transitions_list RBRACE

    COLON           shift and go to state 45


state 8

    (17) statement -> FA . ID LPAREN RPAREN LBRACE statement_list_fa RBRACE

    ID              shift and go to state 46


state 9

    (20) statement -> PDA . ID LPAREN RPAREN LBRACE statement_list_pda RBRACE

    ID              shift and go to state 47


state 10

    (23) statement -> STACK_INIT . COLON ID

    COLON           shift and go to state 48


state 11

    (24) statement -> CFG . ID LPAREN RPAREN LBRACE statement_list_cfg RBRACE

    ID              shift and go to state 49


state 12

    (27) statement -> NONTERMINALS . COLON LBRACE nonterminals_list RBRACE

    COLON           shift and go to state 50


state 13

    (30) statement -> TERMINALS . COLON LBRACE terminals_list RBRACE

    COLON           shift and go to state 51


state 14

    (33) statement -> START . COLON ID

    COLON           shift and go to state 52


state 15

    (34) statement -> RULES . COLON LBRACE rules_list RBRACE

    COLON           shift and go to state 53


state 16

    (41) statement -> RE . ID EQUALS SINGLEQUOTE REGEX SINGLEQUOTE

    ID              shift and go to state 54


state 17

    (58) statement -> MINIMIZE . LPAREN ID RPAREN

    LPAREN          shift and go to state 55


state 18

    (59) statement -> SIMULATE . LPAREN ID COMMA ID RPAREN

    LPAREN          shift and go to state 56


state 19

    (60) statement -> VISUALIZE . LPAREN ID RPAREN

    LPAREN          shift and go to state 57


state 20

    (61) statement -> CONCAT . LPAREN ID COMMA ID RPAREN

    LPAREN          shift and go to state 58


state 21

    (62) statement -> POWER . LPAREN ID COMMA NUMBER RPAREN

    LPAREN          shift and go to state 59


state 22

    (63) statement -> KLEENE . LPAREN ID RPAREN

    LPAREN          shift and go to state 60


state 23

    (64) statement -> CONVERT . LPAREN ID COMMA ID RPAREN

    LPAREN          shift and go to state 61


state 24

    (65) statement -> CHECKPUMPINGLEMMAREG . LPAREN ID RPAREN

    LPAREN          shift and go to state 62


state 25

    (66) statement -> CHECKPUMPINGLEMMACFL . LPAREN ID RPAREN

    LPAREN          shift and go to state 63


state 26

    (67) statement -> ISEQUIVALENT . LPAREN ID COMMA ID RPAREN

    LPAREN          shift and go to state 64


state 27

    (76) statement -> SHOW . LPAREN show_type RPAREN

    LPAREN          shift and go to state 65


state 28

    (77) statement -> UNION . LPAREN ID COMMA ID RPAREN

    LPAREN          shift and go to state 66


state 29

    (78) statement -> INTERSECT . LPAREN ID COMMA ID RPAREN

    LPAREN          shift and go to state 67


state 30

    (79) statement -> COMPLEMENT . LPAREN ID RPAREN

    LPAREN          shift and go to state 68


state 31

    (80) statement -> DIFF . LPAREN ID COMMA ID RPAREN

    LPAREN          shift and go to state 69


state 32

    (81) statement -> ISDFA . LPAREN ID RPAREN

    LPAREN          shift and go to state 70


state 33

    (82) statement -> ISNFA . LPAREN ID RPAREN

    LPAREN          shift and go to state 71


state 34

    (83) statement -> ISDPDA . LPAREN ID RPAREN

    LPAREN          shift and go to state 72


state 35

    (84) statement -> ISNPDA . LPAREN ID RPAREN

    LPAREN          shift and go to state 73


state 36

    (85) statement -> IF . LPAREN condition RPAREN LBRACE statement RBRACE ELSE LBRACE statement RBRACE
    (86) statement -> IF . LPAREN condition RPAREN LBRACE statement RBRACE ELSE IF LPAREN condition RPAREN LBRACE statement RBRACE
    (87) statement -> IF . LPAREN condition RPAREN LBRACE statement RBRACE ELSE IF LPAREN condition RPAREN LBRACE statement RBRACE ELSE LBRACE statement RBRACE
    (88) statement -> IF . LPAREN condition RPAREN LBRACE statement RBRACE

    LPAREN          shift and go to state 74


state 37

    (96) statement -> SLCOMMENT .

    $end            reduce using rule 96 (statement -> SLCOMMENT .)
    RBRACE          reduce using rule 96 (statement -> SLCOMMENT .)
    ALPHABET        reduce using rule 96 (statement -> SLCOMMENT .)
    STR             reduce using rule 96 (statement -> SLCOMMENT .)
    INITIAL         reduce using rule 96 (statement -> SLCOMMENT .)
    FINAL           reduce using rule 96 (statement -> SLCOMMENT .)
    STATES          reduce using rule 96 (statement -> SLCOMMENT .)
    TRANSITIONS     reduce using rule 96 (statement -> SLCOMMENT .)
    FA              reduce using rule 96 (statement -> SLCOMMENT .)
    PDA             reduce using rule 96 (statement -> SLCOMMENT .)
    STACK_INIT      reduce using rule 96 (statement -> SLCOMMENT .)
    CFG             reduce using rule 96 (statement -> SLCOMMENT .)
    NONTERMINALS    reduce using rule 96 (statement -> SLCOMMENT .)
    TERMINALS       reduce using rule 96 (statement -> SLCOMMENT .)
    START           reduce using rule 96 (statement -> SLCOMMENT .)
    RULES           reduce using rule 96 (statement -> SLCOMMENT .)
    RE              reduce using rule 96 (statement -> SLCOMMENT .)
    MINIMIZE        reduce using rule 96 (statement -> SLCOMMENT .)
    SIMULATE        reduce using rule 96 (statement -> SLCOMMENT .)
    VISUALIZE       reduce using rule 96 (statement -> SLCOMMENT .)
    CONCAT          reduce using rule 96 (statement -> SLCOMMENT .)
    POWER           reduce using rule 96 (statement -> SLCOMMENT .)
    KLEENE          reduce using rule 96 (statement -> SLCOMMENT .)
    CONVERT         reduce using rule 96 (statement -> SLCOMMENT .)
    CHECKPUMPINGLEMMAREG reduce using rule 96 (statement -> SLCOMMENT .)
    CHECKPUMPINGLEMMACFL reduce using rule 96 (statement -> SLCOMMENT .)
    ISEQUIVALENT    reduce using rule 96 (statement -> SLCOMMENT .)
    SHOW            reduce using rule 96 (statement -> SLCOMMENT .)
    UNION           reduce using rule 96 (statement -> SLCOMMENT .)
    INTERSECT       reduce using rule 96 (statement -> SLCOMMENT .)
    COMPLEMENT      reduce using rule 96 (statement -> SLCOMMENT .)
    DIFF            reduce using rule 96 (statement -> SLCOMMENT .)
    ISDFA           reduce using rule 96 (statement -> SLCOMMENT .)
    ISNFA           reduce using rule 96 (statement -> SLCOMMENT .)
    ISDPDA          reduce using rule 96 (statement -> SLCOMMENT .)
    ISNPDA          reduce using rule 96 (statement -> SLCOMMENT .)
    IF              reduce using rule 96 (statement -> SLCOMMENT .)
    SLCOMMENT       reduce using rule 96 (statement -> SLCOMMENT .)
    MLCOMMENT       reduce using rule 96 (statement -> SLCOMMENT .)
    DOCCOMMENT      reduce using rule 96 (statement -> SLCOMMENT .)


state 38

    (97) statement -> MLCOMMENT .

    $end            reduce using rule 97 (statement -> MLCOMMENT .)
    RBRACE          reduce using rule 97 (statement -> MLCOMMENT .)
    ALPHABET        reduce using rule 97 (statement -> MLCOMMENT .)
    STR             reduce using rule 97 (statement -> MLCOMMENT .)
    INITIAL         reduce using rule 97 (statement -> MLCOMMENT .)
    FINAL           reduce using rule 97 (statement -> MLCOMMENT .)
    STATES          reduce using rule 97 (statement -> MLCOMMENT .)
    TRANSITIONS     reduce using rule 97 (statement -> MLCOMMENT .)
    FA              reduce using rule 97 (statement -> MLCOMMENT .)
    PDA             reduce using rule 97 (statement -> MLCOMMENT .)
    STACK_INIT      reduce using rule 97 (statement -> MLCOMMENT .)
    CFG             reduce using rule 97 (statement -> MLCOMMENT .)
    NONTERMINALS    reduce using rule 97 (statement -> MLCOMMENT .)
    TERMINALS       reduce using rule 97 (statement -> MLCOMMENT .)
    START           reduce using rule 97 (statement -> MLCOMMENT .)
    RULES           reduce using rule 97 (statement -> MLCOMMENT .)
    RE              reduce using rule 97 (statement -> MLCOMMENT .)
    MINIMIZE        reduce using rule 97 (statement -> MLCOMMENT .)
    SIMULATE        reduce using rule 97 (statement -> MLCOMMENT .)
    VISUALIZE       reduce using rule 97 (statement -> MLCOMMENT .)
    CONCAT          reduce using rule 97 (statement -> MLCOMMENT .)
    POWER           reduce using rule 97 (statement -> MLCOMMENT .)
    KLEENE          reduce using rule 97 (statement -> MLCOMMENT .)
    CONVERT         reduce using rule 97 (statement -> MLCOMMENT .)
    CHECKPUMPINGLEMMAREG reduce using rule 97 (statement -> MLCOMMENT .)
    CHECKPUMPINGLEMMACFL reduce using rule 97 (statement -> MLCOMMENT .)
    ISEQUIVALENT    reduce using rule 97 (statement -> MLCOMMENT .)
    SHOW            reduce using rule 97 (statement -> MLCOMMENT .)
    UNION           reduce using rule 97 (statement -> MLCOMMENT .)
    INTERSECT       reduce using rule 97 (statement -> MLCOMMENT .)
    COMPLEMENT      reduce using rule 97 (statement -> MLCOMMENT .)
    DIFF            reduce using rule 97 (statement -> MLCOMMENT .)
    ISDFA           reduce using rule 97 (statement -> MLCOMMENT .)
    ISNFA           reduce using rule 97 (statement -> MLCOMMENT .)
    ISDPDA          reduce using rule 97 (statement -> MLCOMMENT .)
    ISNPDA          reduce using rule 97 (statement -> MLCOMMENT .)
    IF              reduce using rule 97 (statement -> MLCOMMENT .)
    SLCOMMENT       reduce using rule 97 (statement -> MLCOMMENT .)
    MLCOMMENT       reduce using rule 97 (statement -> MLCOMMENT .)
    DOCCOMMENT      reduce using rule 97 (statement -> MLCOMMENT .)


state 39

    (98) statement -> DOCCOMMENT .

    $end            reduce using rule 98 (statement -> DOCCOMMENT .)
    RBRACE          reduce using rule 98 (statement -> DOCCOMMENT .)
    ALPHABET        reduce using rule 98 (statement -> DOCCOMMENT .)
    STR             reduce using rule 98 (statement -> DOCCOMMENT .)
    INITIAL         reduce using rule 98 (statement -> DOCCOMMENT .)
    FINAL           reduce using rule 98 (statement -> DOCCOMMENT .)
    STATES          reduce using rule 98 (statement -> DOCCOMMENT .)
    TRANSITIONS     reduce using rule 98 (statement -> DOCCOMMENT .)
    FA              reduce using rule 98 (statement -> DOCCOMMENT .)
    PDA             reduce using rule 98 (statement -> DOCCOMMENT .)
    STACK_INIT      reduce using rule 98 (statement -> DOCCOMMENT .)
    CFG             reduce using rule 98 (statement -> DOCCOMMENT .)
    NONTERMINALS    reduce using rule 98 (statement -> DOCCOMMENT .)
    TERMINALS       reduce using rule 98 (statement -> DOCCOMMENT .)
    START           reduce using rule 98 (statement -> DOCCOMMENT .)
    RULES           reduce using rule 98 (statement -> DOCCOMMENT .)
    RE              reduce using rule 98 (statement -> DOCCOMMENT .)
    MINIMIZE        reduce using rule 98 (statement -> DOCCOMMENT .)
    SIMULATE        reduce using rule 98 (statement -> DOCCOMMENT .)
    VISUALIZE       reduce using rule 98 (statement -> DOCCOMMENT .)
    CONCAT          reduce using rule 98 (statement -> DOCCOMMENT .)
    POWER           reduce using rule 98 (statement -> DOCCOMMENT .)
    KLEENE          reduce using rule 98 (statement -> DOCCOMMENT .)
    CONVERT         reduce using rule 98 (statement -> DOCCOMMENT .)
    CHECKPUMPINGLEMMAREG reduce using rule 98 (statement -> DOCCOMMENT .)
    CHECKPUMPINGLEMMACFL reduce using rule 98 (statement -> DOCCOMMENT .)
    ISEQUIVALENT    reduce using rule 98 (statement -> DOCCOMMENT .)
    SHOW            reduce using rule 98 (statement -> DOCCOMMENT .)
    UNION           reduce using rule 98 (statement -> DOCCOMMENT .)
    INTERSECT       reduce using rule 98 (statement -> DOCCOMMENT .)
    COMPLEMENT      reduce using rule 98 (statement -> DOCCOMMENT .)
    DIFF            reduce using rule 98 (statement -> DOCCOMMENT .)
    ISDFA           reduce using rule 98 (statement -> DOCCOMMENT .)
    ISNFA           reduce using rule 98 (statement -> DOCCOMMENT .)
    ISDPDA          reduce using rule 98 (statement -> DOCCOMMENT .)
    ISNPDA          reduce using rule 98 (statement -> DOCCOMMENT .)
    IF              reduce using rule 98 (statement -> DOCCOMMENT .)
    SLCOMMENT       reduce using rule 98 (statement -> DOCCOMMENT .)
    MLCOMMENT       reduce using rule 98 (statement -> DOCCOMMENT .)
    DOCCOMMENT      reduce using rule 98 (statement -> DOCCOMMENT .)


state 40

    (1) statement -> ALPHABET ID . EQUALS LBRACE alphabet_list RBRACE

    EQUALS          shift and go to state 75


state 41

    (4) statement -> STR ID . EQUALS SINGLEQUOTE STRING SINGLEQUOTE

    EQUALS          shift and go to state 76


state 42

    (5) statement -> INITIAL COLON . LBRACE ID RBRACE

    LBRACE          shift and go to state 77


state 43

    (6) statement -> FINAL COLON . LBRACE final_list RBRACE

    LBRACE          shift and go to state 78


state 44

    (9) statement -> STATES COLON . LBRACE states_list RBRACE

    LBRACE          shift and go to state 79


state 45

    (12) statement -> TRANSITIONS COLON . LBRACE transitions_list RBRACE

    LBRACE          shift and go to state 80


state 46

    (17) statement -> FA ID . LPAREN RPAREN LBRACE statement_list_fa RBRACE

    LPAREN          shift and go to state 81


state 47

    (20) statement -> PDA ID . LPAREN RPAREN LBRACE statement_list_pda RBRACE

    LPAREN          shift and go to state 82


state 48

    (23) statement -> STACK_INIT COLON . ID

    ID              shift and go to state 83


state 49

    (24) statement -> CFG ID . LPAREN RPAREN LBRACE statement_list_cfg RBRACE

    LPAREN          shift and go to state 84


state 50

    (27) statement -> NONTERMINALS COLON . LBRACE nonterminals_list RBRACE

    LBRACE          shift and go to state 85


state 51

    (30) statement -> TERMINALS COLON . LBRACE terminals_list RBRACE

    LBRACE          shift and go to state 86


state 52

    (33) statement -> START COLON . ID

    ID              shift and go to state 87


state 53

    (34) statement -> RULES COLON . LBRACE rules_list RBRACE

    LBRACE          shift and go to state 88


state 54

    (41) statement -> RE ID . EQUALS SINGLEQUOTE REGEX SINGLEQUOTE

    EQUALS          shift and go to state 89


state 55

    (58) statement -> MINIMIZE LPAREN . ID RPAREN

    ID              shift and go to state 90


state 56

    (59) statement -> SIMULATE LPAREN . ID COMMA ID RPAREN

    ID              shift and go to state 91


state 57

    (60) statement -> VISUALIZE LPAREN . ID RPAREN

    ID              shift and go to state 92


state 58

    (61) statement -> CONCAT LPAREN . ID COMMA ID RPAREN

    ID              shift and go to state 93


state 59

    (62) statement -> POWER LPAREN . ID COMMA NUMBER RPAREN

    ID              shift and go to state 94


state 60

    (63) statement -> KLEENE LPAREN . ID RPAREN

    ID              shift and go to state 95


state 61

    (64) statement -> CONVERT LPAREN . ID COMMA ID RPAREN

    ID              shift and go to state 96


state 62

    (65) statement -> CHECKPUMPINGLEMMAREG LPAREN . ID RPAREN

    ID              shift and go to state 97


state 63

    (66) statement -> CHECKPUMPINGLEMMACFL LPAREN . ID RPAREN

    ID              shift and go to state 98


state 64

    (67) statement -> ISEQUIVALENT LPAREN . ID COMMA ID RPAREN

    ID              shift and go to state 99


state 65

    (76) statement -> SHOW LPAREN . show_type RPAREN
    (68) show_type -> . YES
    (69) show_type -> . NO
    (70) show_type -> . REGULAR
    (71) show_type -> . ISNOTREGULAR
    (72) show_type -> . CFL
    (73) show_type -> . ISNOTCFL
    (74) show_type -> . ACCEPT
    (75) show_type -> . REJECT

    YES             shift and go to state 101
    NO              shift and go to state 102
    REGULAR         shift and go to state 103
    ISNOTREGULAR    shift and go to state 104
    CFL             shift and go to state 105
    ISNOTCFL        shift and go to state 106
    ACCEPT          shift and go to state 107
    REJECT          shift and go to state 108

    show_type                      shift and go to state 100

state 66

    (77) statement -> UNION LPAREN . ID COMMA ID RPAREN

    ID              shift and go to state 109


state 67

    (78) statement -> INTERSECT LPAREN . ID COMMA ID RPAREN

    ID              shift and go to state 110


state 68

    (79) statement -> COMPLEMENT LPAREN . ID RPAREN

    ID              shift and go to state 111


state 69

    (80) statement -> DIFF LPAREN . ID COMMA ID RPAREN

    ID              shift and go to state 112


state 70

    (81) statement -> ISDFA LPAREN . ID RPAREN

    ID              shift and go to state 113


state 71

    (82) statement -> ISNFA LPAREN . ID RPAREN

    ID              shift and go to state 114


state 72

    (83) statement -> ISDPDA LPAREN . ID RPAREN

    ID              shift and go to state 115


state 73

    (84) statement -> ISNPDA LPAREN . ID RPAREN

    ID              shift and go to state 116


state 74

    (85) statement -> IF LPAREN . condition RPAREN LBRACE statement RBRACE ELSE LBRACE statement RBRACE
    (86) statement -> IF LPAREN . condition RPAREN LBRACE statement RBRACE ELSE IF LPAREN condition RPAREN LBRACE statement RBRACE
    (87) statement -> IF LPAREN . condition RPAREN LBRACE statement RBRACE ELSE IF LPAREN condition RPAREN LBRACE statement RBRACE ELSE LBRACE statement RBRACE
    (88) statement -> IF LPAREN . condition RPAREN LBRACE statement RBRACE
    (89) condition -> . CHECKPUMPINGLEMMAREG
    (90) condition -> . CHECKPUMPINGLEMMACFL
    (91) condition -> . ISEQUIVALENT
    (92) condition -> . ISDFA
    (93) condition -> . ISNFA
    (94) condition -> . ISDPDA
    (95) condition -> . ISNPDA

    CHECKPUMPINGLEMMAREG shift and go to state 118
    CHECKPUMPINGLEMMACFL shift and go to state 119
    ISEQUIVALENT    shift and go to state 120
    ISDFA           shift and go to state 121
    ISNFA           shift and go to state 122
    ISDPDA          shift and go to state 123
    ISNPDA          shift and go to state 124

    condition                      shift and go to state 117

state 75

    (1) statement -> ALPHABET ID EQUALS . LBRACE alphabet_list RBRACE

    LBRACE          shift and go to state 125


state 76

    (4) statement -> STR ID EQUALS . SINGLEQUOTE STRING SINGLEQUOTE

    SINGLEQUOTE     shift and go to state 126


state 77

    (5) statement -> INITIAL COLON LBRACE . ID RBRACE

    ID              shift and go to state 127


state 78

    (6) statement -> FINAL COLON LBRACE . final_list RBRACE
    (7) final_list -> . ID
    (8) final_list -> . final_list COMMA ID

    ID              shift and go to state 129

    final_list                     shift and go to state 128

state 79

    (9) statement -> STATES COLON LBRACE . states_list RBRACE
    (10) states_list -> . ID
    (11) states_list -> . states_list COMMA ID

    ID              shift and go to state 131

    states_list                    shift and go to state 130

state 80

    (12) statement -> TRANSITIONS COLON LBRACE . transitions_list RBRACE
    (13) transitions_list -> . transition
    (14) transitions_list -> . transitions_list COMMA transition
    (15) transition -> . LBRACE FROM COLON ID COMMA TO COLON ID COMMA ONN COLON ID RBRACE
    (16) transition -> . LBRACE FROM COLON ID COMMA TO COLON ID COMMA ONN COLON ID COMMA POP COLON ID COMMA PUSH COLON ID COMMA STACK COLON ID RBRACE

    LBRACE          shift and go to state 132

    transitions_list               shift and go to state 133
    transition                     shift and go to state 134

state 81

    (17) statement -> FA ID LPAREN . RPAREN LBRACE statement_list_fa RBRACE

    RPAREN          shift and go to state 135


state 82

    (20) statement -> PDA ID LPAREN . RPAREN LBRACE statement_list_pda RBRACE

    RPAREN          shift and go to state 136


state 83

    (23) statement -> STACK_INIT COLON ID .

    $end            reduce using rule 23 (statement -> STACK_INIT COLON ID .)
    RBRACE          reduce using rule 23 (statement -> STACK_INIT COLON ID .)
    ALPHABET        reduce using rule 23 (statement -> STACK_INIT COLON ID .)
    STR             reduce using rule 23 (statement -> STACK_INIT COLON ID .)
    INITIAL         reduce using rule 23 (statement -> STACK_INIT COLON ID .)
    FINAL           reduce using rule 23 (statement -> STACK_INIT COLON ID .)
    STATES          reduce using rule 23 (statement -> STACK_INIT COLON ID .)
    TRANSITIONS     reduce using rule 23 (statement -> STACK_INIT COLON ID .)
    FA              reduce using rule 23 (statement -> STACK_INIT COLON ID .)
    PDA             reduce using rule 23 (statement -> STACK_INIT COLON ID .)
    STACK_INIT      reduce using rule 23 (statement -> STACK_INIT COLON ID .)
    CFG             reduce using rule 23 (statement -> STACK_INIT COLON ID .)
    NONTERMINALS    reduce using rule 23 (statement -> STACK_INIT COLON ID .)
    TERMINALS       reduce using rule 23 (statement -> STACK_INIT COLON ID .)
    START           reduce using rule 23 (statement -> STACK_INIT COLON ID .)
    RULES           reduce using rule 23 (statement -> STACK_INIT COLON ID .)
    RE              reduce using rule 23 (statement -> STACK_INIT COLON ID .)
    MINIMIZE        reduce using rule 23 (statement -> STACK_INIT COLON ID .)
    SIMULATE        reduce using rule 23 (statement -> STACK_INIT COLON ID .)
    VISUALIZE       reduce using rule 23 (statement -> STACK_INIT COLON ID .)
    CONCAT          reduce using rule 23 (statement -> STACK_INIT COLON ID .)
    POWER           reduce using rule 23 (statement -> STACK_INIT COLON ID .)
    KLEENE          reduce using rule 23 (statement -> STACK_INIT COLON ID .)
    CONVERT         reduce using rule 23 (statement -> STACK_INIT COLON ID .)
    CHECKPUMPINGLEMMAREG reduce using rule 23 (statement -> STACK_INIT COLON ID .)
    CHECKPUMPINGLEMMACFL reduce using rule 23 (statement -> STACK_INIT COLON ID .)
    ISEQUIVALENT    reduce using rule 23 (statement -> STACK_INIT COLON ID .)
    SHOW            reduce using rule 23 (statement -> STACK_INIT COLON ID .)
    UNION           reduce using rule 23 (statement -> STACK_INIT COLON ID .)
    INTERSECT       reduce using rule 23 (statement -> STACK_INIT COLON ID .)
    COMPLEMENT      reduce using rule 23 (statement -> STACK_INIT COLON ID .)
    DIFF            reduce using rule 23 (statement -> STACK_INIT COLON ID .)
    ISDFA           reduce using rule 23 (statement -> STACK_INIT COLON ID .)
    ISNFA           reduce using rule 23 (statement -> STACK_INIT COLON ID .)
    ISDPDA          reduce using rule 23 (statement -> STACK_INIT COLON ID .)
    ISNPDA          reduce using rule 23 (statement -> STACK_INIT COLON ID .)
    IF              reduce using rule 23 (statement -> STACK_INIT COLON ID .)
    SLCOMMENT       reduce using rule 23 (statement -> STACK_INIT COLON ID .)
    MLCOMMENT       reduce using rule 23 (statement -> STACK_INIT COLON ID .)
    DOCCOMMENT      reduce using rule 23 (statement -> STACK_INIT COLON ID .)


state 84

    (24) statement -> CFG ID LPAREN . RPAREN LBRACE statement_list_cfg RBRACE

    RPAREN          shift and go to state 137


state 85

    (27) statement -> NONTERMINALS COLON LBRACE . nonterminals_list RBRACE
    (28) nonterminals_list -> . ID
    (29) nonterminals_list -> . nonterminals_list COMMA ID

    ID              shift and go to state 139

    nonterminals_list              shift and go to state 138

state 86

    (30) statement -> TERMINALS COLON LBRACE . terminals_list RBRACE
    (31) terminals_list -> . ID
    (32) terminals_list -> . terminals_list COMMA ID

    ID              shift and go to state 141

    terminals_list                 shift and go to state 140

state 87

    (33) statement -> START COLON ID .

    $end            reduce using rule 33 (statement -> START COLON ID .)
    RBRACE          reduce using rule 33 (statement -> START COLON ID .)
    ALPHABET        reduce using rule 33 (statement -> START COLON ID .)
    STR             reduce using rule 33 (statement -> START COLON ID .)
    INITIAL         reduce using rule 33 (statement -> START COLON ID .)
    FINAL           reduce using rule 33 (statement -> START COLON ID .)
    STATES          reduce using rule 33 (statement -> START COLON ID .)
    TRANSITIONS     reduce using rule 33 (statement -> START COLON ID .)
    FA              reduce using rule 33 (statement -> START COLON ID .)
    PDA             reduce using rule 33 (statement -> START COLON ID .)
    STACK_INIT      reduce using rule 33 (statement -> START COLON ID .)
    CFG             reduce using rule 33 (statement -> START COLON ID .)
    NONTERMINALS    reduce using rule 33 (statement -> START COLON ID .)
    TERMINALS       reduce using rule 33 (statement -> START COLON ID .)
    START           reduce using rule 33 (statement -> START COLON ID .)
    RULES           reduce using rule 33 (statement -> START COLON ID .)
    RE              reduce using rule 33 (statement -> START COLON ID .)
    MINIMIZE        reduce using rule 33 (statement -> START COLON ID .)
    SIMULATE        reduce using rule 33 (statement -> START COLON ID .)
    VISUALIZE       reduce using rule 33 (statement -> START COLON ID .)
    CONCAT          reduce using rule 33 (statement -> START COLON ID .)
    POWER           reduce using rule 33 (statement -> START COLON ID .)
    KLEENE          reduce using rule 33 (statement -> START COLON ID .)
    CONVERT         reduce using rule 33 (statement -> START COLON ID .)
    CHECKPUMPINGLEMMAREG reduce using rule 33 (statement -> START COLON ID .)
    CHECKPUMPINGLEMMACFL reduce using rule 33 (statement -> START COLON ID .)
    ISEQUIVALENT    reduce using rule 33 (statement -> START COLON ID .)
    SHOW            reduce using rule 33 (statement -> START COLON ID .)
    UNION           reduce using rule 33 (statement -> START COLON ID .)
    INTERSECT       reduce using rule 33 (statement -> START COLON ID .)
    COMPLEMENT      reduce using rule 33 (statement -> START COLON ID .)
    DIFF            reduce using rule 33 (statement -> START COLON ID .)
    ISDFA           reduce using rule 33 (statement -> START COLON ID .)
    ISNFA           reduce using rule 33 (statement -> START COLON ID .)
    ISDPDA          reduce using rule 33 (statement -> START COLON ID .)
    ISNPDA          reduce using rule 33 (statement -> START COLON ID .)
    IF              reduce using rule 33 (statement -> START COLON ID .)
    SLCOMMENT       reduce using rule 33 (statement -> START COLON ID .)
    MLCOMMENT       reduce using rule 33 (statement -> START COLON ID .)
    DOCCOMMENT      reduce using rule 33 (statement -> START COLON ID .)


state 88

    (34) statement -> RULES COLON LBRACE . rules_list RBRACE
    (35) rules_list -> . rule
    (36) rules_list -> . rules_list rule
    (37) rule -> . ID ARROW rule_rhs SEMICOLON

    ID              shift and go to state 144

    rules_list                     shift and go to state 142
    rule                           shift and go to state 143

state 89

    (41) statement -> RE ID EQUALS . SINGLEQUOTE REGEX SINGLEQUOTE

    SINGLEQUOTE     shift and go to state 145


state 90

    (58) statement -> MINIMIZE LPAREN ID . RPAREN

    RPAREN          shift and go to state 146


state 91

    (59) statement -> SIMULATE LPAREN ID . COMMA ID RPAREN

    COMMA           shift and go to state 147


state 92

    (60) statement -> VISUALIZE LPAREN ID . RPAREN

    RPAREN          shift and go to state 148


state 93

    (61) statement -> CONCAT LPAREN ID . COMMA ID RPAREN

    COMMA           shift and go to state 149


state 94

    (62) statement -> POWER LPAREN ID . COMMA NUMBER RPAREN

    COMMA           shift and go to state 150


state 95

    (63) statement -> KLEENE LPAREN ID . RPAREN

    RPAREN          shift and go to state 151


state 96

    (64) statement -> CONVERT LPAREN ID . COMMA ID RPAREN

    COMMA           shift and go to state 152


state 97

    (65) statement -> CHECKPUMPINGLEMMAREG LPAREN ID . RPAREN

    RPAREN          shift and go to state 153


state 98

    (66) statement -> CHECKPUMPINGLEMMACFL LPAREN ID . RPAREN

    RPAREN          shift and go to state 154


state 99

    (67) statement -> ISEQUIVALENT LPAREN ID . COMMA ID RPAREN

    COMMA           shift and go to state 155


state 100

    (76) statement -> SHOW LPAREN show_type . RPAREN

    RPAREN          shift and go to state 156


state 101

    (68) show_type -> YES .

    RPAREN          reduce using rule 68 (show_type -> YES .)


state 102

    (69) show_type -> NO .

    RPAREN          reduce using rule 69 (show_type -> NO .)


state 103

    (70) show_type -> REGULAR .

    RPAREN          reduce using rule 70 (show_type -> REGULAR .)


state 104

    (71) show_type -> ISNOTREGULAR .

    RPAREN          reduce using rule 71 (show_type -> ISNOTREGULAR .)


state 105

    (72) show_type -> CFL .

    RPAREN          reduce using rule 72 (show_type -> CFL .)


state 106

    (73) show_type -> ISNOTCFL .

    RPAREN          reduce using rule 73 (show_type -> ISNOTCFL .)


state 107

    (74) show_type -> ACCEPT .

    RPAREN          reduce using rule 74 (show_type -> ACCEPT .)


state 108

    (75) show_type -> REJECT .

    RPAREN          reduce using rule 75 (show_type -> REJECT .)


state 109

    (77) statement -> UNION LPAREN ID . COMMA ID RPAREN

    COMMA           shift and go to state 157


state 110

    (78) statement -> INTERSECT LPAREN ID . COMMA ID RPAREN

    COMMA           shift and go to state 158


state 111

    (79) statement -> COMPLEMENT LPAREN ID . RPAREN

    RPAREN          shift and go to state 159


state 112

    (80) statement -> DIFF LPAREN ID . COMMA ID RPAREN

    COMMA           shift and go to state 160


state 113

    (81) statement -> ISDFA LPAREN ID . RPAREN

    RPAREN          shift and go to state 161


state 114

    (82) statement -> ISNFA LPAREN ID . RPAREN

    RPAREN          shift and go to state 162


state 115

    (83) statement -> ISDPDA LPAREN ID . RPAREN

    RPAREN          shift and go to state 163


state 116

    (84) statement -> ISNPDA LPAREN ID . RPAREN

    RPAREN          shift and go to state 164


state 117

    (85) statement -> IF LPAREN condition . RPAREN LBRACE statement RBRACE ELSE LBRACE statement RBRACE
    (86) statement -> IF LPAREN condition . RPAREN LBRACE statement RBRACE ELSE IF LPAREN condition RPAREN LBRACE statement RBRACE
    (87) statement -> IF LPAREN condition . RPAREN LBRACE statement RBRACE ELSE IF LPAREN condition RPAREN LBRACE statement RBRACE ELSE LBRACE statement RBRACE
    (88) statement -> IF LPAREN condition . RPAREN LBRACE statement RBRACE

    RPAREN          shift and go to state 165


state 118

    (89) condition -> CHECKPUMPINGLEMMAREG .

    RPAREN          reduce using rule 89 (condition -> CHECKPUMPINGLEMMAREG .)


state 119

    (90) condition -> CHECKPUMPINGLEMMACFL .

    RPAREN          reduce using rule 90 (condition -> CHECKPUMPINGLEMMACFL .)


state 120

    (91) condition -> ISEQUIVALENT .

    RPAREN          reduce using rule 91 (condition -> ISEQUIVALENT .)


state 121

    (92) condition -> ISDFA .

    RPAREN          reduce using rule 92 (condition -> ISDFA .)


state 122

    (93) condition -> ISNFA .

    RPAREN          reduce using rule 93 (condition -> ISNFA .)


state 123

    (94) condition -> ISDPDA .

    RPAREN          reduce using rule 94 (condition -> ISDPDA .)


state 124

    (95) condition -> ISNPDA .

    RPAREN          reduce using rule 95 (condition -> ISNPDA .)


state 125

    (1) statement -> ALPHABET ID EQUALS LBRACE . alphabet_list RBRACE
    (2) alphabet_list -> . ID
    (3) alphabet_list -> . alphabet_list COMMA ID

    ID              shift and go to state 166

    alphabet_list                  shift and go to state 167

state 126

    (4) statement -> STR ID EQUALS SINGLEQUOTE . STRING SINGLEQUOTE

    STRING          shift and go to state 168


state 127

    (5) statement -> INITIAL COLON LBRACE ID . RBRACE

    RBRACE          shift and go to state 169


state 128

    (6) statement -> FINAL COLON LBRACE final_list . RBRACE
    (8) final_list -> final_list . COMMA ID

    RBRACE          shift and go to state 170
    COMMA           shift and go to state 171


state 129

    (7) final_list -> ID .

    RBRACE          reduce using rule 7 (final_list -> ID .)
    COMMA           reduce using rule 7 (final_list -> ID .)


state 130

    (9) statement -> STATES COLON LBRACE states_list . RBRACE
    (11) states_list -> states_list . COMMA ID

    RBRACE          shift and go to state 172
    COMMA           shift and go to state 173


state 131

    (10) states_list -> ID .

    RBRACE          reduce using rule 10 (states_list -> ID .)
    COMMA           reduce using rule 10 (states_list -> ID .)


state 132

    (15) transition -> LBRACE . FROM COLON ID COMMA TO COLON ID COMMA ONN COLON ID RBRACE
    (16) transition -> LBRACE . FROM COLON ID COMMA TO COLON ID COMMA ONN COLON ID COMMA POP COLON ID COMMA PUSH COLON ID COMMA STACK COLON ID RBRACE

    FROM            shift and go to state 174


state 133

    (12) statement -> TRANSITIONS COLON LBRACE transitions_list . RBRACE
    (14) transitions_list -> transitions_list . COMMA transition

    RBRACE          shift and go to state 175
    COMMA           shift and go to state 176


state 134

    (13) transitions_list -> transition .

    RBRACE          reduce using rule 13 (transitions_list -> transition .)
    COMMA           reduce using rule 13 (transitions_list -> transition .)


state 135

    (17) statement -> FA ID LPAREN RPAREN . LBRACE statement_list_fa RBRACE

    LBRACE          shift and go to state 177


state 136

    (20) statement -> PDA ID LPAREN RPAREN . LBRACE statement_list_pda RBRACE

    LBRACE          shift and go to state 178


state 137

    (24) statement -> CFG ID LPAREN RPAREN . LBRACE statement_list_cfg RBRACE

    LBRACE          shift and go to state 179


state 138

    (27) statement -> NONTERMINALS COLON LBRACE nonterminals_list . RBRACE
    (29) nonterminals_list -> nonterminals_list . COMMA ID

    RBRACE          shift and go to state 180
    COMMA           shift and go to state 181


state 139

    (28) nonterminals_list -> ID .

    RBRACE          reduce using rule 28 (nonterminals_list -> ID .)
    COMMA           reduce using rule 28 (nonterminals_list -> ID .)


state 140

    (30) statement -> TERMINALS COLON LBRACE terminals_list . RBRACE
    (32) terminals_list -> terminals_list . COMMA ID

    RBRACE          shift and go to state 182
    COMMA           shift and go to state 183


state 141

    (31) terminals_list -> ID .

    RBRACE          reduce using rule 31 (terminals_list -> ID .)
    COMMA           reduce using rule 31 (terminals_list -> ID .)


state 142

    (34) statement -> RULES COLON LBRACE rules_list . RBRACE
    (36) rules_list -> rules_list . rule
    (37) rule -> . ID ARROW rule_rhs SEMICOLON

    RBRACE          shift and go to state 184
    ID              shift and go to state 144

    rule                           shift and go to state 185

state 143

    (35) rules_list -> rule .

    RBRACE          reduce using rule 35 (rules_list -> rule .)
    ID              reduce using rule 35 (rules_list -> rule .)


state 144

    (37) rule -> ID . ARROW rule_rhs SEMICOLON

    ARROW           shift and go to state 186


state 145

    (41) statement -> RE ID EQUALS SINGLEQUOTE . REGEX SINGLEQUOTE
    (42) REGEX -> . REGEX_CONTENT
    (43) REGEX_CONTENT -> . REGEX_CONTENT REGEX_CHAR
    (44) REGEX_CONTENT -> . REGEX_CHAR
    (45) REGEX_CHAR -> . REGEX_SPECIAL_CHAR
    (46) REGEX_CHAR -> . REGEX_LITERAL_CHAR
    (47) REGEX_SPECIAL_CHAR -> . STAR
    (48) REGEX_SPECIAL_CHAR -> . PLUS
    (49) REGEX_SPECIAL_CHAR -> . OR
    (50) REGEX_SPECIAL_CHAR -> . DOT
    (51) REGEX_SPECIAL_CHAR -> . CARET
    (52) REGEX_SPECIAL_CHAR -> . DOLLAR
    (53) REGEX_SPECIAL_CHAR -> . QUESTION
    (54) REGEX_SPECIAL_CHAR -> . LPAREN
    (55) REGEX_SPECIAL_CHAR -> . RPAREN
    (56) REGEX_SPECIAL_CHAR -> . LBRACE
    (57) REGEX_SPECIAL_CHAR -> . RBRACE

    REGEX_LITERAL_CHAR shift and go to state 191
    STAR            shift and go to state 192
    PLUS            shift and go to state 193
    OR              shift and go to state 194
    DOT             shift and go to state 195
    CARET           shift and go to state 196
    DOLLAR          shift and go to state 197
    QUESTION        shift and go to state 198
    LPAREN          shift and go to state 199
    RPAREN          shift and go to state 200
    LBRACE          shift and go to state 201
    RBRACE          shift and go to state 202

    REGEX                          shift and go to state 187
    REGEX_CONTENT                  shift and go to state 188
    REGEX_CHAR                     shift and go to state 189
    REGEX_SPECIAL_CHAR             shift and go to state 190

state 146

    (58) statement -> MINIMIZE LPAREN ID RPAREN .

    $end            reduce using rule 58 (statement -> MINIMIZE LPAREN ID RPAREN .)
    RBRACE          reduce using rule 58 (statement -> MINIMIZE LPAREN ID RPAREN .)
    ALPHABET        reduce using rule 58 (statement -> MINIMIZE LPAREN ID RPAREN .)
    STR             reduce using rule 58 (statement -> MINIMIZE LPAREN ID RPAREN .)
    INITIAL         reduce using rule 58 (statement -> MINIMIZE LPAREN ID RPAREN .)
    FINAL           reduce using rule 58 (statement -> MINIMIZE LPAREN ID RPAREN .)
    STATES          reduce using rule 58 (statement -> MINIMIZE LPAREN ID RPAREN .)
    TRANSITIONS     reduce using rule 58 (statement -> MINIMIZE LPAREN ID RPAREN .)
    FA              reduce using rule 58 (statement -> MINIMIZE LPAREN ID RPAREN .)
    PDA             reduce using rule 58 (statement -> MINIMIZE LPAREN ID RPAREN .)
    STACK_INIT      reduce using rule 58 (statement -> MINIMIZE LPAREN ID RPAREN .)
    CFG             reduce using rule 58 (statement -> MINIMIZE LPAREN ID RPAREN .)
    NONTERMINALS    reduce using rule 58 (statement -> MINIMIZE LPAREN ID RPAREN .)
    TERMINALS       reduce using rule 58 (statement -> MINIMIZE LPAREN ID RPAREN .)
    START           reduce using rule 58 (statement -> MINIMIZE LPAREN ID RPAREN .)
    RULES           reduce using rule 58 (statement -> MINIMIZE LPAREN ID RPAREN .)
    RE              reduce using rule 58 (statement -> MINIMIZE LPAREN ID RPAREN .)
    MINIMIZE        reduce using rule 58 (statement -> MINIMIZE LPAREN ID RPAREN .)
    SIMULATE        reduce using rule 58 (statement -> MINIMIZE LPAREN ID RPAREN .)
    VISUALIZE       reduce using rule 58 (statement -> MINIMIZE LPAREN ID RPAREN .)
    CONCAT          reduce using rule 58 (statement -> MINIMIZE LPAREN ID RPAREN .)
    POWER           reduce using rule 58 (statement -> MINIMIZE LPAREN ID RPAREN .)
    KLEENE          reduce using rule 58 (statement -> MINIMIZE LPAREN ID RPAREN .)
    CONVERT         reduce using rule 58 (statement -> MINIMIZE LPAREN ID RPAREN .)
    CHECKPUMPINGLEMMAREG reduce using rule 58 (statement -> MINIMIZE LPAREN ID RPAREN .)
    CHECKPUMPINGLEMMACFL reduce using rule 58 (statement -> MINIMIZE LPAREN ID RPAREN .)
    ISEQUIVALENT    reduce using rule 58 (statement -> MINIMIZE LPAREN ID RPAREN .)
    SHOW            reduce using rule 58 (statement -> MINIMIZE LPAREN ID RPAREN .)
    UNION           reduce using rule 58 (statement -> MINIMIZE LPAREN ID RPAREN .)
    INTERSECT       reduce using rule 58 (statement -> MINIMIZE LPAREN ID RPAREN .)
    COMPLEMENT      reduce using rule 58 (statement -> MINIMIZE LPAREN ID RPAREN .)
    DIFF            reduce using rule 58 (statement -> MINIMIZE LPAREN ID RPAREN .)
    ISDFA           reduce using rule 58 (statement -> MINIMIZE LPAREN ID RPAREN .)
    ISNFA           reduce using rule 58 (statement -> MINIMIZE LPAREN ID RPAREN .)
    ISDPDA          reduce using rule 58 (statement -> MINIMIZE LPAREN ID RPAREN .)
    ISNPDA          reduce using rule 58 (statement -> MINIMIZE LPAREN ID RPAREN .)
    IF              reduce using rule 58 (statement -> MINIMIZE LPAREN ID RPAREN .)
    SLCOMMENT       reduce using rule 58 (statement -> MINIMIZE LPAREN ID RPAREN .)
    MLCOMMENT       reduce using rule 58 (statement -> MINIMIZE LPAREN ID RPAREN .)
    DOCCOMMENT      reduce using rule 58 (statement -> MINIMIZE LPAREN ID RPAREN .)


state 147

    (59) statement -> SIMULATE LPAREN ID COMMA . ID RPAREN

    ID              shift and go to state 203


state 148

    (60) statement -> VISUALIZE LPAREN ID RPAREN .

    $end            reduce using rule 60 (statement -> VISUALIZE LPAREN ID RPAREN .)
    RBRACE          reduce using rule 60 (statement -> VISUALIZE LPAREN ID RPAREN .)
    ALPHABET        reduce using rule 60 (statement -> VISUALIZE LPAREN ID RPAREN .)
    STR             reduce using rule 60 (statement -> VISUALIZE LPAREN ID RPAREN .)
    INITIAL         reduce using rule 60 (statement -> VISUALIZE LPAREN ID RPAREN .)
    FINAL           reduce using rule 60 (statement -> VISUALIZE LPAREN ID RPAREN .)
    STATES          reduce using rule 60 (statement -> VISUALIZE LPAREN ID RPAREN .)
    TRANSITIONS     reduce using rule 60 (statement -> VISUALIZE LPAREN ID RPAREN .)
    FA              reduce using rule 60 (statement -> VISUALIZE LPAREN ID RPAREN .)
    PDA             reduce using rule 60 (statement -> VISUALIZE LPAREN ID RPAREN .)
    STACK_INIT      reduce using rule 60 (statement -> VISUALIZE LPAREN ID RPAREN .)
    CFG             reduce using rule 60 (statement -> VISUALIZE LPAREN ID RPAREN .)
    NONTERMINALS    reduce using rule 60 (statement -> VISUALIZE LPAREN ID RPAREN .)
    TERMINALS       reduce using rule 60 (statement -> VISUALIZE LPAREN ID RPAREN .)
    START           reduce using rule 60 (statement -> VISUALIZE LPAREN ID RPAREN .)
    RULES           reduce using rule 60 (statement -> VISUALIZE LPAREN ID RPAREN .)
    RE              reduce using rule 60 (statement -> VISUALIZE LPAREN ID RPAREN .)
    MINIMIZE        reduce using rule 60 (statement -> VISUALIZE LPAREN ID RPAREN .)
    SIMULATE        reduce using rule 60 (statement -> VISUALIZE LPAREN ID RPAREN .)
    VISUALIZE       reduce using rule 60 (statement -> VISUALIZE LPAREN ID RPAREN .)
    CONCAT          reduce using rule 60 (statement -> VISUALIZE LPAREN ID RPAREN .)
    POWER           reduce using rule 60 (statement -> VISUALIZE LPAREN ID RPAREN .)
    KLEENE          reduce using rule 60 (statement -> VISUALIZE LPAREN ID RPAREN .)
    CONVERT         reduce using rule 60 (statement -> VISUALIZE LPAREN ID RPAREN .)
    CHECKPUMPINGLEMMAREG reduce using rule 60 (statement -> VISUALIZE LPAREN ID RPAREN .)
    CHECKPUMPINGLEMMACFL reduce using rule 60 (statement -> VISUALIZE LPAREN ID RPAREN .)
    ISEQUIVALENT    reduce using rule 60 (statement -> VISUALIZE LPAREN ID RPAREN .)
    SHOW            reduce using rule 60 (statement -> VISUALIZE LPAREN ID RPAREN .)
    UNION           reduce using rule 60 (statement -> VISUALIZE LPAREN ID RPAREN .)
    INTERSECT       reduce using rule 60 (statement -> VISUALIZE LPAREN ID RPAREN .)
    COMPLEMENT      reduce using rule 60 (statement -> VISUALIZE LPAREN ID RPAREN .)
    DIFF            reduce using rule 60 (statement -> VISUALIZE LPAREN ID RPAREN .)
    ISDFA           reduce using rule 60 (statement -> VISUALIZE LPAREN ID RPAREN .)
    ISNFA           reduce using rule 60 (statement -> VISUALIZE LPAREN ID RPAREN .)
    ISDPDA          reduce using rule 60 (statement -> VISUALIZE LPAREN ID RPAREN .)
    ISNPDA          reduce using rule 60 (statement -> VISUALIZE LPAREN ID RPAREN .)
    IF              reduce using rule 60 (statement -> VISUALIZE LPAREN ID RPAREN .)
    SLCOMMENT       reduce using rule 60 (statement -> VISUALIZE LPAREN ID RPAREN .)
    MLCOMMENT       reduce using rule 60 (statement -> VISUALIZE LPAREN ID RPAREN .)
    DOCCOMMENT      reduce using rule 60 (statement -> VISUALIZE LPAREN ID RPAREN .)


state 149

    (61) statement -> CONCAT LPAREN ID COMMA . ID RPAREN

    ID              shift and go to state 204


state 150

    (62) statement -> POWER LPAREN ID COMMA . NUMBER RPAREN

    NUMBER          shift and go to state 205


state 151

    (63) statement -> KLEENE LPAREN ID RPAREN .

    $end            reduce using rule 63 (statement -> KLEENE LPAREN ID RPAREN .)
    RBRACE          reduce using rule 63 (statement -> KLEENE LPAREN ID RPAREN .)
    ALPHABET        reduce using rule 63 (statement -> KLEENE LPAREN ID RPAREN .)
    STR             reduce using rule 63 (statement -> KLEENE LPAREN ID RPAREN .)
    INITIAL         reduce using rule 63 (statement -> KLEENE LPAREN ID RPAREN .)
    FINAL           reduce using rule 63 (statement -> KLEENE LPAREN ID RPAREN .)
    STATES          reduce using rule 63 (statement -> KLEENE LPAREN ID RPAREN .)
    TRANSITIONS     reduce using rule 63 (statement -> KLEENE LPAREN ID RPAREN .)
    FA              reduce using rule 63 (statement -> KLEENE LPAREN ID RPAREN .)
    PDA             reduce using rule 63 (statement -> KLEENE LPAREN ID RPAREN .)
    STACK_INIT      reduce using rule 63 (statement -> KLEENE LPAREN ID RPAREN .)
    CFG             reduce using rule 63 (statement -> KLEENE LPAREN ID RPAREN .)
    NONTERMINALS    reduce using rule 63 (statement -> KLEENE LPAREN ID RPAREN .)
    TERMINALS       reduce using rule 63 (statement -> KLEENE LPAREN ID RPAREN .)
    START           reduce using rule 63 (statement -> KLEENE LPAREN ID RPAREN .)
    RULES           reduce using rule 63 (statement -> KLEENE LPAREN ID RPAREN .)
    RE              reduce using rule 63 (statement -> KLEENE LPAREN ID RPAREN .)
    MINIMIZE        reduce using rule 63 (statement -> KLEENE LPAREN ID RPAREN .)
    SIMULATE        reduce using rule 63 (statement -> KLEENE LPAREN ID RPAREN .)
    VISUALIZE       reduce using rule 63 (statement -> KLEENE LPAREN ID RPAREN .)
    CONCAT          reduce using rule 63 (statement -> KLEENE LPAREN ID RPAREN .)
    POWER           reduce using rule 63 (statement -> KLEENE LPAREN ID RPAREN .)
    KLEENE          reduce using rule 63 (statement -> KLEENE LPAREN ID RPAREN .)
    CONVERT         reduce using rule 63 (statement -> KLEENE LPAREN ID RPAREN .)
    CHECKPUMPINGLEMMAREG reduce using rule 63 (statement -> KLEENE LPAREN ID RPAREN .)
    CHECKPUMPINGLEMMACFL reduce using rule 63 (statement -> KLEENE LPAREN ID RPAREN .)
    ISEQUIVALENT    reduce using rule 63 (statement -> KLEENE LPAREN ID RPAREN .)
    SHOW            reduce using rule 63 (statement -> KLEENE LPAREN ID RPAREN .)
    UNION           reduce using rule 63 (statement -> KLEENE LPAREN ID RPAREN .)
    INTERSECT       reduce using rule 63 (statement -> KLEENE LPAREN ID RPAREN .)
    COMPLEMENT      reduce using rule 63 (statement -> KLEENE LPAREN ID RPAREN .)
    DIFF            reduce using rule 63 (statement -> KLEENE LPAREN ID RPAREN .)
    ISDFA           reduce using rule 63 (statement -> KLEENE LPAREN ID RPAREN .)
    ISNFA           reduce using rule 63 (statement -> KLEENE LPAREN ID RPAREN .)
    ISDPDA          reduce using rule 63 (statement -> KLEENE LPAREN ID RPAREN .)
    ISNPDA          reduce using rule 63 (statement -> KLEENE LPAREN ID RPAREN .)
    IF              reduce using rule 63 (statement -> KLEENE LPAREN ID RPAREN .)
    SLCOMMENT       reduce using rule 63 (statement -> KLEENE LPAREN ID RPAREN .)
    MLCOMMENT       reduce using rule 63 (statement -> KLEENE LPAREN ID RPAREN .)
    DOCCOMMENT      reduce using rule 63 (statement -> KLEENE LPAREN ID RPAREN .)


state 152

    (64) statement -> CONVERT LPAREN ID COMMA . ID RPAREN

    ID              shift and go to state 206


state 153

    (65) statement -> CHECKPUMPINGLEMMAREG LPAREN ID RPAREN .

    $end            reduce using rule 65 (statement -> CHECKPUMPINGLEMMAREG LPAREN ID RPAREN .)
    RBRACE          reduce using rule 65 (statement -> CHECKPUMPINGLEMMAREG LPAREN ID RPAREN .)
    ALPHABET        reduce using rule 65 (statement -> CHECKPUMPINGLEMMAREG LPAREN ID RPAREN .)
    STR             reduce using rule 65 (statement -> CHECKPUMPINGLEMMAREG LPAREN ID RPAREN .)
    INITIAL         reduce using rule 65 (statement -> CHECKPUMPINGLEMMAREG LPAREN ID RPAREN .)
    FINAL           reduce using rule 65 (statement -> CHECKPUMPINGLEMMAREG LPAREN ID RPAREN .)
    STATES          reduce using rule 65 (statement -> CHECKPUMPINGLEMMAREG LPAREN ID RPAREN .)
    TRANSITIONS     reduce using rule 65 (statement -> CHECKPUMPINGLEMMAREG LPAREN ID RPAREN .)
    FA              reduce using rule 65 (statement -> CHECKPUMPINGLEMMAREG LPAREN ID RPAREN .)
    PDA             reduce using rule 65 (statement -> CHECKPUMPINGLEMMAREG LPAREN ID RPAREN .)
    STACK_INIT      reduce using rule 65 (statement -> CHECKPUMPINGLEMMAREG LPAREN ID RPAREN .)
    CFG             reduce using rule 65 (statement -> CHECKPUMPINGLEMMAREG LPAREN ID RPAREN .)
    NONTERMINALS    reduce using rule 65 (statement -> CHECKPUMPINGLEMMAREG LPAREN ID RPAREN .)
    TERMINALS       reduce using rule 65 (statement -> CHECKPUMPINGLEMMAREG LPAREN ID RPAREN .)
    START           reduce using rule 65 (statement -> CHECKPUMPINGLEMMAREG LPAREN ID RPAREN .)
    RULES           reduce using rule 65 (statement -> CHECKPUMPINGLEMMAREG LPAREN ID RPAREN .)
    RE              reduce using rule 65 (statement -> CHECKPUMPINGLEMMAREG LPAREN ID RPAREN .)
    MINIMIZE        reduce using rule 65 (statement -> CHECKPUMPINGLEMMAREG LPAREN ID RPAREN .)
    SIMULATE        reduce using rule 65 (statement -> CHECKPUMPINGLEMMAREG LPAREN ID RPAREN .)
    VISUALIZE       reduce using rule 65 (statement -> CHECKPUMPINGLEMMAREG LPAREN ID RPAREN .)
    CONCAT          reduce using rule 65 (statement -> CHECKPUMPINGLEMMAREG LPAREN ID RPAREN .)
    POWER           reduce using rule 65 (statement -> CHECKPUMPINGLEMMAREG LPAREN ID RPAREN .)
    KLEENE          reduce using rule 65 (statement -> CHECKPUMPINGLEMMAREG LPAREN ID RPAREN .)
    CONVERT         reduce using rule 65 (statement -> CHECKPUMPINGLEMMAREG LPAREN ID RPAREN .)
    CHECKPUMPINGLEMMAREG reduce using rule 65 (statement -> CHECKPUMPINGLEMMAREG LPAREN ID RPAREN .)
    CHECKPUMPINGLEMMACFL reduce using rule 65 (statement -> CHECKPUMPINGLEMMAREG LPAREN ID RPAREN .)
    ISEQUIVALENT    reduce using rule 65 (statement -> CHECKPUMPINGLEMMAREG LPAREN ID RPAREN .)
    SHOW            reduce using rule 65 (statement -> CHECKPUMPINGLEMMAREG LPAREN ID RPAREN .)
    UNION           reduce using rule 65 (statement -> CHECKPUMPINGLEMMAREG LPAREN ID RPAREN .)
    INTERSECT       reduce using rule 65 (statement -> CHECKPUMPINGLEMMAREG LPAREN ID RPAREN .)
    COMPLEMENT      reduce using rule 65 (statement -> CHECKPUMPINGLEMMAREG LPAREN ID RPAREN .)
    DIFF            reduce using rule 65 (statement -> CHECKPUMPINGLEMMAREG LPAREN ID RPAREN .)
    ISDFA           reduce using rule 65 (statement -> CHECKPUMPINGLEMMAREG LPAREN ID RPAREN .)
    ISNFA           reduce using rule 65 (statement -> CHECKPUMPINGLEMMAREG LPAREN ID RPAREN .)
    ISDPDA          reduce using rule 65 (statement -> CHECKPUMPINGLEMMAREG LPAREN ID RPAREN .)
    ISNPDA          reduce using rule 65 (statement -> CHECKPUMPINGLEMMAREG LPAREN ID RPAREN .)
    IF              reduce using rule 65 (statement -> CHECKPUMPINGLEMMAREG LPAREN ID RPAREN .)
    SLCOMMENT       reduce using rule 65 (statement -> CHECKPUMPINGLEMMAREG LPAREN ID RPAREN .)
    MLCOMMENT       reduce using rule 65 (statement -> CHECKPUMPINGLEMMAREG LPAREN ID RPAREN .)
    DOCCOMMENT      reduce using rule 65 (statement -> CHECKPUMPINGLEMMAREG LPAREN ID RPAREN .)


state 154

    (66) statement -> CHECKPUMPINGLEMMACFL LPAREN ID RPAREN .

    $end            reduce using rule 66 (statement -> CHECKPUMPINGLEMMACFL LPAREN ID RPAREN .)
    RBRACE          reduce using rule 66 (statement -> CHECKPUMPINGLEMMACFL LPAREN ID RPAREN .)
    ALPHABET        reduce using rule 66 (statement -> CHECKPUMPINGLEMMACFL LPAREN ID RPAREN .)
    STR             reduce using rule 66 (statement -> CHECKPUMPINGLEMMACFL LPAREN ID RPAREN .)
    INITIAL         reduce using rule 66 (statement -> CHECKPUMPINGLEMMACFL LPAREN ID RPAREN .)
    FINAL           reduce using rule 66 (statement -> CHECKPUMPINGLEMMACFL LPAREN ID RPAREN .)
    STATES          reduce using rule 66 (statement -> CHECKPUMPINGLEMMACFL LPAREN ID RPAREN .)
    TRANSITIONS     reduce using rule 66 (statement -> CHECKPUMPINGLEMMACFL LPAREN ID RPAREN .)
    FA              reduce using rule 66 (statement -> CHECKPUMPINGLEMMACFL LPAREN ID RPAREN .)
    PDA             reduce using rule 66 (statement -> CHECKPUMPINGLEMMACFL LPAREN ID RPAREN .)
    STACK_INIT      reduce using rule 66 (statement -> CHECKPUMPINGLEMMACFL LPAREN ID RPAREN .)
    CFG             reduce using rule 66 (statement -> CHECKPUMPINGLEMMACFL LPAREN ID RPAREN .)
    NONTERMINALS    reduce using rule 66 (statement -> CHECKPUMPINGLEMMACFL LPAREN ID RPAREN .)
    TERMINALS       reduce using rule 66 (statement -> CHECKPUMPINGLEMMACFL LPAREN ID RPAREN .)
    START           reduce using rule 66 (statement -> CHECKPUMPINGLEMMACFL LPAREN ID RPAREN .)
    RULES           reduce using rule 66 (statement -> CHECKPUMPINGLEMMACFL LPAREN ID RPAREN .)
    RE              reduce using rule 66 (statement -> CHECKPUMPINGLEMMACFL LPAREN ID RPAREN .)
    MINIMIZE        reduce using rule 66 (statement -> CHECKPUMPINGLEMMACFL LPAREN ID RPAREN .)
    SIMULATE        reduce using rule 66 (statement -> CHECKPUMPINGLEMMACFL LPAREN ID RPAREN .)
    VISUALIZE       reduce using rule 66 (statement -> CHECKPUMPINGLEMMACFL LPAREN ID RPAREN .)
    CONCAT          reduce using rule 66 (statement -> CHECKPUMPINGLEMMACFL LPAREN ID RPAREN .)
    POWER           reduce using rule 66 (statement -> CHECKPUMPINGLEMMACFL LPAREN ID RPAREN .)
    KLEENE          reduce using rule 66 (statement -> CHECKPUMPINGLEMMACFL LPAREN ID RPAREN .)
    CONVERT         reduce using rule 66 (statement -> CHECKPUMPINGLEMMACFL LPAREN ID RPAREN .)
    CHECKPUMPINGLEMMAREG reduce using rule 66 (statement -> CHECKPUMPINGLEMMACFL LPAREN ID RPAREN .)
    CHECKPUMPINGLEMMACFL reduce using rule 66 (statement -> CHECKPUMPINGLEMMACFL LPAREN ID RPAREN .)
    ISEQUIVALENT    reduce using rule 66 (statement -> CHECKPUMPINGLEMMACFL LPAREN ID RPAREN .)
    SHOW            reduce using rule 66 (statement -> CHECKPUMPINGLEMMACFL LPAREN ID RPAREN .)
    UNION           reduce using rule 66 (statement -> CHECKPUMPINGLEMMACFL LPAREN ID RPAREN .)
    INTERSECT       reduce using rule 66 (statement -> CHECKPUMPINGLEMMACFL LPAREN ID RPAREN .)
    COMPLEMENT      reduce using rule 66 (statement -> CHECKPUMPINGLEMMACFL LPAREN ID RPAREN .)
    DIFF            reduce using rule 66 (statement -> CHECKPUMPINGLEMMACFL LPAREN ID RPAREN .)
    ISDFA           reduce using rule 66 (statement -> CHECKPUMPINGLEMMACFL LPAREN ID RPAREN .)
    ISNFA           reduce using rule 66 (statement -> CHECKPUMPINGLEMMACFL LPAREN ID RPAREN .)
    ISDPDA          reduce using rule 66 (statement -> CHECKPUMPINGLEMMACFL LPAREN ID RPAREN .)
    ISNPDA          reduce using rule 66 (statement -> CHECKPUMPINGLEMMACFL LPAREN ID RPAREN .)
    IF              reduce using rule 66 (statement -> CHECKPUMPINGLEMMACFL LPAREN ID RPAREN .)
    SLCOMMENT       reduce using rule 66 (statement -> CHECKPUMPINGLEMMACFL LPAREN ID RPAREN .)
    MLCOMMENT       reduce using rule 66 (statement -> CHECKPUMPINGLEMMACFL LPAREN ID RPAREN .)
    DOCCOMMENT      reduce using rule 66 (statement -> CHECKPUMPINGLEMMACFL LPAREN ID RPAREN .)


state 155

    (67) statement -> ISEQUIVALENT LPAREN ID COMMA . ID RPAREN

    ID              shift and go to state 207


state 156

    (76) statement -> SHOW LPAREN show_type RPAREN .

    $end            reduce using rule 76 (statement -> SHOW LPAREN show_type RPAREN .)
    RBRACE          reduce using rule 76 (statement -> SHOW LPAREN show_type RPAREN .)
    ALPHABET        reduce using rule 76 (statement -> SHOW LPAREN show_type RPAREN .)
    STR             reduce using rule 76 (statement -> SHOW LPAREN show_type RPAREN .)
    INITIAL         reduce using rule 76 (statement -> SHOW LPAREN show_type RPAREN .)
    FINAL           reduce using rule 76 (statement -> SHOW LPAREN show_type RPAREN .)
    STATES          reduce using rule 76 (statement -> SHOW LPAREN show_type RPAREN .)
    TRANSITIONS     reduce using rule 76 (statement -> SHOW LPAREN show_type RPAREN .)
    FA              reduce using rule 76 (statement -> SHOW LPAREN show_type RPAREN .)
    PDA             reduce using rule 76 (statement -> SHOW LPAREN show_type RPAREN .)
    STACK_INIT      reduce using rule 76 (statement -> SHOW LPAREN show_type RPAREN .)
    CFG             reduce using rule 76 (statement -> SHOW LPAREN show_type RPAREN .)
    NONTERMINALS    reduce using rule 76 (statement -> SHOW LPAREN show_type RPAREN .)
    TERMINALS       reduce using rule 76 (statement -> SHOW LPAREN show_type RPAREN .)
    START           reduce using rule 76 (statement -> SHOW LPAREN show_type RPAREN .)
    RULES           reduce using rule 76 (statement -> SHOW LPAREN show_type RPAREN .)
    RE              reduce using rule 76 (statement -> SHOW LPAREN show_type RPAREN .)
    MINIMIZE        reduce using rule 76 (statement -> SHOW LPAREN show_type RPAREN .)
    SIMULATE        reduce using rule 76 (statement -> SHOW LPAREN show_type RPAREN .)
    VISUALIZE       reduce using rule 76 (statement -> SHOW LPAREN show_type RPAREN .)
    CONCAT          reduce using rule 76 (statement -> SHOW LPAREN show_type RPAREN .)
    POWER           reduce using rule 76 (statement -> SHOW LPAREN show_type RPAREN .)
    KLEENE          reduce using rule 76 (statement -> SHOW LPAREN show_type RPAREN .)
    CONVERT         reduce using rule 76 (statement -> SHOW LPAREN show_type RPAREN .)
    CHECKPUMPINGLEMMAREG reduce using rule 76 (statement -> SHOW LPAREN show_type RPAREN .)
    CHECKPUMPINGLEMMACFL reduce using rule 76 (statement -> SHOW LPAREN show_type RPAREN .)
    ISEQUIVALENT    reduce using rule 76 (statement -> SHOW LPAREN show_type RPAREN .)
    SHOW            reduce using rule 76 (statement -> SHOW LPAREN show_type RPAREN .)
    UNION           reduce using rule 76 (statement -> SHOW LPAREN show_type RPAREN .)
    INTERSECT       reduce using rule 76 (statement -> SHOW LPAREN show_type RPAREN .)
    COMPLEMENT      reduce using rule 76 (statement -> SHOW LPAREN show_type RPAREN .)
    DIFF            reduce using rule 76 (statement -> SHOW LPAREN show_type RPAREN .)
    ISDFA           reduce using rule 76 (statement -> SHOW LPAREN show_type RPAREN .)
    ISNFA           reduce using rule 76 (statement -> SHOW LPAREN show_type RPAREN .)
    ISDPDA          reduce using rule 76 (statement -> SHOW LPAREN show_type RPAREN .)
    ISNPDA          reduce using rule 76 (statement -> SHOW LPAREN show_type RPAREN .)
    IF              reduce using rule 76 (statement -> SHOW LPAREN show_type RPAREN .)
    SLCOMMENT       reduce using rule 76 (statement -> SHOW LPAREN show_type RPAREN .)
    MLCOMMENT       reduce using rule 76 (statement -> SHOW LPAREN show_type RPAREN .)
    DOCCOMMENT      reduce using rule 76 (statement -> SHOW LPAREN show_type RPAREN .)


state 157

    (77) statement -> UNION LPAREN ID COMMA . ID RPAREN

    ID              shift and go to state 208


state 158

    (78) statement -> INTERSECT LPAREN ID COMMA . ID RPAREN

    ID              shift and go to state 209


state 159

    (79) statement -> COMPLEMENT LPAREN ID RPAREN .

    $end            reduce using rule 79 (statement -> COMPLEMENT LPAREN ID RPAREN .)
    RBRACE          reduce using rule 79 (statement -> COMPLEMENT LPAREN ID RPAREN .)
    ALPHABET        reduce using rule 79 (statement -> COMPLEMENT LPAREN ID RPAREN .)
    STR             reduce using rule 79 (statement -> COMPLEMENT LPAREN ID RPAREN .)
    INITIAL         reduce using rule 79 (statement -> COMPLEMENT LPAREN ID RPAREN .)
    FINAL           reduce using rule 79 (statement -> COMPLEMENT LPAREN ID RPAREN .)
    STATES          reduce using rule 79 (statement -> COMPLEMENT LPAREN ID RPAREN .)
    TRANSITIONS     reduce using rule 79 (statement -> COMPLEMENT LPAREN ID RPAREN .)
    FA              reduce using rule 79 (statement -> COMPLEMENT LPAREN ID RPAREN .)
    PDA             reduce using rule 79 (statement -> COMPLEMENT LPAREN ID RPAREN .)
    STACK_INIT      reduce using rule 79 (statement -> COMPLEMENT LPAREN ID RPAREN .)
    CFG             reduce using rule 79 (statement -> COMPLEMENT LPAREN ID RPAREN .)
    NONTERMINALS    reduce using rule 79 (statement -> COMPLEMENT LPAREN ID RPAREN .)
    TERMINALS       reduce using rule 79 (statement -> COMPLEMENT LPAREN ID RPAREN .)
    START           reduce using rule 79 (statement -> COMPLEMENT LPAREN ID RPAREN .)
    RULES           reduce using rule 79 (statement -> COMPLEMENT LPAREN ID RPAREN .)
    RE              reduce using rule 79 (statement -> COMPLEMENT LPAREN ID RPAREN .)
    MINIMIZE        reduce using rule 79 (statement -> COMPLEMENT LPAREN ID RPAREN .)
    SIMULATE        reduce using rule 79 (statement -> COMPLEMENT LPAREN ID RPAREN .)
    VISUALIZE       reduce using rule 79 (statement -> COMPLEMENT LPAREN ID RPAREN .)
    CONCAT          reduce using rule 79 (statement -> COMPLEMENT LPAREN ID RPAREN .)
    POWER           reduce using rule 79 (statement -> COMPLEMENT LPAREN ID RPAREN .)
    KLEENE          reduce using rule 79 (statement -> COMPLEMENT LPAREN ID RPAREN .)
    CONVERT         reduce using rule 79 (statement -> COMPLEMENT LPAREN ID RPAREN .)
    CHECKPUMPINGLEMMAREG reduce using rule 79 (statement -> COMPLEMENT LPAREN ID RPAREN .)
    CHECKPUMPINGLEMMACFL reduce using rule 79 (statement -> COMPLEMENT LPAREN ID RPAREN .)
    ISEQUIVALENT    reduce using rule 79 (statement -> COMPLEMENT LPAREN ID RPAREN .)
    SHOW            reduce using rule 79 (statement -> COMPLEMENT LPAREN ID RPAREN .)
    UNION           reduce using rule 79 (statement -> COMPLEMENT LPAREN ID RPAREN .)
    INTERSECT       reduce using rule 79 (statement -> COMPLEMENT LPAREN ID RPAREN .)
    COMPLEMENT      reduce using rule 79 (statement -> COMPLEMENT LPAREN ID RPAREN .)
    DIFF            reduce using rule 79 (statement -> COMPLEMENT LPAREN ID RPAREN .)
    ISDFA           reduce using rule 79 (statement -> COMPLEMENT LPAREN ID RPAREN .)
    ISNFA           reduce using rule 79 (statement -> COMPLEMENT LPAREN ID RPAREN .)
    ISDPDA          reduce using rule 79 (statement -> COMPLEMENT LPAREN ID RPAREN .)
    ISNPDA          reduce using rule 79 (statement -> COMPLEMENT LPAREN ID RPAREN .)
    IF              reduce using rule 79 (statement -> COMPLEMENT LPAREN ID RPAREN .)
    SLCOMMENT       reduce using rule 79 (statement -> COMPLEMENT LPAREN ID RPAREN .)
    MLCOMMENT       reduce using rule 79 (statement -> COMPLEMENT LPAREN ID RPAREN .)
    DOCCOMMENT      reduce using rule 79 (statement -> COMPLEMENT LPAREN ID RPAREN .)


state 160

    (80) statement -> DIFF LPAREN ID COMMA . ID RPAREN

    ID              shift and go to state 210


state 161

    (81) statement -> ISDFA LPAREN ID RPAREN .

    $end            reduce using rule 81 (statement -> ISDFA LPAREN ID RPAREN .)
    RBRACE          reduce using rule 81 (statement -> ISDFA LPAREN ID RPAREN .)
    ALPHABET        reduce using rule 81 (statement -> ISDFA LPAREN ID RPAREN .)
    STR             reduce using rule 81 (statement -> ISDFA LPAREN ID RPAREN .)
    INITIAL         reduce using rule 81 (statement -> ISDFA LPAREN ID RPAREN .)
    FINAL           reduce using rule 81 (statement -> ISDFA LPAREN ID RPAREN .)
    STATES          reduce using rule 81 (statement -> ISDFA LPAREN ID RPAREN .)
    TRANSITIONS     reduce using rule 81 (statement -> ISDFA LPAREN ID RPAREN .)
    FA              reduce using rule 81 (statement -> ISDFA LPAREN ID RPAREN .)
    PDA             reduce using rule 81 (statement -> ISDFA LPAREN ID RPAREN .)
    STACK_INIT      reduce using rule 81 (statement -> ISDFA LPAREN ID RPAREN .)
    CFG             reduce using rule 81 (statement -> ISDFA LPAREN ID RPAREN .)
    NONTERMINALS    reduce using rule 81 (statement -> ISDFA LPAREN ID RPAREN .)
    TERMINALS       reduce using rule 81 (statement -> ISDFA LPAREN ID RPAREN .)
    START           reduce using rule 81 (statement -> ISDFA LPAREN ID RPAREN .)
    RULES           reduce using rule 81 (statement -> ISDFA LPAREN ID RPAREN .)
    RE              reduce using rule 81 (statement -> ISDFA LPAREN ID RPAREN .)
    MINIMIZE        reduce using rule 81 (statement -> ISDFA LPAREN ID RPAREN .)
    SIMULATE        reduce using rule 81 (statement -> ISDFA LPAREN ID RPAREN .)
    VISUALIZE       reduce using rule 81 (statement -> ISDFA LPAREN ID RPAREN .)
    CONCAT          reduce using rule 81 (statement -> ISDFA LPAREN ID RPAREN .)
    POWER           reduce using rule 81 (statement -> ISDFA LPAREN ID RPAREN .)
    KLEENE          reduce using rule 81 (statement -> ISDFA LPAREN ID RPAREN .)
    CONVERT         reduce using rule 81 (statement -> ISDFA LPAREN ID RPAREN .)
    CHECKPUMPINGLEMMAREG reduce using rule 81 (statement -> ISDFA LPAREN ID RPAREN .)
    CHECKPUMPINGLEMMACFL reduce using rule 81 (statement -> ISDFA LPAREN ID RPAREN .)
    ISEQUIVALENT    reduce using rule 81 (statement -> ISDFA LPAREN ID RPAREN .)
    SHOW            reduce using rule 81 (statement -> ISDFA LPAREN ID RPAREN .)
    UNION           reduce using rule 81 (statement -> ISDFA LPAREN ID RPAREN .)
    INTERSECT       reduce using rule 81 (statement -> ISDFA LPAREN ID RPAREN .)
    COMPLEMENT      reduce using rule 81 (statement -> ISDFA LPAREN ID RPAREN .)
    DIFF            reduce using rule 81 (statement -> ISDFA LPAREN ID RPAREN .)
    ISDFA           reduce using rule 81 (statement -> ISDFA LPAREN ID RPAREN .)
    ISNFA           reduce using rule 81 (statement -> ISDFA LPAREN ID RPAREN .)
    ISDPDA          reduce using rule 81 (statement -> ISDFA LPAREN ID RPAREN .)
    ISNPDA          reduce using rule 81 (statement -> ISDFA LPAREN ID RPAREN .)
    IF              reduce using rule 81 (statement -> ISDFA LPAREN ID RPAREN .)
    SLCOMMENT       reduce using rule 81 (statement -> ISDFA LPAREN ID RPAREN .)
    MLCOMMENT       reduce using rule 81 (statement -> ISDFA LPAREN ID RPAREN .)
    DOCCOMMENT      reduce using rule 81 (statement -> ISDFA LPAREN ID RPAREN .)


state 162

    (82) statement -> ISNFA LPAREN ID RPAREN .

    $end            reduce using rule 82 (statement -> ISNFA LPAREN ID RPAREN .)
    RBRACE          reduce using rule 82 (statement -> ISNFA LPAREN ID RPAREN .)
    ALPHABET        reduce using rule 82 (statement -> ISNFA LPAREN ID RPAREN .)
    STR             reduce using rule 82 (statement -> ISNFA LPAREN ID RPAREN .)
    INITIAL         reduce using rule 82 (statement -> ISNFA LPAREN ID RPAREN .)
    FINAL           reduce using rule 82 (statement -> ISNFA LPAREN ID RPAREN .)
    STATES          reduce using rule 82 (statement -> ISNFA LPAREN ID RPAREN .)
    TRANSITIONS     reduce using rule 82 (statement -> ISNFA LPAREN ID RPAREN .)
    FA              reduce using rule 82 (statement -> ISNFA LPAREN ID RPAREN .)
    PDA             reduce using rule 82 (statement -> ISNFA LPAREN ID RPAREN .)
    STACK_INIT      reduce using rule 82 (statement -> ISNFA LPAREN ID RPAREN .)
    CFG             reduce using rule 82 (statement -> ISNFA LPAREN ID RPAREN .)
    NONTERMINALS    reduce using rule 82 (statement -> ISNFA LPAREN ID RPAREN .)
    TERMINALS       reduce using rule 82 (statement -> ISNFA LPAREN ID RPAREN .)
    START           reduce using rule 82 (statement -> ISNFA LPAREN ID RPAREN .)
    RULES           reduce using rule 82 (statement -> ISNFA LPAREN ID RPAREN .)
    RE              reduce using rule 82 (statement -> ISNFA LPAREN ID RPAREN .)
    MINIMIZE        reduce using rule 82 (statement -> ISNFA LPAREN ID RPAREN .)
    SIMULATE        reduce using rule 82 (statement -> ISNFA LPAREN ID RPAREN .)
    VISUALIZE       reduce using rule 82 (statement -> ISNFA LPAREN ID RPAREN .)
    CONCAT          reduce using rule 82 (statement -> ISNFA LPAREN ID RPAREN .)
    POWER           reduce using rule 82 (statement -> ISNFA LPAREN ID RPAREN .)
    KLEENE          reduce using rule 82 (statement -> ISNFA LPAREN ID RPAREN .)
    CONVERT         reduce using rule 82 (statement -> ISNFA LPAREN ID RPAREN .)
    CHECKPUMPINGLEMMAREG reduce using rule 82 (statement -> ISNFA LPAREN ID RPAREN .)
    CHECKPUMPINGLEMMACFL reduce using rule 82 (statement -> ISNFA LPAREN ID RPAREN .)
    ISEQUIVALENT    reduce using rule 82 (statement -> ISNFA LPAREN ID RPAREN .)
    SHOW            reduce using rule 82 (statement -> ISNFA LPAREN ID RPAREN .)
    UNION           reduce using rule 82 (statement -> ISNFA LPAREN ID RPAREN .)
    INTERSECT       reduce using rule 82 (statement -> ISNFA LPAREN ID RPAREN .)
    COMPLEMENT      reduce using rule 82 (statement -> ISNFA LPAREN ID RPAREN .)
    DIFF            reduce using rule 82 (statement -> ISNFA LPAREN ID RPAREN .)
    ISDFA           reduce using rule 82 (statement -> ISNFA LPAREN ID RPAREN .)
    ISNFA           reduce using rule 82 (statement -> ISNFA LPAREN ID RPAREN .)
    ISDPDA          reduce using rule 82 (statement -> ISNFA LPAREN ID RPAREN .)
    ISNPDA          reduce using rule 82 (statement -> ISNFA LPAREN ID RPAREN .)
    IF              reduce using rule 82 (statement -> ISNFA LPAREN ID RPAREN .)
    SLCOMMENT       reduce using rule 82 (statement -> ISNFA LPAREN ID RPAREN .)
    MLCOMMENT       reduce using rule 82 (statement -> ISNFA LPAREN ID RPAREN .)
    DOCCOMMENT      reduce using rule 82 (statement -> ISNFA LPAREN ID RPAREN .)


state 163

    (83) statement -> ISDPDA LPAREN ID RPAREN .

    $end            reduce using rule 83 (statement -> ISDPDA LPAREN ID RPAREN .)
    RBRACE          reduce using rule 83 (statement -> ISDPDA LPAREN ID RPAREN .)
    ALPHABET        reduce using rule 83 (statement -> ISDPDA LPAREN ID RPAREN .)
    STR             reduce using rule 83 (statement -> ISDPDA LPAREN ID RPAREN .)
    INITIAL         reduce using rule 83 (statement -> ISDPDA LPAREN ID RPAREN .)
    FINAL           reduce using rule 83 (statement -> ISDPDA LPAREN ID RPAREN .)
    STATES          reduce using rule 83 (statement -> ISDPDA LPAREN ID RPAREN .)
    TRANSITIONS     reduce using rule 83 (statement -> ISDPDA LPAREN ID RPAREN .)
    FA              reduce using rule 83 (statement -> ISDPDA LPAREN ID RPAREN .)
    PDA             reduce using rule 83 (statement -> ISDPDA LPAREN ID RPAREN .)
    STACK_INIT      reduce using rule 83 (statement -> ISDPDA LPAREN ID RPAREN .)
    CFG             reduce using rule 83 (statement -> ISDPDA LPAREN ID RPAREN .)
    NONTERMINALS    reduce using rule 83 (statement -> ISDPDA LPAREN ID RPAREN .)
    TERMINALS       reduce using rule 83 (statement -> ISDPDA LPAREN ID RPAREN .)
    START           reduce using rule 83 (statement -> ISDPDA LPAREN ID RPAREN .)
    RULES           reduce using rule 83 (statement -> ISDPDA LPAREN ID RPAREN .)
    RE              reduce using rule 83 (statement -> ISDPDA LPAREN ID RPAREN .)
    MINIMIZE        reduce using rule 83 (statement -> ISDPDA LPAREN ID RPAREN .)
    SIMULATE        reduce using rule 83 (statement -> ISDPDA LPAREN ID RPAREN .)
    VISUALIZE       reduce using rule 83 (statement -> ISDPDA LPAREN ID RPAREN .)
    CONCAT          reduce using rule 83 (statement -> ISDPDA LPAREN ID RPAREN .)
    POWER           reduce using rule 83 (statement -> ISDPDA LPAREN ID RPAREN .)
    KLEENE          reduce using rule 83 (statement -> ISDPDA LPAREN ID RPAREN .)
    CONVERT         reduce using rule 83 (statement -> ISDPDA LPAREN ID RPAREN .)
    CHECKPUMPINGLEMMAREG reduce using rule 83 (statement -> ISDPDA LPAREN ID RPAREN .)
    CHECKPUMPINGLEMMACFL reduce using rule 83 (statement -> ISDPDA LPAREN ID RPAREN .)
    ISEQUIVALENT    reduce using rule 83 (statement -> ISDPDA LPAREN ID RPAREN .)
    SHOW            reduce using rule 83 (statement -> ISDPDA LPAREN ID RPAREN .)
    UNION           reduce using rule 83 (statement -> ISDPDA LPAREN ID RPAREN .)
    INTERSECT       reduce using rule 83 (statement -> ISDPDA LPAREN ID RPAREN .)
    COMPLEMENT      reduce using rule 83 (statement -> ISDPDA LPAREN ID RPAREN .)
    DIFF            reduce using rule 83 (statement -> ISDPDA LPAREN ID RPAREN .)
    ISDFA           reduce using rule 83 (statement -> ISDPDA LPAREN ID RPAREN .)
    ISNFA           reduce using rule 83 (statement -> ISDPDA LPAREN ID RPAREN .)
    ISDPDA          reduce using rule 83 (statement -> ISDPDA LPAREN ID RPAREN .)
    ISNPDA          reduce using rule 83 (statement -> ISDPDA LPAREN ID RPAREN .)
    IF              reduce using rule 83 (statement -> ISDPDA LPAREN ID RPAREN .)
    SLCOMMENT       reduce using rule 83 (statement -> ISDPDA LPAREN ID RPAREN .)
    MLCOMMENT       reduce using rule 83 (statement -> ISDPDA LPAREN ID RPAREN .)
    DOCCOMMENT      reduce using rule 83 (statement -> ISDPDA LPAREN ID RPAREN .)


state 164

    (84) statement -> ISNPDA LPAREN ID RPAREN .

    $end            reduce using rule 84 (statement -> ISNPDA LPAREN ID RPAREN .)
    RBRACE          reduce using rule 84 (statement -> ISNPDA LPAREN ID RPAREN .)
    ALPHABET        reduce using rule 84 (statement -> ISNPDA LPAREN ID RPAREN .)
    STR             reduce using rule 84 (statement -> ISNPDA LPAREN ID RPAREN .)
    INITIAL         reduce using rule 84 (statement -> ISNPDA LPAREN ID RPAREN .)
    FINAL           reduce using rule 84 (statement -> ISNPDA LPAREN ID RPAREN .)
    STATES          reduce using rule 84 (statement -> ISNPDA LPAREN ID RPAREN .)
    TRANSITIONS     reduce using rule 84 (statement -> ISNPDA LPAREN ID RPAREN .)
    FA              reduce using rule 84 (statement -> ISNPDA LPAREN ID RPAREN .)
    PDA             reduce using rule 84 (statement -> ISNPDA LPAREN ID RPAREN .)
    STACK_INIT      reduce using rule 84 (statement -> ISNPDA LPAREN ID RPAREN .)
    CFG             reduce using rule 84 (statement -> ISNPDA LPAREN ID RPAREN .)
    NONTERMINALS    reduce using rule 84 (statement -> ISNPDA LPAREN ID RPAREN .)
    TERMINALS       reduce using rule 84 (statement -> ISNPDA LPAREN ID RPAREN .)
    START           reduce using rule 84 (statement -> ISNPDA LPAREN ID RPAREN .)
    RULES           reduce using rule 84 (statement -> ISNPDA LPAREN ID RPAREN .)
    RE              reduce using rule 84 (statement -> ISNPDA LPAREN ID RPAREN .)
    MINIMIZE        reduce using rule 84 (statement -> ISNPDA LPAREN ID RPAREN .)
    SIMULATE        reduce using rule 84 (statement -> ISNPDA LPAREN ID RPAREN .)
    VISUALIZE       reduce using rule 84 (statement -> ISNPDA LPAREN ID RPAREN .)
    CONCAT          reduce using rule 84 (statement -> ISNPDA LPAREN ID RPAREN .)
    POWER           reduce using rule 84 (statement -> ISNPDA LPAREN ID RPAREN .)
    KLEENE          reduce using rule 84 (statement -> ISNPDA LPAREN ID RPAREN .)
    CONVERT         reduce using rule 84 (statement -> ISNPDA LPAREN ID RPAREN .)
    CHECKPUMPINGLEMMAREG reduce using rule 84 (statement -> ISNPDA LPAREN ID RPAREN .)
    CHECKPUMPINGLEMMACFL reduce using rule 84 (statement -> ISNPDA LPAREN ID RPAREN .)
    ISEQUIVALENT    reduce using rule 84 (statement -> ISNPDA LPAREN ID RPAREN .)
    SHOW            reduce using rule 84 (statement -> ISNPDA LPAREN ID RPAREN .)
    UNION           reduce using rule 84 (statement -> ISNPDA LPAREN ID RPAREN .)
    INTERSECT       reduce using rule 84 (statement -> ISNPDA LPAREN ID RPAREN .)
    COMPLEMENT      reduce using rule 84 (statement -> ISNPDA LPAREN ID RPAREN .)
    DIFF            reduce using rule 84 (statement -> ISNPDA LPAREN ID RPAREN .)
    ISDFA           reduce using rule 84 (statement -> ISNPDA LPAREN ID RPAREN .)
    ISNFA           reduce using rule 84 (statement -> ISNPDA LPAREN ID RPAREN .)
    ISDPDA          reduce using rule 84 (statement -> ISNPDA LPAREN ID RPAREN .)
    ISNPDA          reduce using rule 84 (statement -> ISNPDA LPAREN ID RPAREN .)
    IF              reduce using rule 84 (statement -> ISNPDA LPAREN ID RPAREN .)
    SLCOMMENT       reduce using rule 84 (statement -> ISNPDA LPAREN ID RPAREN .)
    MLCOMMENT       reduce using rule 84 (statement -> ISNPDA LPAREN ID RPAREN .)
    DOCCOMMENT      reduce using rule 84 (statement -> ISNPDA LPAREN ID RPAREN .)


state 165

    (85) statement -> IF LPAREN condition RPAREN . LBRACE statement RBRACE ELSE LBRACE statement RBRACE
    (86) statement -> IF LPAREN condition RPAREN . LBRACE statement RBRACE ELSE IF LPAREN condition RPAREN LBRACE statement RBRACE
    (87) statement -> IF LPAREN condition RPAREN . LBRACE statement RBRACE ELSE IF LPAREN condition RPAREN LBRACE statement RBRACE ELSE LBRACE statement RBRACE
    (88) statement -> IF LPAREN condition RPAREN . LBRACE statement RBRACE

    LBRACE          shift and go to state 211


state 166

    (2) alphabet_list -> ID .

    RBRACE          reduce using rule 2 (alphabet_list -> ID .)
    COMMA           reduce using rule 2 (alphabet_list -> ID .)


state 167

    (1) statement -> ALPHABET ID EQUALS LBRACE alphabet_list . RBRACE
    (3) alphabet_list -> alphabet_list . COMMA ID

    RBRACE          shift and go to state 212
    COMMA           shift and go to state 213


state 168

    (4) statement -> STR ID EQUALS SINGLEQUOTE STRING . SINGLEQUOTE

    SINGLEQUOTE     shift and go to state 214


state 169

    (5) statement -> INITIAL COLON LBRACE ID RBRACE .

    $end            reduce using rule 5 (statement -> INITIAL COLON LBRACE ID RBRACE .)
    RBRACE          reduce using rule 5 (statement -> INITIAL COLON LBRACE ID RBRACE .)
    ALPHABET        reduce using rule 5 (statement -> INITIAL COLON LBRACE ID RBRACE .)
    STR             reduce using rule 5 (statement -> INITIAL COLON LBRACE ID RBRACE .)
    INITIAL         reduce using rule 5 (statement -> INITIAL COLON LBRACE ID RBRACE .)
    FINAL           reduce using rule 5 (statement -> INITIAL COLON LBRACE ID RBRACE .)
    STATES          reduce using rule 5 (statement -> INITIAL COLON LBRACE ID RBRACE .)
    TRANSITIONS     reduce using rule 5 (statement -> INITIAL COLON LBRACE ID RBRACE .)
    FA              reduce using rule 5 (statement -> INITIAL COLON LBRACE ID RBRACE .)
    PDA             reduce using rule 5 (statement -> INITIAL COLON LBRACE ID RBRACE .)
    STACK_INIT      reduce using rule 5 (statement -> INITIAL COLON LBRACE ID RBRACE .)
    CFG             reduce using rule 5 (statement -> INITIAL COLON LBRACE ID RBRACE .)
    NONTERMINALS    reduce using rule 5 (statement -> INITIAL COLON LBRACE ID RBRACE .)
    TERMINALS       reduce using rule 5 (statement -> INITIAL COLON LBRACE ID RBRACE .)
    START           reduce using rule 5 (statement -> INITIAL COLON LBRACE ID RBRACE .)
    RULES           reduce using rule 5 (statement -> INITIAL COLON LBRACE ID RBRACE .)
    RE              reduce using rule 5 (statement -> INITIAL COLON LBRACE ID RBRACE .)
    MINIMIZE        reduce using rule 5 (statement -> INITIAL COLON LBRACE ID RBRACE .)
    SIMULATE        reduce using rule 5 (statement -> INITIAL COLON LBRACE ID RBRACE .)
    VISUALIZE       reduce using rule 5 (statement -> INITIAL COLON LBRACE ID RBRACE .)
    CONCAT          reduce using rule 5 (statement -> INITIAL COLON LBRACE ID RBRACE .)
    POWER           reduce using rule 5 (statement -> INITIAL COLON LBRACE ID RBRACE .)
    KLEENE          reduce using rule 5 (statement -> INITIAL COLON LBRACE ID RBRACE .)
    CONVERT         reduce using rule 5 (statement -> INITIAL COLON LBRACE ID RBRACE .)
    CHECKPUMPINGLEMMAREG reduce using rule 5 (statement -> INITIAL COLON LBRACE ID RBRACE .)
    CHECKPUMPINGLEMMACFL reduce using rule 5 (statement -> INITIAL COLON LBRACE ID RBRACE .)
    ISEQUIVALENT    reduce using rule 5 (statement -> INITIAL COLON LBRACE ID RBRACE .)
    SHOW            reduce using rule 5 (statement -> INITIAL COLON LBRACE ID RBRACE .)
    UNION           reduce using rule 5 (statement -> INITIAL COLON LBRACE ID RBRACE .)
    INTERSECT       reduce using rule 5 (statement -> INITIAL COLON LBRACE ID RBRACE .)
    COMPLEMENT      reduce using rule 5 (statement -> INITIAL COLON LBRACE ID RBRACE .)
    DIFF            reduce using rule 5 (statement -> INITIAL COLON LBRACE ID RBRACE .)
    ISDFA           reduce using rule 5 (statement -> INITIAL COLON LBRACE ID RBRACE .)
    ISNFA           reduce using rule 5 (statement -> INITIAL COLON LBRACE ID RBRACE .)
    ISDPDA          reduce using rule 5 (statement -> INITIAL COLON LBRACE ID RBRACE .)
    ISNPDA          reduce using rule 5 (statement -> INITIAL COLON LBRACE ID RBRACE .)
    IF              reduce using rule 5 (statement -> INITIAL COLON LBRACE ID RBRACE .)
    SLCOMMENT       reduce using rule 5 (statement -> INITIAL COLON LBRACE ID RBRACE .)
    MLCOMMENT       reduce using rule 5 (statement -> INITIAL COLON LBRACE ID RBRACE .)
    DOCCOMMENT      reduce using rule 5 (statement -> INITIAL COLON LBRACE ID RBRACE .)


state 170

    (6) statement -> FINAL COLON LBRACE final_list RBRACE .

    $end            reduce using rule 6 (statement -> FINAL COLON LBRACE final_list RBRACE .)
    RBRACE          reduce using rule 6 (statement -> FINAL COLON LBRACE final_list RBRACE .)
    ALPHABET        reduce using rule 6 (statement -> FINAL COLON LBRACE final_list RBRACE .)
    STR             reduce using rule 6 (statement -> FINAL COLON LBRACE final_list RBRACE .)
    INITIAL         reduce using rule 6 (statement -> FINAL COLON LBRACE final_list RBRACE .)
    FINAL           reduce using rule 6 (statement -> FINAL COLON LBRACE final_list RBRACE .)
    STATES          reduce using rule 6 (statement -> FINAL COLON LBRACE final_list RBRACE .)
    TRANSITIONS     reduce using rule 6 (statement -> FINAL COLON LBRACE final_list RBRACE .)
    FA              reduce using rule 6 (statement -> FINAL COLON LBRACE final_list RBRACE .)
    PDA             reduce using rule 6 (statement -> FINAL COLON LBRACE final_list RBRACE .)
    STACK_INIT      reduce using rule 6 (statement -> FINAL COLON LBRACE final_list RBRACE .)
    CFG             reduce using rule 6 (statement -> FINAL COLON LBRACE final_list RBRACE .)
    NONTERMINALS    reduce using rule 6 (statement -> FINAL COLON LBRACE final_list RBRACE .)
    TERMINALS       reduce using rule 6 (statement -> FINAL COLON LBRACE final_list RBRACE .)
    START           reduce using rule 6 (statement -> FINAL COLON LBRACE final_list RBRACE .)
    RULES           reduce using rule 6 (statement -> FINAL COLON LBRACE final_list RBRACE .)
    RE              reduce using rule 6 (statement -> FINAL COLON LBRACE final_list RBRACE .)
    MINIMIZE        reduce using rule 6 (statement -> FINAL COLON LBRACE final_list RBRACE .)
    SIMULATE        reduce using rule 6 (statement -> FINAL COLON LBRACE final_list RBRACE .)
    VISUALIZE       reduce using rule 6 (statement -> FINAL COLON LBRACE final_list RBRACE .)
    CONCAT          reduce using rule 6 (statement -> FINAL COLON LBRACE final_list RBRACE .)
    POWER           reduce using rule 6 (statement -> FINAL COLON LBRACE final_list RBRACE .)
    KLEENE          reduce using rule 6 (statement -> FINAL COLON LBRACE final_list RBRACE .)
    CONVERT         reduce using rule 6 (statement -> FINAL COLON LBRACE final_list RBRACE .)
    CHECKPUMPINGLEMMAREG reduce using rule 6 (statement -> FINAL COLON LBRACE final_list RBRACE .)
    CHECKPUMPINGLEMMACFL reduce using rule 6 (statement -> FINAL COLON LBRACE final_list RBRACE .)
    ISEQUIVALENT    reduce using rule 6 (statement -> FINAL COLON LBRACE final_list RBRACE .)
    SHOW            reduce using rule 6 (statement -> FINAL COLON LBRACE final_list RBRACE .)
    UNION           reduce using rule 6 (statement -> FINAL COLON LBRACE final_list RBRACE .)
    INTERSECT       reduce using rule 6 (statement -> FINAL COLON LBRACE final_list RBRACE .)
    COMPLEMENT      reduce using rule 6 (statement -> FINAL COLON LBRACE final_list RBRACE .)
    DIFF            reduce using rule 6 (statement -> FINAL COLON LBRACE final_list RBRACE .)
    ISDFA           reduce using rule 6 (statement -> FINAL COLON LBRACE final_list RBRACE .)
    ISNFA           reduce using rule 6 (statement -> FINAL COLON LBRACE final_list RBRACE .)
    ISDPDA          reduce using rule 6 (statement -> FINAL COLON LBRACE final_list RBRACE .)
    ISNPDA          reduce using rule 6 (statement -> FINAL COLON LBRACE final_list RBRACE .)
    IF              reduce using rule 6 (statement -> FINAL COLON LBRACE final_list RBRACE .)
    SLCOMMENT       reduce using rule 6 (statement -> FINAL COLON LBRACE final_list RBRACE .)
    MLCOMMENT       reduce using rule 6 (statement -> FINAL COLON LBRACE final_list RBRACE .)
    DOCCOMMENT      reduce using rule 6 (statement -> FINAL COLON LBRACE final_list RBRACE .)


state 171

    (8) final_list -> final_list COMMA . ID

    ID              shift and go to state 215


state 172

    (9) statement -> STATES COLON LBRACE states_list RBRACE .

    $end            reduce using rule 9 (statement -> STATES COLON LBRACE states_list RBRACE .)
    RBRACE          reduce using rule 9 (statement -> STATES COLON LBRACE states_list RBRACE .)
    ALPHABET        reduce using rule 9 (statement -> STATES COLON LBRACE states_list RBRACE .)
    STR             reduce using rule 9 (statement -> STATES COLON LBRACE states_list RBRACE .)
    INITIAL         reduce using rule 9 (statement -> STATES COLON LBRACE states_list RBRACE .)
    FINAL           reduce using rule 9 (statement -> STATES COLON LBRACE states_list RBRACE .)
    STATES          reduce using rule 9 (statement -> STATES COLON LBRACE states_list RBRACE .)
    TRANSITIONS     reduce using rule 9 (statement -> STATES COLON LBRACE states_list RBRACE .)
    FA              reduce using rule 9 (statement -> STATES COLON LBRACE states_list RBRACE .)
    PDA             reduce using rule 9 (statement -> STATES COLON LBRACE states_list RBRACE .)
    STACK_INIT      reduce using rule 9 (statement -> STATES COLON LBRACE states_list RBRACE .)
    CFG             reduce using rule 9 (statement -> STATES COLON LBRACE states_list RBRACE .)
    NONTERMINALS    reduce using rule 9 (statement -> STATES COLON LBRACE states_list RBRACE .)
    TERMINALS       reduce using rule 9 (statement -> STATES COLON LBRACE states_list RBRACE .)
    START           reduce using rule 9 (statement -> STATES COLON LBRACE states_list RBRACE .)
    RULES           reduce using rule 9 (statement -> STATES COLON LBRACE states_list RBRACE .)
    RE              reduce using rule 9 (statement -> STATES COLON LBRACE states_list RBRACE .)
    MINIMIZE        reduce using rule 9 (statement -> STATES COLON LBRACE states_list RBRACE .)
    SIMULATE        reduce using rule 9 (statement -> STATES COLON LBRACE states_list RBRACE .)
    VISUALIZE       reduce using rule 9 (statement -> STATES COLON LBRACE states_list RBRACE .)
    CONCAT          reduce using rule 9 (statement -> STATES COLON LBRACE states_list RBRACE .)
    POWER           reduce using rule 9 (statement -> STATES COLON LBRACE states_list RBRACE .)
    KLEENE          reduce using rule 9 (statement -> STATES COLON LBRACE states_list RBRACE .)
    CONVERT         reduce using rule 9 (statement -> STATES COLON LBRACE states_list RBRACE .)
    CHECKPUMPINGLEMMAREG reduce using rule 9 (statement -> STATES COLON LBRACE states_list RBRACE .)
    CHECKPUMPINGLEMMACFL reduce using rule 9 (statement -> STATES COLON LBRACE states_list RBRACE .)
    ISEQUIVALENT    reduce using rule 9 (statement -> STATES COLON LBRACE states_list RBRACE .)
    SHOW            reduce using rule 9 (statement -> STATES COLON LBRACE states_list RBRACE .)
    UNION           reduce using rule 9 (statement -> STATES COLON LBRACE states_list RBRACE .)
    INTERSECT       reduce using rule 9 (statement -> STATES COLON LBRACE states_list RBRACE .)
    COMPLEMENT      reduce using rule 9 (statement -> STATES COLON LBRACE states_list RBRACE .)
    DIFF            reduce using rule 9 (statement -> STATES COLON LBRACE states_list RBRACE .)
    ISDFA           reduce using rule 9 (statement -> STATES COLON LBRACE states_list RBRACE .)
    ISNFA           reduce using rule 9 (statement -> STATES COLON LBRACE states_list RBRACE .)
    ISDPDA          reduce using rule 9 (statement -> STATES COLON LBRACE states_list RBRACE .)
    ISNPDA          reduce using rule 9 (statement -> STATES COLON LBRACE states_list RBRACE .)
    IF              reduce using rule 9 (statement -> STATES COLON LBRACE states_list RBRACE .)
    SLCOMMENT       reduce using rule 9 (statement -> STATES COLON LBRACE states_list RBRACE .)
    MLCOMMENT       reduce using rule 9 (statement -> STATES COLON LBRACE states_list RBRACE .)
    DOCCOMMENT      reduce using rule 9 (statement -> STATES COLON LBRACE states_list RBRACE .)


state 173

    (11) states_list -> states_list COMMA . ID

    ID              shift and go to state 216


state 174

    (15) transition -> LBRACE FROM . COLON ID COMMA TO COLON ID COMMA ONN COLON ID RBRACE
    (16) transition -> LBRACE FROM . COLON ID COMMA TO COLON ID COMMA ONN COLON ID COMMA POP COLON ID COMMA PUSH COLON ID COMMA STACK COLON ID RBRACE

    COLON           shift and go to state 217


state 175

    (12) statement -> TRANSITIONS COLON LBRACE transitions_list RBRACE .

    $end            reduce using rule 12 (statement -> TRANSITIONS COLON LBRACE transitions_list RBRACE .)
    RBRACE          reduce using rule 12 (statement -> TRANSITIONS COLON LBRACE transitions_list RBRACE .)
    ALPHABET        reduce using rule 12 (statement -> TRANSITIONS COLON LBRACE transitions_list RBRACE .)
    STR             reduce using rule 12 (statement -> TRANSITIONS COLON LBRACE transitions_list RBRACE .)
    INITIAL         reduce using rule 12 (statement -> TRANSITIONS COLON LBRACE transitions_list RBRACE .)
    FINAL           reduce using rule 12 (statement -> TRANSITIONS COLON LBRACE transitions_list RBRACE .)
    STATES          reduce using rule 12 (statement -> TRANSITIONS COLON LBRACE transitions_list RBRACE .)
    TRANSITIONS     reduce using rule 12 (statement -> TRANSITIONS COLON LBRACE transitions_list RBRACE .)
    FA              reduce using rule 12 (statement -> TRANSITIONS COLON LBRACE transitions_list RBRACE .)
    PDA             reduce using rule 12 (statement -> TRANSITIONS COLON LBRACE transitions_list RBRACE .)
    STACK_INIT      reduce using rule 12 (statement -> TRANSITIONS COLON LBRACE transitions_list RBRACE .)
    CFG             reduce using rule 12 (statement -> TRANSITIONS COLON LBRACE transitions_list RBRACE .)
    NONTERMINALS    reduce using rule 12 (statement -> TRANSITIONS COLON LBRACE transitions_list RBRACE .)
    TERMINALS       reduce using rule 12 (statement -> TRANSITIONS COLON LBRACE transitions_list RBRACE .)
    START           reduce using rule 12 (statement -> TRANSITIONS COLON LBRACE transitions_list RBRACE .)
    RULES           reduce using rule 12 (statement -> TRANSITIONS COLON LBRACE transitions_list RBRACE .)
    RE              reduce using rule 12 (statement -> TRANSITIONS COLON LBRACE transitions_list RBRACE .)
    MINIMIZE        reduce using rule 12 (statement -> TRANSITIONS COLON LBRACE transitions_list RBRACE .)
    SIMULATE        reduce using rule 12 (statement -> TRANSITIONS COLON LBRACE transitions_list RBRACE .)
    VISUALIZE       reduce using rule 12 (statement -> TRANSITIONS COLON LBRACE transitions_list RBRACE .)
    CONCAT          reduce using rule 12 (statement -> TRANSITIONS COLON LBRACE transitions_list RBRACE .)
    POWER           reduce using rule 12 (statement -> TRANSITIONS COLON LBRACE transitions_list RBRACE .)
    KLEENE          reduce using rule 12 (statement -> TRANSITIONS COLON LBRACE transitions_list RBRACE .)
    CONVERT         reduce using rule 12 (statement -> TRANSITIONS COLON LBRACE transitions_list RBRACE .)
    CHECKPUMPINGLEMMAREG reduce using rule 12 (statement -> TRANSITIONS COLON LBRACE transitions_list RBRACE .)
    CHECKPUMPINGLEMMACFL reduce using rule 12 (statement -> TRANSITIONS COLON LBRACE transitions_list RBRACE .)
    ISEQUIVALENT    reduce using rule 12 (statement -> TRANSITIONS COLON LBRACE transitions_list RBRACE .)
    SHOW            reduce using rule 12 (statement -> TRANSITIONS COLON LBRACE transitions_list RBRACE .)
    UNION           reduce using rule 12 (statement -> TRANSITIONS COLON LBRACE transitions_list RBRACE .)
    INTERSECT       reduce using rule 12 (statement -> TRANSITIONS COLON LBRACE transitions_list RBRACE .)
    COMPLEMENT      reduce using rule 12 (statement -> TRANSITIONS COLON LBRACE transitions_list RBRACE .)
    DIFF            reduce using rule 12 (statement -> TRANSITIONS COLON LBRACE transitions_list RBRACE .)
    ISDFA           reduce using rule 12 (statement -> TRANSITIONS COLON LBRACE transitions_list RBRACE .)
    ISNFA           reduce using rule 12 (statement -> TRANSITIONS COLON LBRACE transitions_list RBRACE .)
    ISDPDA          reduce using rule 12 (statement -> TRANSITIONS COLON LBRACE transitions_list RBRACE .)
    ISNPDA          reduce using rule 12 (statement -> TRANSITIONS COLON LBRACE transitions_list RBRACE .)
    IF              reduce using rule 12 (statement -> TRANSITIONS COLON LBRACE transitions_list RBRACE .)
    SLCOMMENT       reduce using rule 12 (statement -> TRANSITIONS COLON LBRACE transitions_list RBRACE .)
    MLCOMMENT       reduce using rule 12 (statement -> TRANSITIONS COLON LBRACE transitions_list RBRACE .)
    DOCCOMMENT      reduce using rule 12 (statement -> TRANSITIONS COLON LBRACE transitions_list RBRACE .)


state 176

    (14) transitions_list -> transitions_list COMMA . transition
    (15) transition -> . LBRACE FROM COLON ID COMMA TO COLON ID COMMA ONN COLON ID RBRACE
    (16) transition -> . LBRACE FROM COLON ID COMMA TO COLON ID COMMA ONN COLON ID COMMA POP COLON ID COMMA PUSH COLON ID COMMA STACK COLON ID RBRACE

    LBRACE          shift and go to state 132

    transition                     shift and go to state 218

state 177

    (17) statement -> FA ID LPAREN RPAREN LBRACE . statement_list_fa RBRACE
    (18) statement_list_fa -> . statement
    (19) statement_list_fa -> . statement_list_fa statement
    (1) statement -> . ALPHABET ID EQUALS LBRACE alphabet_list RBRACE
    (4) statement -> . STR ID EQUALS SINGLEQUOTE STRING SINGLEQUOTE
    (5) statement -> . INITIAL COLON LBRACE ID RBRACE
    (6) statement -> . FINAL COLON LBRACE final_list RBRACE
    (9) statement -> . STATES COLON LBRACE states_list RBRACE
    (12) statement -> . TRANSITIONS COLON LBRACE transitions_list RBRACE
    (17) statement -> . FA ID LPAREN RPAREN LBRACE statement_list_fa RBRACE
    (20) statement -> . PDA ID LPAREN RPAREN LBRACE statement_list_pda RBRACE
    (23) statement -> . STACK_INIT COLON ID
    (24) statement -> . CFG ID LPAREN RPAREN LBRACE statement_list_cfg RBRACE
    (27) statement -> . NONTERMINALS COLON LBRACE nonterminals_list RBRACE
    (30) statement -> . TERMINALS COLON LBRACE terminals_list RBRACE
    (33) statement -> . START COLON ID
    (34) statement -> . RULES COLON LBRACE rules_list RBRACE
    (41) statement -> . RE ID EQUALS SINGLEQUOTE REGEX SINGLEQUOTE
    (58) statement -> . MINIMIZE LPAREN ID RPAREN
    (59) statement -> . SIMULATE LPAREN ID COMMA ID RPAREN
    (60) statement -> . VISUALIZE LPAREN ID RPAREN
    (61) statement -> . CONCAT LPAREN ID COMMA ID RPAREN
    (62) statement -> . POWER LPAREN ID COMMA NUMBER RPAREN
    (63) statement -> . KLEENE LPAREN ID RPAREN
    (64) statement -> . CONVERT LPAREN ID COMMA ID RPAREN
    (65) statement -> . CHECKPUMPINGLEMMAREG LPAREN ID RPAREN
    (66) statement -> . CHECKPUMPINGLEMMACFL LPAREN ID RPAREN
    (67) statement -> . ISEQUIVALENT LPAREN ID COMMA ID RPAREN
    (76) statement -> . SHOW LPAREN show_type RPAREN
    (77) statement -> . UNION LPAREN ID COMMA ID RPAREN
    (78) statement -> . INTERSECT LPAREN ID COMMA ID RPAREN
    (79) statement -> . COMPLEMENT LPAREN ID RPAREN
    (80) statement -> . DIFF LPAREN ID COMMA ID RPAREN
    (81) statement -> . ISDFA LPAREN ID RPAREN
    (82) statement -> . ISNFA LPAREN ID RPAREN
    (83) statement -> . ISDPDA LPAREN ID RPAREN
    (84) statement -> . ISNPDA LPAREN ID RPAREN
    (85) statement -> . IF LPAREN condition RPAREN LBRACE statement RBRACE ELSE LBRACE statement RBRACE
    (86) statement -> . IF LPAREN condition RPAREN LBRACE statement RBRACE ELSE IF LPAREN condition RPAREN LBRACE statement RBRACE
    (87) statement -> . IF LPAREN condition RPAREN LBRACE statement RBRACE ELSE IF LPAREN condition RPAREN LBRACE statement RBRACE ELSE LBRACE statement RBRACE
    (88) statement -> . IF LPAREN condition RPAREN LBRACE statement RBRACE
    (96) statement -> . SLCOMMENT
    (97) statement -> . MLCOMMENT
    (98) statement -> . DOCCOMMENT

    ALPHABET        shift and go to state 2
    STR             shift and go to state 3
    INITIAL         shift and go to state 4
    FINAL           shift and go to state 5
    STATES          shift and go to state 6
    TRANSITIONS     shift and go to state 7
    FA              shift and go to state 8
    PDA             shift and go to state 9
    STACK_INIT      shift and go to state 10
    CFG             shift and go to state 11
    NONTERMINALS    shift and go to state 12
    TERMINALS       shift and go to state 13
    START           shift and go to state 14
    RULES           shift and go to state 15
    RE              shift and go to state 16
    MINIMIZE        shift and go to state 17
    SIMULATE        shift and go to state 18
    VISUALIZE       shift and go to state 19
    CONCAT          shift and go to state 20
    POWER           shift and go to state 21
    KLEENE          shift and go to state 22
    CONVERT         shift and go to state 23
    CHECKPUMPINGLEMMAREG shift and go to state 24
    CHECKPUMPINGLEMMACFL shift and go to state 25
    ISEQUIVALENT    shift and go to state 26
    SHOW            shift and go to state 27
    UNION           shift and go to state 28
    INTERSECT       shift and go to state 29
    COMPLEMENT      shift and go to state 30
    DIFF            shift and go to state 31
    ISDFA           shift and go to state 32
    ISNFA           shift and go to state 33
    ISDPDA          shift and go to state 34
    ISNPDA          shift and go to state 35
    IF              shift and go to state 36
    SLCOMMENT       shift and go to state 37
    MLCOMMENT       shift and go to state 38
    DOCCOMMENT      shift and go to state 39

    statement_list_fa              shift and go to state 219
    statement                      shift and go to state 220

state 178

    (20) statement -> PDA ID LPAREN RPAREN LBRACE . statement_list_pda RBRACE
    (21) statement_list_pda -> . statement
    (22) statement_list_pda -> . statement_list_pda statement
    (1) statement -> . ALPHABET ID EQUALS LBRACE alphabet_list RBRACE
    (4) statement -> . STR ID EQUALS SINGLEQUOTE STRING SINGLEQUOTE
    (5) statement -> . INITIAL COLON LBRACE ID RBRACE
    (6) statement -> . FINAL COLON LBRACE final_list RBRACE
    (9) statement -> . STATES COLON LBRACE states_list RBRACE
    (12) statement -> . TRANSITIONS COLON LBRACE transitions_list RBRACE
    (17) statement -> . FA ID LPAREN RPAREN LBRACE statement_list_fa RBRACE
    (20) statement -> . PDA ID LPAREN RPAREN LBRACE statement_list_pda RBRACE
    (23) statement -> . STACK_INIT COLON ID
    (24) statement -> . CFG ID LPAREN RPAREN LBRACE statement_list_cfg RBRACE
    (27) statement -> . NONTERMINALS COLON LBRACE nonterminals_list RBRACE
    (30) statement -> . TERMINALS COLON LBRACE terminals_list RBRACE
    (33) statement -> . START COLON ID
    (34) statement -> . RULES COLON LBRACE rules_list RBRACE
    (41) statement -> . RE ID EQUALS SINGLEQUOTE REGEX SINGLEQUOTE
    (58) statement -> . MINIMIZE LPAREN ID RPAREN
    (59) statement -> . SIMULATE LPAREN ID COMMA ID RPAREN
    (60) statement -> . VISUALIZE LPAREN ID RPAREN
    (61) statement -> . CONCAT LPAREN ID COMMA ID RPAREN
    (62) statement -> . POWER LPAREN ID COMMA NUMBER RPAREN
    (63) statement -> . KLEENE LPAREN ID RPAREN
    (64) statement -> . CONVERT LPAREN ID COMMA ID RPAREN
    (65) statement -> . CHECKPUMPINGLEMMAREG LPAREN ID RPAREN
    (66) statement -> . CHECKPUMPINGLEMMACFL LPAREN ID RPAREN
    (67) statement -> . ISEQUIVALENT LPAREN ID COMMA ID RPAREN
    (76) statement -> . SHOW LPAREN show_type RPAREN
    (77) statement -> . UNION LPAREN ID COMMA ID RPAREN
    (78) statement -> . INTERSECT LPAREN ID COMMA ID RPAREN
    (79) statement -> . COMPLEMENT LPAREN ID RPAREN
    (80) statement -> . DIFF LPAREN ID COMMA ID RPAREN
    (81) statement -> . ISDFA LPAREN ID RPAREN
    (82) statement -> . ISNFA LPAREN ID RPAREN
    (83) statement -> . ISDPDA LPAREN ID RPAREN
    (84) statement -> . ISNPDA LPAREN ID RPAREN
    (85) statement -> . IF LPAREN condition RPAREN LBRACE statement RBRACE ELSE LBRACE statement RBRACE
    (86) statement -> . IF LPAREN condition RPAREN LBRACE statement RBRACE ELSE IF LPAREN condition RPAREN LBRACE statement RBRACE
    (87) statement -> . IF LPAREN condition RPAREN LBRACE statement RBRACE ELSE IF LPAREN condition RPAREN LBRACE statement RBRACE ELSE LBRACE statement RBRACE
    (88) statement -> . IF LPAREN condition RPAREN LBRACE statement RBRACE
    (96) statement -> . SLCOMMENT
    (97) statement -> . MLCOMMENT
    (98) statement -> . DOCCOMMENT

    ALPHABET        shift and go to state 2
    STR             shift and go to state 3
    INITIAL         shift and go to state 4
    FINAL           shift and go to state 5
    STATES          shift and go to state 6
    TRANSITIONS     shift and go to state 7
    FA              shift and go to state 8
    PDA             shift and go to state 9
    STACK_INIT      shift and go to state 10
    CFG             shift and go to state 11
    NONTERMINALS    shift and go to state 12
    TERMINALS       shift and go to state 13
    START           shift and go to state 14
    RULES           shift and go to state 15
    RE              shift and go to state 16
    MINIMIZE        shift and go to state 17
    SIMULATE        shift and go to state 18
    VISUALIZE       shift and go to state 19
    CONCAT          shift and go to state 20
    POWER           shift and go to state 21
    KLEENE          shift and go to state 22
    CONVERT         shift and go to state 23
    CHECKPUMPINGLEMMAREG shift and go to state 24
    CHECKPUMPINGLEMMACFL shift and go to state 25
    ISEQUIVALENT    shift and go to state 26
    SHOW            shift and go to state 27
    UNION           shift and go to state 28
    INTERSECT       shift and go to state 29
    COMPLEMENT      shift and go to state 30
    DIFF            shift and go to state 31
    ISDFA           shift and go to state 32
    ISNFA           shift and go to state 33
    ISDPDA          shift and go to state 34
    ISNPDA          shift and go to state 35
    IF              shift and go to state 36
    SLCOMMENT       shift and go to state 37
    MLCOMMENT       shift and go to state 38
    DOCCOMMENT      shift and go to state 39

    statement_list_pda             shift and go to state 221
    statement                      shift and go to state 222

state 179

    (24) statement -> CFG ID LPAREN RPAREN LBRACE . statement_list_cfg RBRACE
    (25) statement_list_cfg -> . statement
    (26) statement_list_cfg -> . statement_list_cfg statement
    (1) statement -> . ALPHABET ID EQUALS LBRACE alphabet_list RBRACE
    (4) statement -> . STR ID EQUALS SINGLEQUOTE STRING SINGLEQUOTE
    (5) statement -> . INITIAL COLON LBRACE ID RBRACE
    (6) statement -> . FINAL COLON LBRACE final_list RBRACE
    (9) statement -> . STATES COLON LBRACE states_list RBRACE
    (12) statement -> . TRANSITIONS COLON LBRACE transitions_list RBRACE
    (17) statement -> . FA ID LPAREN RPAREN LBRACE statement_list_fa RBRACE
    (20) statement -> . PDA ID LPAREN RPAREN LBRACE statement_list_pda RBRACE
    (23) statement -> . STACK_INIT COLON ID
    (24) statement -> . CFG ID LPAREN RPAREN LBRACE statement_list_cfg RBRACE
    (27) statement -> . NONTERMINALS COLON LBRACE nonterminals_list RBRACE
    (30) statement -> . TERMINALS COLON LBRACE terminals_list RBRACE
    (33) statement -> . START COLON ID
    (34) statement -> . RULES COLON LBRACE rules_list RBRACE
    (41) statement -> . RE ID EQUALS SINGLEQUOTE REGEX SINGLEQUOTE
    (58) statement -> . MINIMIZE LPAREN ID RPAREN
    (59) statement -> . SIMULATE LPAREN ID COMMA ID RPAREN
    (60) statement -> . VISUALIZE LPAREN ID RPAREN
    (61) statement -> . CONCAT LPAREN ID COMMA ID RPAREN
    (62) statement -> . POWER LPAREN ID COMMA NUMBER RPAREN
    (63) statement -> . KLEENE LPAREN ID RPAREN
    (64) statement -> . CONVERT LPAREN ID COMMA ID RPAREN
    (65) statement -> . CHECKPUMPINGLEMMAREG LPAREN ID RPAREN
    (66) statement -> . CHECKPUMPINGLEMMACFL LPAREN ID RPAREN
    (67) statement -> . ISEQUIVALENT LPAREN ID COMMA ID RPAREN
    (76) statement -> . SHOW LPAREN show_type RPAREN
    (77) statement -> . UNION LPAREN ID COMMA ID RPAREN
    (78) statement -> . INTERSECT LPAREN ID COMMA ID RPAREN
    (79) statement -> . COMPLEMENT LPAREN ID RPAREN
    (80) statement -> . DIFF LPAREN ID COMMA ID RPAREN
    (81) statement -> . ISDFA LPAREN ID RPAREN
    (82) statement -> . ISNFA LPAREN ID RPAREN
    (83) statement -> . ISDPDA LPAREN ID RPAREN
    (84) statement -> . ISNPDA LPAREN ID RPAREN
    (85) statement -> . IF LPAREN condition RPAREN LBRACE statement RBRACE ELSE LBRACE statement RBRACE
    (86) statement -> . IF LPAREN condition RPAREN LBRACE statement RBRACE ELSE IF LPAREN condition RPAREN LBRACE statement RBRACE
    (87) statement -> . IF LPAREN condition RPAREN LBRACE statement RBRACE ELSE IF LPAREN condition RPAREN LBRACE statement RBRACE ELSE LBRACE statement RBRACE
    (88) statement -> . IF LPAREN condition RPAREN LBRACE statement RBRACE
    (96) statement -> . SLCOMMENT
    (97) statement -> . MLCOMMENT
    (98) statement -> . DOCCOMMENT

    ALPHABET        shift and go to state 2
    STR             shift and go to state 3
    INITIAL         shift and go to state 4
    FINAL           shift and go to state 5
    STATES          shift and go to state 6
    TRANSITIONS     shift and go to state 7
    FA              shift and go to state 8
    PDA             shift and go to state 9
    STACK_INIT      shift and go to state 10
    CFG             shift and go to state 11
    NONTERMINALS    shift and go to state 12
    TERMINALS       shift and go to state 13
    START           shift and go to state 14
    RULES           shift and go to state 15
    RE              shift and go to state 16
    MINIMIZE        shift and go to state 17
    SIMULATE        shift and go to state 18
    VISUALIZE       shift and go to state 19
    CONCAT          shift and go to state 20
    POWER           shift and go to state 21
    KLEENE          shift and go to state 22
    CONVERT         shift and go to state 23
    CHECKPUMPINGLEMMAREG shift and go to state 24
    CHECKPUMPINGLEMMACFL shift and go to state 25
    ISEQUIVALENT    shift and go to state 26
    SHOW            shift and go to state 27
    UNION           shift and go to state 28
    INTERSECT       shift and go to state 29
    COMPLEMENT      shift and go to state 30
    DIFF            shift and go to state 31
    ISDFA           shift and go to state 32
    ISNFA           shift and go to state 33
    ISDPDA          shift and go to state 34
    ISNPDA          shift and go to state 35
    IF              shift and go to state 36
    SLCOMMENT       shift and go to state 37
    MLCOMMENT       shift and go to state 38
    DOCCOMMENT      shift and go to state 39

    statement_list_cfg             shift and go to state 223
    statement                      shift and go to state 224

state 180

    (27) statement -> NONTERMINALS COLON LBRACE nonterminals_list RBRACE .

    $end            reduce using rule 27 (statement -> NONTERMINALS COLON LBRACE nonterminals_list RBRACE .)
    RBRACE          reduce using rule 27 (statement -> NONTERMINALS COLON LBRACE nonterminals_list RBRACE .)
    ALPHABET        reduce using rule 27 (statement -> NONTERMINALS COLON LBRACE nonterminals_list RBRACE .)
    STR             reduce using rule 27 (statement -> NONTERMINALS COLON LBRACE nonterminals_list RBRACE .)
    INITIAL         reduce using rule 27 (statement -> NONTERMINALS COLON LBRACE nonterminals_list RBRACE .)
    FINAL           reduce using rule 27 (statement -> NONTERMINALS COLON LBRACE nonterminals_list RBRACE .)
    STATES          reduce using rule 27 (statement -> NONTERMINALS COLON LBRACE nonterminals_list RBRACE .)
    TRANSITIONS     reduce using rule 27 (statement -> NONTERMINALS COLON LBRACE nonterminals_list RBRACE .)
    FA              reduce using rule 27 (statement -> NONTERMINALS COLON LBRACE nonterminals_list RBRACE .)
    PDA             reduce using rule 27 (statement -> NONTERMINALS COLON LBRACE nonterminals_list RBRACE .)
    STACK_INIT      reduce using rule 27 (statement -> NONTERMINALS COLON LBRACE nonterminals_list RBRACE .)
    CFG             reduce using rule 27 (statement -> NONTERMINALS COLON LBRACE nonterminals_list RBRACE .)
    NONTERMINALS    reduce using rule 27 (statement -> NONTERMINALS COLON LBRACE nonterminals_list RBRACE .)
    TERMINALS       reduce using rule 27 (statement -> NONTERMINALS COLON LBRACE nonterminals_list RBRACE .)
    START           reduce using rule 27 (statement -> NONTERMINALS COLON LBRACE nonterminals_list RBRACE .)
    RULES           reduce using rule 27 (statement -> NONTERMINALS COLON LBRACE nonterminals_list RBRACE .)
    RE              reduce using rule 27 (statement -> NONTERMINALS COLON LBRACE nonterminals_list RBRACE .)
    MINIMIZE        reduce using rule 27 (statement -> NONTERMINALS COLON LBRACE nonterminals_list RBRACE .)
    SIMULATE        reduce using rule 27 (statement -> NONTERMINALS COLON LBRACE nonterminals_list RBRACE .)
    VISUALIZE       reduce using rule 27 (statement -> NONTERMINALS COLON LBRACE nonterminals_list RBRACE .)
    CONCAT          reduce using rule 27 (statement -> NONTERMINALS COLON LBRACE nonterminals_list RBRACE .)
    POWER           reduce using rule 27 (statement -> NONTERMINALS COLON LBRACE nonterminals_list RBRACE .)
    KLEENE          reduce using rule 27 (statement -> NONTERMINALS COLON LBRACE nonterminals_list RBRACE .)
    CONVERT         reduce using rule 27 (statement -> NONTERMINALS COLON LBRACE nonterminals_list RBRACE .)
    CHECKPUMPINGLEMMAREG reduce using rule 27 (statement -> NONTERMINALS COLON LBRACE nonterminals_list RBRACE .)
    CHECKPUMPINGLEMMACFL reduce using rule 27 (statement -> NONTERMINALS COLON LBRACE nonterminals_list RBRACE .)
    ISEQUIVALENT    reduce using rule 27 (statement -> NONTERMINALS COLON LBRACE nonterminals_list RBRACE .)
    SHOW            reduce using rule 27 (statement -> NONTERMINALS COLON LBRACE nonterminals_list RBRACE .)
    UNION           reduce using rule 27 (statement -> NONTERMINALS COLON LBRACE nonterminals_list RBRACE .)
    INTERSECT       reduce using rule 27 (statement -> NONTERMINALS COLON LBRACE nonterminals_list RBRACE .)
    COMPLEMENT      reduce using rule 27 (statement -> NONTERMINALS COLON LBRACE nonterminals_list RBRACE .)
    DIFF            reduce using rule 27 (statement -> NONTERMINALS COLON LBRACE nonterminals_list RBRACE .)
    ISDFA           reduce using rule 27 (statement -> NONTERMINALS COLON LBRACE nonterminals_list RBRACE .)
    ISNFA           reduce using rule 27 (statement -> NONTERMINALS COLON LBRACE nonterminals_list RBRACE .)
    ISDPDA          reduce using rule 27 (statement -> NONTERMINALS COLON LBRACE nonterminals_list RBRACE .)
    ISNPDA          reduce using rule 27 (statement -> NONTERMINALS COLON LBRACE nonterminals_list RBRACE .)
    IF              reduce using rule 27 (statement -> NONTERMINALS COLON LBRACE nonterminals_list RBRACE .)
    SLCOMMENT       reduce using rule 27 (statement -> NONTERMINALS COLON LBRACE nonterminals_list RBRACE .)
    MLCOMMENT       reduce using rule 27 (statement -> NONTERMINALS COLON LBRACE nonterminals_list RBRACE .)
    DOCCOMMENT      reduce using rule 27 (statement -> NONTERMINALS COLON LBRACE nonterminals_list RBRACE .)


state 181

    (29) nonterminals_list -> nonterminals_list COMMA . ID

    ID              shift and go to state 225


state 182

    (30) statement -> TERMINALS COLON LBRACE terminals_list RBRACE .

    $end            reduce using rule 30 (statement -> TERMINALS COLON LBRACE terminals_list RBRACE .)
    RBRACE          reduce using rule 30 (statement -> TERMINALS COLON LBRACE terminals_list RBRACE .)
    ALPHABET        reduce using rule 30 (statement -> TERMINALS COLON LBRACE terminals_list RBRACE .)
    STR             reduce using rule 30 (statement -> TERMINALS COLON LBRACE terminals_list RBRACE .)
    INITIAL         reduce using rule 30 (statement -> TERMINALS COLON LBRACE terminals_list RBRACE .)
    FINAL           reduce using rule 30 (statement -> TERMINALS COLON LBRACE terminals_list RBRACE .)
    STATES          reduce using rule 30 (statement -> TERMINALS COLON LBRACE terminals_list RBRACE .)
    TRANSITIONS     reduce using rule 30 (statement -> TERMINALS COLON LBRACE terminals_list RBRACE .)
    FA              reduce using rule 30 (statement -> TERMINALS COLON LBRACE terminals_list RBRACE .)
    PDA             reduce using rule 30 (statement -> TERMINALS COLON LBRACE terminals_list RBRACE .)
    STACK_INIT      reduce using rule 30 (statement -> TERMINALS COLON LBRACE terminals_list RBRACE .)
    CFG             reduce using rule 30 (statement -> TERMINALS COLON LBRACE terminals_list RBRACE .)
    NONTERMINALS    reduce using rule 30 (statement -> TERMINALS COLON LBRACE terminals_list RBRACE .)
    TERMINALS       reduce using rule 30 (statement -> TERMINALS COLON LBRACE terminals_list RBRACE .)
    START           reduce using rule 30 (statement -> TERMINALS COLON LBRACE terminals_list RBRACE .)
    RULES           reduce using rule 30 (statement -> TERMINALS COLON LBRACE terminals_list RBRACE .)
    RE              reduce using rule 30 (statement -> TERMINALS COLON LBRACE terminals_list RBRACE .)
    MINIMIZE        reduce using rule 30 (statement -> TERMINALS COLON LBRACE terminals_list RBRACE .)
    SIMULATE        reduce using rule 30 (statement -> TERMINALS COLON LBRACE terminals_list RBRACE .)
    VISUALIZE       reduce using rule 30 (statement -> TERMINALS COLON LBRACE terminals_list RBRACE .)
    CONCAT          reduce using rule 30 (statement -> TERMINALS COLON LBRACE terminals_list RBRACE .)
    POWER           reduce using rule 30 (statement -> TERMINALS COLON LBRACE terminals_list RBRACE .)
    KLEENE          reduce using rule 30 (statement -> TERMINALS COLON LBRACE terminals_list RBRACE .)
    CONVERT         reduce using rule 30 (statement -> TERMINALS COLON LBRACE terminals_list RBRACE .)
    CHECKPUMPINGLEMMAREG reduce using rule 30 (statement -> TERMINALS COLON LBRACE terminals_list RBRACE .)
    CHECKPUMPINGLEMMACFL reduce using rule 30 (statement -> TERMINALS COLON LBRACE terminals_list RBRACE .)
    ISEQUIVALENT    reduce using rule 30 (statement -> TERMINALS COLON LBRACE terminals_list RBRACE .)
    SHOW            reduce using rule 30 (statement -> TERMINALS COLON LBRACE terminals_list RBRACE .)
    UNION           reduce using rule 30 (statement -> TERMINALS COLON LBRACE terminals_list RBRACE .)
    INTERSECT       reduce using rule 30 (statement -> TERMINALS COLON LBRACE terminals_list RBRACE .)
    COMPLEMENT      reduce using rule 30 (statement -> TERMINALS COLON LBRACE terminals_list RBRACE .)
    DIFF            reduce using rule 30 (statement -> TERMINALS COLON LBRACE terminals_list RBRACE .)
    ISDFA           reduce using rule 30 (statement -> TERMINALS COLON LBRACE terminals_list RBRACE .)
    ISNFA           reduce using rule 30 (statement -> TERMINALS COLON LBRACE terminals_list RBRACE .)
    ISDPDA          reduce using rule 30 (statement -> TERMINALS COLON LBRACE terminals_list RBRACE .)
    ISNPDA          reduce using rule 30 (statement -> TERMINALS COLON LBRACE terminals_list RBRACE .)
    IF              reduce using rule 30 (statement -> TERMINALS COLON LBRACE terminals_list RBRACE .)
    SLCOMMENT       reduce using rule 30 (statement -> TERMINALS COLON LBRACE terminals_list RBRACE .)
    MLCOMMENT       reduce using rule 30 (statement -> TERMINALS COLON LBRACE terminals_list RBRACE .)
    DOCCOMMENT      reduce using rule 30 (statement -> TERMINALS COLON LBRACE terminals_list RBRACE .)


state 183

    (32) terminals_list -> terminals_list COMMA . ID

    ID              shift and go to state 226


state 184

    (34) statement -> RULES COLON LBRACE rules_list RBRACE .

    $end            reduce using rule 34 (statement -> RULES COLON LBRACE rules_list RBRACE .)
    RBRACE          reduce using rule 34 (statement -> RULES COLON LBRACE rules_list RBRACE .)
    ALPHABET        reduce using rule 34 (statement -> RULES COLON LBRACE rules_list RBRACE .)
    STR             reduce using rule 34 (statement -> RULES COLON LBRACE rules_list RBRACE .)
    INITIAL         reduce using rule 34 (statement -> RULES COLON LBRACE rules_list RBRACE .)
    FINAL           reduce using rule 34 (statement -> RULES COLON LBRACE rules_list RBRACE .)
    STATES          reduce using rule 34 (statement -> RULES COLON LBRACE rules_list RBRACE .)
    TRANSITIONS     reduce using rule 34 (statement -> RULES COLON LBRACE rules_list RBRACE .)
    FA              reduce using rule 34 (statement -> RULES COLON LBRACE rules_list RBRACE .)
    PDA             reduce using rule 34 (statement -> RULES COLON LBRACE rules_list RBRACE .)
    STACK_INIT      reduce using rule 34 (statement -> RULES COLON LBRACE rules_list RBRACE .)
    CFG             reduce using rule 34 (statement -> RULES COLON LBRACE rules_list RBRACE .)
    NONTERMINALS    reduce using rule 34 (statement -> RULES COLON LBRACE rules_list RBRACE .)
    TERMINALS       reduce using rule 34 (statement -> RULES COLON LBRACE rules_list RBRACE .)
    START           reduce using rule 34 (statement -> RULES COLON LBRACE rules_list RBRACE .)
    RULES           reduce using rule 34 (statement -> RULES COLON LBRACE rules_list RBRACE .)
    RE              reduce using rule 34 (statement -> RULES COLON LBRACE rules_list RBRACE .)
    MINIMIZE        reduce using rule 34 (statement -> RULES COLON LBRACE rules_list RBRACE .)
    SIMULATE        reduce using rule 34 (statement -> RULES COLON LBRACE rules_list RBRACE .)
    VISUALIZE       reduce using rule 34 (statement -> RULES COLON LBRACE rules_list RBRACE .)
    CONCAT          reduce using rule 34 (statement -> RULES COLON LBRACE rules_list RBRACE .)
    POWER           reduce using rule 34 (statement -> RULES COLON LBRACE rules_list RBRACE .)
    KLEENE          reduce using rule 34 (statement -> RULES COLON LBRACE rules_list RBRACE .)
    CONVERT         reduce using rule 34 (statement -> RULES COLON LBRACE rules_list RBRACE .)
    CHECKPUMPINGLEMMAREG reduce using rule 34 (statement -> RULES COLON LBRACE rules_list RBRACE .)
    CHECKPUMPINGLEMMACFL reduce using rule 34 (statement -> RULES COLON LBRACE rules_list RBRACE .)
    ISEQUIVALENT    reduce using rule 34 (statement -> RULES COLON LBRACE rules_list RBRACE .)
    SHOW            reduce using rule 34 (statement -> RULES COLON LBRACE rules_list RBRACE .)
    UNION           reduce using rule 34 (statement -> RULES COLON LBRACE rules_list RBRACE .)
    INTERSECT       reduce using rule 34 (statement -> RULES COLON LBRACE rules_list RBRACE .)
    COMPLEMENT      reduce using rule 34 (statement -> RULES COLON LBRACE rules_list RBRACE .)
    DIFF            reduce using rule 34 (statement -> RULES COLON LBRACE rules_list RBRACE .)
    ISDFA           reduce using rule 34 (statement -> RULES COLON LBRACE rules_list RBRACE .)
    ISNFA           reduce using rule 34 (statement -> RULES COLON LBRACE rules_list RBRACE .)
    ISDPDA          reduce using rule 34 (statement -> RULES COLON LBRACE rules_list RBRACE .)
    ISNPDA          reduce using rule 34 (statement -> RULES COLON LBRACE rules_list RBRACE .)
    IF              reduce using rule 34 (statement -> RULES COLON LBRACE rules_list RBRACE .)
    SLCOMMENT       reduce using rule 34 (statement -> RULES COLON LBRACE rules_list RBRACE .)
    MLCOMMENT       reduce using rule 34 (statement -> RULES COLON LBRACE rules_list RBRACE .)
    DOCCOMMENT      reduce using rule 34 (statement -> RULES COLON LBRACE rules_list RBRACE .)


state 185

    (36) rules_list -> rules_list rule .

    RBRACE          reduce using rule 36 (rules_list -> rules_list rule .)
    ID              reduce using rule 36 (rules_list -> rules_list rule .)


state 186

    (37) rule -> ID ARROW . rule_rhs SEMICOLON
    (38) rule_rhs -> . ID
    (39) rule_rhs -> . rule_rhs PIPE ID
    (40) rule_rhs -> . rule_rhs PIPE EPSILON

    ID              shift and go to state 227

    rule_rhs                       shift and go to state 228

state 187

    (41) statement -> RE ID EQUALS SINGLEQUOTE REGEX . SINGLEQUOTE

    SINGLEQUOTE     shift and go to state 229


state 188

    (42) REGEX -> REGEX_CONTENT .
    (43) REGEX_CONTENT -> REGEX_CONTENT . REGEX_CHAR
    (45) REGEX_CHAR -> . REGEX_SPECIAL_CHAR
    (46) REGEX_CHAR -> . REGEX_LITERAL_CHAR
    (47) REGEX_SPECIAL_CHAR -> . STAR
    (48) REGEX_SPECIAL_CHAR -> . PLUS
    (49) REGEX_SPECIAL_CHAR -> . OR
    (50) REGEX_SPECIAL_CHAR -> . DOT
    (51) REGEX_SPECIAL_CHAR -> . CARET
    (52) REGEX_SPECIAL_CHAR -> . DOLLAR
    (53) REGEX_SPECIAL_CHAR -> . QUESTION
    (54) REGEX_SPECIAL_CHAR -> . LPAREN
    (55) REGEX_SPECIAL_CHAR -> . RPAREN
    (56) REGEX_SPECIAL_CHAR -> . LBRACE
    (57) REGEX_SPECIAL_CHAR -> . RBRACE

    SINGLEQUOTE     reduce using rule 42 (REGEX -> REGEX_CONTENT .)
    REGEX_LITERAL_CHAR shift and go to state 191
    STAR            shift and go to state 192
    PLUS            shift and go to state 193
    OR              shift and go to state 194
    DOT             shift and go to state 195
    CARET           shift and go to state 196
    DOLLAR          shift and go to state 197
    QUESTION        shift and go to state 198
    LPAREN          shift and go to state 199
    RPAREN          shift and go to state 200
    LBRACE          shift and go to state 201
    RBRACE          shift and go to state 202

    REGEX_CHAR                     shift and go to state 230
    REGEX_SPECIAL_CHAR             shift and go to state 190

state 189

    (44) REGEX_CONTENT -> REGEX_CHAR .

    REGEX_LITERAL_CHAR reduce using rule 44 (REGEX_CONTENT -> REGEX_CHAR .)
    STAR            reduce using rule 44 (REGEX_CONTENT -> REGEX_CHAR .)
    PLUS            reduce using rule 44 (REGEX_CONTENT -> REGEX_CHAR .)
    OR              reduce using rule 44 (REGEX_CONTENT -> REGEX_CHAR .)
    DOT             reduce using rule 44 (REGEX_CONTENT -> REGEX_CHAR .)
    CARET           reduce using rule 44 (REGEX_CONTENT -> REGEX_CHAR .)
    DOLLAR          reduce using rule 44 (REGEX_CONTENT -> REGEX_CHAR .)
    QUESTION        reduce using rule 44 (REGEX_CONTENT -> REGEX_CHAR .)
    LPAREN          reduce using rule 44 (REGEX_CONTENT -> REGEX_CHAR .)
    RPAREN          reduce using rule 44 (REGEX_CONTENT -> REGEX_CHAR .)
    LBRACE          reduce using rule 44 (REGEX_CONTENT -> REGEX_CHAR .)
    RBRACE          reduce using rule 44 (REGEX_CONTENT -> REGEX_CHAR .)
    SINGLEQUOTE     reduce using rule 44 (REGEX_CONTENT -> REGEX_CHAR .)


state 190

    (45) REGEX_CHAR -> REGEX_SPECIAL_CHAR .

    REGEX_LITERAL_CHAR reduce using rule 45 (REGEX_CHAR -> REGEX_SPECIAL_CHAR .)
    STAR            reduce using rule 45 (REGEX_CHAR -> REGEX_SPECIAL_CHAR .)
    PLUS            reduce using rule 45 (REGEX_CHAR -> REGEX_SPECIAL_CHAR .)
    OR              reduce using rule 45 (REGEX_CHAR -> REGEX_SPECIAL_CHAR .)
    DOT             reduce using rule 45 (REGEX_CHAR -> REGEX_SPECIAL_CHAR .)
    CARET           reduce using rule 45 (REGEX_CHAR -> REGEX_SPECIAL_CHAR .)
    DOLLAR          reduce using rule 45 (REGEX_CHAR -> REGEX_SPECIAL_CHAR .)
    QUESTION        reduce using rule 45 (REGEX_CHAR -> REGEX_SPECIAL_CHAR .)
    LPAREN          reduce using rule 45 (REGEX_CHAR -> REGEX_SPECIAL_CHAR .)
    RPAREN          reduce using rule 45 (REGEX_CHAR -> REGEX_SPECIAL_CHAR .)
    LBRACE          reduce using rule 45 (REGEX_CHAR -> REGEX_SPECIAL_CHAR .)
    RBRACE          reduce using rule 45 (REGEX_CHAR -> REGEX_SPECIAL_CHAR .)
    SINGLEQUOTE     reduce using rule 45 (REGEX_CHAR -> REGEX_SPECIAL_CHAR .)


state 191

    (46) REGEX_CHAR -> REGEX_LITERAL_CHAR .

    REGEX_LITERAL_CHAR reduce using rule 46 (REGEX_CHAR -> REGEX_LITERAL_CHAR .)
    STAR            reduce using rule 46 (REGEX_CHAR -> REGEX_LITERAL_CHAR .)
    PLUS            reduce using rule 46 (REGEX_CHAR -> REGEX_LITERAL_CHAR .)
    OR              reduce using rule 46 (REGEX_CHAR -> REGEX_LITERAL_CHAR .)
    DOT             reduce using rule 46 (REGEX_CHAR -> REGEX_LITERAL_CHAR .)
    CARET           reduce using rule 46 (REGEX_CHAR -> REGEX_LITERAL_CHAR .)
    DOLLAR          reduce using rule 46 (REGEX_CHAR -> REGEX_LITERAL_CHAR .)
    QUESTION        reduce using rule 46 (REGEX_CHAR -> REGEX_LITERAL_CHAR .)
    LPAREN          reduce using rule 46 (REGEX_CHAR -> REGEX_LITERAL_CHAR .)
    RPAREN          reduce using rule 46 (REGEX_CHAR -> REGEX_LITERAL_CHAR .)
    LBRACE          reduce using rule 46 (REGEX_CHAR -> REGEX_LITERAL_CHAR .)
    RBRACE          reduce using rule 46 (REGEX_CHAR -> REGEX_LITERAL_CHAR .)
    SINGLEQUOTE     reduce using rule 46 (REGEX_CHAR -> REGEX_LITERAL_CHAR .)


state 192

    (47) REGEX_SPECIAL_CHAR -> STAR .

    REGEX_LITERAL_CHAR reduce using rule 47 (REGEX_SPECIAL_CHAR -> STAR .)
    STAR            reduce using rule 47 (REGEX_SPECIAL_CHAR -> STAR .)
    PLUS            reduce using rule 47 (REGEX_SPECIAL_CHAR -> STAR .)
    OR              reduce using rule 47 (REGEX_SPECIAL_CHAR -> STAR .)
    DOT             reduce using rule 47 (REGEX_SPECIAL_CHAR -> STAR .)
    CARET           reduce using rule 47 (REGEX_SPECIAL_CHAR -> STAR .)
    DOLLAR          reduce using rule 47 (REGEX_SPECIAL_CHAR -> STAR .)
    QUESTION        reduce using rule 47 (REGEX_SPECIAL_CHAR -> STAR .)
    LPAREN          reduce using rule 47 (REGEX_SPECIAL_CHAR -> STAR .)
    RPAREN          reduce using rule 47 (REGEX_SPECIAL_CHAR -> STAR .)
    LBRACE          reduce using rule 47 (REGEX_SPECIAL_CHAR -> STAR .)
    RBRACE          reduce using rule 47 (REGEX_SPECIAL_CHAR -> STAR .)
    SINGLEQUOTE     reduce using rule 47 (REGEX_SPECIAL_CHAR -> STAR .)


state 193

    (48) REGEX_SPECIAL_CHAR -> PLUS .

    REGEX_LITERAL_CHAR reduce using rule 48 (REGEX_SPECIAL_CHAR -> PLUS .)
    STAR            reduce using rule 48 (REGEX_SPECIAL_CHAR -> PLUS .)
    PLUS            reduce using rule 48 (REGEX_SPECIAL_CHAR -> PLUS .)
    OR              reduce using rule 48 (REGEX_SPECIAL_CHAR -> PLUS .)
    DOT             reduce using rule 48 (REGEX_SPECIAL_CHAR -> PLUS .)
    CARET           reduce using rule 48 (REGEX_SPECIAL_CHAR -> PLUS .)
    DOLLAR          reduce using rule 48 (REGEX_SPECIAL_CHAR -> PLUS .)
    QUESTION        reduce using rule 48 (REGEX_SPECIAL_CHAR -> PLUS .)
    LPAREN          reduce using rule 48 (REGEX_SPECIAL_CHAR -> PLUS .)
    RPAREN          reduce using rule 48 (REGEX_SPECIAL_CHAR -> PLUS .)
    LBRACE          reduce using rule 48 (REGEX_SPECIAL_CHAR -> PLUS .)
    RBRACE          reduce using rule 48 (REGEX_SPECIAL_CHAR -> PLUS .)
    SINGLEQUOTE     reduce using rule 48 (REGEX_SPECIAL_CHAR -> PLUS .)


state 194

    (49) REGEX_SPECIAL_CHAR -> OR .

    REGEX_LITERAL_CHAR reduce using rule 49 (REGEX_SPECIAL_CHAR -> OR .)
    STAR            reduce using rule 49 (REGEX_SPECIAL_CHAR -> OR .)
    PLUS            reduce using rule 49 (REGEX_SPECIAL_CHAR -> OR .)
    OR              reduce using rule 49 (REGEX_SPECIAL_CHAR -> OR .)
    DOT             reduce using rule 49 (REGEX_SPECIAL_CHAR -> OR .)
    CARET           reduce using rule 49 (REGEX_SPECIAL_CHAR -> OR .)
    DOLLAR          reduce using rule 49 (REGEX_SPECIAL_CHAR -> OR .)
    QUESTION        reduce using rule 49 (REGEX_SPECIAL_CHAR -> OR .)
    LPAREN          reduce using rule 49 (REGEX_SPECIAL_CHAR -> OR .)
    RPAREN          reduce using rule 49 (REGEX_SPECIAL_CHAR -> OR .)
    LBRACE          reduce using rule 49 (REGEX_SPECIAL_CHAR -> OR .)
    RBRACE          reduce using rule 49 (REGEX_SPECIAL_CHAR -> OR .)
    SINGLEQUOTE     reduce using rule 49 (REGEX_SPECIAL_CHAR -> OR .)


state 195

    (50) REGEX_SPECIAL_CHAR -> DOT .

    REGEX_LITERAL_CHAR reduce using rule 50 (REGEX_SPECIAL_CHAR -> DOT .)
    STAR            reduce using rule 50 (REGEX_SPECIAL_CHAR -> DOT .)
    PLUS            reduce using rule 50 (REGEX_SPECIAL_CHAR -> DOT .)
    OR              reduce using rule 50 (REGEX_SPECIAL_CHAR -> DOT .)
    DOT             reduce using rule 50 (REGEX_SPECIAL_CHAR -> DOT .)
    CARET           reduce using rule 50 (REGEX_SPECIAL_CHAR -> DOT .)
    DOLLAR          reduce using rule 50 (REGEX_SPECIAL_CHAR -> DOT .)
    QUESTION        reduce using rule 50 (REGEX_SPECIAL_CHAR -> DOT .)
    LPAREN          reduce using rule 50 (REGEX_SPECIAL_CHAR -> DOT .)
    RPAREN          reduce using rule 50 (REGEX_SPECIAL_CHAR -> DOT .)
    LBRACE          reduce using rule 50 (REGEX_SPECIAL_CHAR -> DOT .)
    RBRACE          reduce using rule 50 (REGEX_SPECIAL_CHAR -> DOT .)
    SINGLEQUOTE     reduce using rule 50 (REGEX_SPECIAL_CHAR -> DOT .)


state 196

    (51) REGEX_SPECIAL_CHAR -> CARET .

    REGEX_LITERAL_CHAR reduce using rule 51 (REGEX_SPECIAL_CHAR -> CARET .)
    STAR            reduce using rule 51 (REGEX_SPECIAL_CHAR -> CARET .)
    PLUS            reduce using rule 51 (REGEX_SPECIAL_CHAR -> CARET .)
    OR              reduce using rule 51 (REGEX_SPECIAL_CHAR -> CARET .)
    DOT             reduce using rule 51 (REGEX_SPECIAL_CHAR -> CARET .)
    CARET           reduce using rule 51 (REGEX_SPECIAL_CHAR -> CARET .)
    DOLLAR          reduce using rule 51 (REGEX_SPECIAL_CHAR -> CARET .)
    QUESTION        reduce using rule 51 (REGEX_SPECIAL_CHAR -> CARET .)
    LPAREN          reduce using rule 51 (REGEX_SPECIAL_CHAR -> CARET .)
    RPAREN          reduce using rule 51 (REGEX_SPECIAL_CHAR -> CARET .)
    LBRACE          reduce using rule 51 (REGEX_SPECIAL_CHAR -> CARET .)
    RBRACE          reduce using rule 51 (REGEX_SPECIAL_CHAR -> CARET .)
    SINGLEQUOTE     reduce using rule 51 (REGEX_SPECIAL_CHAR -> CARET .)


state 197

    (52) REGEX_SPECIAL_CHAR -> DOLLAR .

    REGEX_LITERAL_CHAR reduce using rule 52 (REGEX_SPECIAL_CHAR -> DOLLAR .)
    STAR            reduce using rule 52 (REGEX_SPECIAL_CHAR -> DOLLAR .)
    PLUS            reduce using rule 52 (REGEX_SPECIAL_CHAR -> DOLLAR .)
    OR              reduce using rule 52 (REGEX_SPECIAL_CHAR -> DOLLAR .)
    DOT             reduce using rule 52 (REGEX_SPECIAL_CHAR -> DOLLAR .)
    CARET           reduce using rule 52 (REGEX_SPECIAL_CHAR -> DOLLAR .)
    DOLLAR          reduce using rule 52 (REGEX_SPECIAL_CHAR -> DOLLAR .)
    QUESTION        reduce using rule 52 (REGEX_SPECIAL_CHAR -> DOLLAR .)
    LPAREN          reduce using rule 52 (REGEX_SPECIAL_CHAR -> DOLLAR .)
    RPAREN          reduce using rule 52 (REGEX_SPECIAL_CHAR -> DOLLAR .)
    LBRACE          reduce using rule 52 (REGEX_SPECIAL_CHAR -> DOLLAR .)
    RBRACE          reduce using rule 52 (REGEX_SPECIAL_CHAR -> DOLLAR .)
    SINGLEQUOTE     reduce using rule 52 (REGEX_SPECIAL_CHAR -> DOLLAR .)


state 198

    (53) REGEX_SPECIAL_CHAR -> QUESTION .

    REGEX_LITERAL_CHAR reduce using rule 53 (REGEX_SPECIAL_CHAR -> QUESTION .)
    STAR            reduce using rule 53 (REGEX_SPECIAL_CHAR -> QUESTION .)
    PLUS            reduce using rule 53 (REGEX_SPECIAL_CHAR -> QUESTION .)
    OR              reduce using rule 53 (REGEX_SPECIAL_CHAR -> QUESTION .)
    DOT             reduce using rule 53 (REGEX_SPECIAL_CHAR -> QUESTION .)
    CARET           reduce using rule 53 (REGEX_SPECIAL_CHAR -> QUESTION .)
    DOLLAR          reduce using rule 53 (REGEX_SPECIAL_CHAR -> QUESTION .)
    QUESTION        reduce using rule 53 (REGEX_SPECIAL_CHAR -> QUESTION .)
    LPAREN          reduce using rule 53 (REGEX_SPECIAL_CHAR -> QUESTION .)
    RPAREN          reduce using rule 53 (REGEX_SPECIAL_CHAR -> QUESTION .)
    LBRACE          reduce using rule 53 (REGEX_SPECIAL_CHAR -> QUESTION .)
    RBRACE          reduce using rule 53 (REGEX_SPECIAL_CHAR -> QUESTION .)
    SINGLEQUOTE     reduce using rule 53 (REGEX_SPECIAL_CHAR -> QUESTION .)


state 199

    (54) REGEX_SPECIAL_CHAR -> LPAREN .

    REGEX_LITERAL_CHAR reduce using rule 54 (REGEX_SPECIAL_CHAR -> LPAREN .)
    STAR            reduce using rule 54 (REGEX_SPECIAL_CHAR -> LPAREN .)
    PLUS            reduce using rule 54 (REGEX_SPECIAL_CHAR -> LPAREN .)
    OR              reduce using rule 54 (REGEX_SPECIAL_CHAR -> LPAREN .)
    DOT             reduce using rule 54 (REGEX_SPECIAL_CHAR -> LPAREN .)
    CARET           reduce using rule 54 (REGEX_SPECIAL_CHAR -> LPAREN .)
    DOLLAR          reduce using rule 54 (REGEX_SPECIAL_CHAR -> LPAREN .)
    QUESTION        reduce using rule 54 (REGEX_SPECIAL_CHAR -> LPAREN .)
    LPAREN          reduce using rule 54 (REGEX_SPECIAL_CHAR -> LPAREN .)
    RPAREN          reduce using rule 54 (REGEX_SPECIAL_CHAR -> LPAREN .)
    LBRACE          reduce using rule 54 (REGEX_SPECIAL_CHAR -> LPAREN .)
    RBRACE          reduce using rule 54 (REGEX_SPECIAL_CHAR -> LPAREN .)
    SINGLEQUOTE     reduce using rule 54 (REGEX_SPECIAL_CHAR -> LPAREN .)


state 200

    (55) REGEX_SPECIAL_CHAR -> RPAREN .

    REGEX_LITERAL_CHAR reduce using rule 55 (REGEX_SPECIAL_CHAR -> RPAREN .)
    STAR            reduce using rule 55 (REGEX_SPECIAL_CHAR -> RPAREN .)
    PLUS            reduce using rule 55 (REGEX_SPECIAL_CHAR -> RPAREN .)
    OR              reduce using rule 55 (REGEX_SPECIAL_CHAR -> RPAREN .)
    DOT             reduce using rule 55 (REGEX_SPECIAL_CHAR -> RPAREN .)
    CARET           reduce using rule 55 (REGEX_SPECIAL_CHAR -> RPAREN .)
    DOLLAR          reduce using rule 55 (REGEX_SPECIAL_CHAR -> RPAREN .)
    QUESTION        reduce using rule 55 (REGEX_SPECIAL_CHAR -> RPAREN .)
    LPAREN          reduce using rule 55 (REGEX_SPECIAL_CHAR -> RPAREN .)
    RPAREN          reduce using rule 55 (REGEX_SPECIAL_CHAR -> RPAREN .)
    LBRACE          reduce using rule 55 (REGEX_SPECIAL_CHAR -> RPAREN .)
    RBRACE          reduce using rule 55 (REGEX_SPECIAL_CHAR -> RPAREN .)
    SINGLEQUOTE     reduce using rule 55 (REGEX_SPECIAL_CHAR -> RPAREN .)


state 201

    (56) REGEX_SPECIAL_CHAR -> LBRACE .

    REGEX_LITERAL_CHAR reduce using rule 56 (REGEX_SPECIAL_CHAR -> LBRACE .)
    STAR            reduce using rule 56 (REGEX_SPECIAL_CHAR -> LBRACE .)
    PLUS            reduce using rule 56 (REGEX_SPECIAL_CHAR -> LBRACE .)
    OR              reduce using rule 56 (REGEX_SPECIAL_CHAR -> LBRACE .)
    DOT             reduce using rule 56 (REGEX_SPECIAL_CHAR -> LBRACE .)
    CARET           reduce using rule 56 (REGEX_SPECIAL_CHAR -> LBRACE .)
    DOLLAR          reduce using rule 56 (REGEX_SPECIAL_CHAR -> LBRACE .)
    QUESTION        reduce using rule 56 (REGEX_SPECIAL_CHAR -> LBRACE .)
    LPAREN          reduce using rule 56 (REGEX_SPECIAL_CHAR -> LBRACE .)
    RPAREN          reduce using rule 56 (REGEX_SPECIAL_CHAR -> LBRACE .)
    LBRACE          reduce using rule 56 (REGEX_SPECIAL_CHAR -> LBRACE .)
    RBRACE          reduce using rule 56 (REGEX_SPECIAL_CHAR -> LBRACE .)
    SINGLEQUOTE     reduce using rule 56 (REGEX_SPECIAL_CHAR -> LBRACE .)


state 202

    (57) REGEX_SPECIAL_CHAR -> RBRACE .

    REGEX_LITERAL_CHAR reduce using rule 57 (REGEX_SPECIAL_CHAR -> RBRACE .)
    STAR            reduce using rule 57 (REGEX_SPECIAL_CHAR -> RBRACE .)
    PLUS            reduce using rule 57 (REGEX_SPECIAL_CHAR -> RBRACE .)
    OR              reduce using rule 57 (REGEX_SPECIAL_CHAR -> RBRACE .)
    DOT             reduce using rule 57 (REGEX_SPECIAL_CHAR -> RBRACE .)
    CARET           reduce using rule 57 (REGEX_SPECIAL_CHAR -> RBRACE .)
    DOLLAR          reduce using rule 57 (REGEX_SPECIAL_CHAR -> RBRACE .)
    QUESTION        reduce using rule 57 (REGEX_SPECIAL_CHAR -> RBRACE .)
    LPAREN          reduce using rule 57 (REGEX_SPECIAL_CHAR -> RBRACE .)
    RPAREN          reduce using rule 57 (REGEX_SPECIAL_CHAR -> RBRACE .)
    LBRACE          reduce using rule 57 (REGEX_SPECIAL_CHAR -> RBRACE .)
    RBRACE          reduce using rule 57 (REGEX_SPECIAL_CHAR -> RBRACE .)
    SINGLEQUOTE     reduce using rule 57 (REGEX_SPECIAL_CHAR -> RBRACE .)


state 203

    (59) statement -> SIMULATE LPAREN ID COMMA ID . RPAREN

    RPAREN          shift and go to state 231


state 204

    (61) statement -> CONCAT LPAREN ID COMMA ID . RPAREN

    RPAREN          shift and go to state 232


state 205

    (62) statement -> POWER LPAREN ID COMMA NUMBER . RPAREN

    RPAREN          shift and go to state 233


state 206

    (64) statement -> CONVERT LPAREN ID COMMA ID . RPAREN

    RPAREN          shift and go to state 234


state 207

    (67) statement -> ISEQUIVALENT LPAREN ID COMMA ID . RPAREN

    RPAREN          shift and go to state 235


state 208

    (77) statement -> UNION LPAREN ID COMMA ID . RPAREN

    RPAREN          shift and go to state 236


state 209

    (78) statement -> INTERSECT LPAREN ID COMMA ID . RPAREN

    RPAREN          shift and go to state 237


state 210

    (80) statement -> DIFF LPAREN ID COMMA ID . RPAREN

    RPAREN          shift and go to state 238


state 211

    (85) statement -> IF LPAREN condition RPAREN LBRACE . statement RBRACE ELSE LBRACE statement RBRACE
    (86) statement -> IF LPAREN condition RPAREN LBRACE . statement RBRACE ELSE IF LPAREN condition RPAREN LBRACE statement RBRACE
    (87) statement -> IF LPAREN condition RPAREN LBRACE . statement RBRACE ELSE IF LPAREN condition RPAREN LBRACE statement RBRACE ELSE LBRACE statement RBRACE
    (88) statement -> IF LPAREN condition RPAREN LBRACE . statement RBRACE
    (1) statement -> . ALPHABET ID EQUALS LBRACE alphabet_list RBRACE
    (4) statement -> . STR ID EQUALS SINGLEQUOTE STRING SINGLEQUOTE
    (5) statement -> . INITIAL COLON LBRACE ID RBRACE
    (6) statement -> . FINAL COLON LBRACE final_list RBRACE
    (9) statement -> . STATES COLON LBRACE states_list RBRACE
    (12) statement -> . TRANSITIONS COLON LBRACE transitions_list RBRACE
    (17) statement -> . FA ID LPAREN RPAREN LBRACE statement_list_fa RBRACE
    (20) statement -> . PDA ID LPAREN RPAREN LBRACE statement_list_pda RBRACE
    (23) statement -> . STACK_INIT COLON ID
    (24) statement -> . CFG ID LPAREN RPAREN LBRACE statement_list_cfg RBRACE
    (27) statement -> . NONTERMINALS COLON LBRACE nonterminals_list RBRACE
    (30) statement -> . TERMINALS COLON LBRACE terminals_list RBRACE
    (33) statement -> . START COLON ID
    (34) statement -> . RULES COLON LBRACE rules_list RBRACE
    (41) statement -> . RE ID EQUALS SINGLEQUOTE REGEX SINGLEQUOTE
    (58) statement -> . MINIMIZE LPAREN ID RPAREN
    (59) statement -> . SIMULATE LPAREN ID COMMA ID RPAREN
    (60) statement -> . VISUALIZE LPAREN ID RPAREN
    (61) statement -> . CONCAT LPAREN ID COMMA ID RPAREN
    (62) statement -> . POWER LPAREN ID COMMA NUMBER RPAREN
    (63) statement -> . KLEENE LPAREN ID RPAREN
    (64) statement -> . CONVERT LPAREN ID COMMA ID RPAREN
    (65) statement -> . CHECKPUMPINGLEMMAREG LPAREN ID RPAREN
    (66) statement -> . CHECKPUMPINGLEMMACFL LPAREN ID RPAREN
    (67) statement -> . ISEQUIVALENT LPAREN ID COMMA ID RPAREN
    (76) statement -> . SHOW LPAREN show_type RPAREN
    (77) statement -> . UNION LPAREN ID COMMA ID RPAREN
    (78) statement -> . INTERSECT LPAREN ID COMMA ID RPAREN
    (79) statement -> . COMPLEMENT LPAREN ID RPAREN
    (80) statement -> . DIFF LPAREN ID COMMA ID RPAREN
    (81) statement -> . ISDFA LPAREN ID RPAREN
    (82) statement -> . ISNFA LPAREN ID RPAREN
    (83) statement -> . ISDPDA LPAREN ID RPAREN
    (84) statement -> . ISNPDA LPAREN ID RPAREN
    (85) statement -> . IF LPAREN condition RPAREN LBRACE statement RBRACE ELSE LBRACE statement RBRACE
    (86) statement -> . IF LPAREN condition RPAREN LBRACE statement RBRACE ELSE IF LPAREN condition RPAREN LBRACE statement RBRACE
    (87) statement -> . IF LPAREN condition RPAREN LBRACE statement RBRACE ELSE IF LPAREN condition RPAREN LBRACE statement RBRACE ELSE LBRACE statement RBRACE
    (88) statement -> . IF LPAREN condition RPAREN LBRACE statement RBRACE
    (96) statement -> . SLCOMMENT
    (97) statement -> . MLCOMMENT
    (98) statement -> . DOCCOMMENT

    ALPHABET        shift and go to state 2
    STR             shift and go to state 3
    INITIAL         shift and go to state 4
    FINAL           shift and go to state 5
    STATES          shift and go to state 6
    TRANSITIONS     shift and go to state 7
    FA              shift and go to state 8
    PDA             shift and go to state 9
    STACK_INIT      shift and go to state 10
    CFG             shift and go to state 11
    NONTERMINALS    shift and go to state 12
    TERMINALS       shift and go to state 13
    START           shift and go to state 14
    RULES           shift and go to state 15
    RE              shift and go to state 16
    MINIMIZE        shift and go to state 17
    SIMULATE        shift and go to state 18
    VISUALIZE       shift and go to state 19
    CONCAT          shift and go to state 20
    POWER           shift and go to state 21
    KLEENE          shift and go to state 22
    CONVERT         shift and go to state 23
    CHECKPUMPINGLEMMAREG shift and go to state 24
    CHECKPUMPINGLEMMACFL shift and go to state 25
    ISEQUIVALENT    shift and go to state 26
    SHOW            shift and go to state 27
    UNION           shift and go to state 28
    INTERSECT       shift and go to state 29
    COMPLEMENT      shift and go to state 30
    DIFF            shift and go to state 31
    ISDFA           shift and go to state 32
    ISNFA           shift and go to state 33
    ISDPDA          shift and go to state 34
    ISNPDA          shift and go to state 35
    IF              shift and go to state 36
    SLCOMMENT       shift and go to state 37
    MLCOMMENT       shift and go to state 38
    DOCCOMMENT      shift and go to state 39

    statement                      shift and go to state 239

state 212

    (1) statement -> ALPHABET ID EQUALS LBRACE alphabet_list RBRACE .

    $end            reduce using rule 1 (statement -> ALPHABET ID EQUALS LBRACE alphabet_list RBRACE .)
    RBRACE          reduce using rule 1 (statement -> ALPHABET ID EQUALS LBRACE alphabet_list RBRACE .)
    ALPHABET        reduce using rule 1 (statement -> ALPHABET ID EQUALS LBRACE alphabet_list RBRACE .)
    STR             reduce using rule 1 (statement -> ALPHABET ID EQUALS LBRACE alphabet_list RBRACE .)
    INITIAL         reduce using rule 1 (statement -> ALPHABET ID EQUALS LBRACE alphabet_list RBRACE .)
    FINAL           reduce using rule 1 (statement -> ALPHABET ID EQUALS LBRACE alphabet_list RBRACE .)
    STATES          reduce using rule 1 (statement -> ALPHABET ID EQUALS LBRACE alphabet_list RBRACE .)
    TRANSITIONS     reduce using rule 1 (statement -> ALPHABET ID EQUALS LBRACE alphabet_list RBRACE .)
    FA              reduce using rule 1 (statement -> ALPHABET ID EQUALS LBRACE alphabet_list RBRACE .)
    PDA             reduce using rule 1 (statement -> ALPHABET ID EQUALS LBRACE alphabet_list RBRACE .)
    STACK_INIT      reduce using rule 1 (statement -> ALPHABET ID EQUALS LBRACE alphabet_list RBRACE .)
    CFG             reduce using rule 1 (statement -> ALPHABET ID EQUALS LBRACE alphabet_list RBRACE .)
    NONTERMINALS    reduce using rule 1 (statement -> ALPHABET ID EQUALS LBRACE alphabet_list RBRACE .)
    TERMINALS       reduce using rule 1 (statement -> ALPHABET ID EQUALS LBRACE alphabet_list RBRACE .)
    START           reduce using rule 1 (statement -> ALPHABET ID EQUALS LBRACE alphabet_list RBRACE .)
    RULES           reduce using rule 1 (statement -> ALPHABET ID EQUALS LBRACE alphabet_list RBRACE .)
    RE              reduce using rule 1 (statement -> ALPHABET ID EQUALS LBRACE alphabet_list RBRACE .)
    MINIMIZE        reduce using rule 1 (statement -> ALPHABET ID EQUALS LBRACE alphabet_list RBRACE .)
    SIMULATE        reduce using rule 1 (statement -> ALPHABET ID EQUALS LBRACE alphabet_list RBRACE .)
    VISUALIZE       reduce using rule 1 (statement -> ALPHABET ID EQUALS LBRACE alphabet_list RBRACE .)
    CONCAT          reduce using rule 1 (statement -> ALPHABET ID EQUALS LBRACE alphabet_list RBRACE .)
    POWER           reduce using rule 1 (statement -> ALPHABET ID EQUALS LBRACE alphabet_list RBRACE .)
    KLEENE          reduce using rule 1 (statement -> ALPHABET ID EQUALS LBRACE alphabet_list RBRACE .)
    CONVERT         reduce using rule 1 (statement -> ALPHABET ID EQUALS LBRACE alphabet_list RBRACE .)
    CHECKPUMPINGLEMMAREG reduce using rule 1 (statement -> ALPHABET ID EQUALS LBRACE alphabet_list RBRACE .)
    CHECKPUMPINGLEMMACFL reduce using rule 1 (statement -> ALPHABET ID EQUALS LBRACE alphabet_list RBRACE .)
    ISEQUIVALENT    reduce using rule 1 (statement -> ALPHABET ID EQUALS LBRACE alphabet_list RBRACE .)
    SHOW            reduce using rule 1 (statement -> ALPHABET ID EQUALS LBRACE alphabet_list RBRACE .)
    UNION           reduce using rule 1 (statement -> ALPHABET ID EQUALS LBRACE alphabet_list RBRACE .)
    INTERSECT       reduce using rule 1 (statement -> ALPHABET ID EQUALS LBRACE alphabet_list RBRACE .)
    COMPLEMENT      reduce using rule 1 (statement -> ALPHABET ID EQUALS LBRACE alphabet_list RBRACE .)
    DIFF            reduce using rule 1 (statement -> ALPHABET ID EQUALS LBRACE alphabet_list RBRACE .)
    ISDFA           reduce using rule 1 (statement -> ALPHABET ID EQUALS LBRACE alphabet_list RBRACE .)
    ISNFA           reduce using rule 1 (statement -> ALPHABET ID EQUALS LBRACE alphabet_list RBRACE .)
    ISDPDA          reduce using rule 1 (statement -> ALPHABET ID EQUALS LBRACE alphabet_list RBRACE .)
    ISNPDA          reduce using rule 1 (statement -> ALPHABET ID EQUALS LBRACE alphabet_list RBRACE .)
    IF              reduce using rule 1 (statement -> ALPHABET ID EQUALS LBRACE alphabet_list RBRACE .)
    SLCOMMENT       reduce using rule 1 (statement -> ALPHABET ID EQUALS LBRACE alphabet_list RBRACE .)
    MLCOMMENT       reduce using rule 1 (statement -> ALPHABET ID EQUALS LBRACE alphabet_list RBRACE .)
    DOCCOMMENT      reduce using rule 1 (statement -> ALPHABET ID EQUALS LBRACE alphabet_list RBRACE .)


state 213

    (3) alphabet_list -> alphabet_list COMMA . ID

    ID              shift and go to state 240


state 214

    (4) statement -> STR ID EQUALS SINGLEQUOTE STRING SINGLEQUOTE .

    $end            reduce using rule 4 (statement -> STR ID EQUALS SINGLEQUOTE STRING SINGLEQUOTE .)
    RBRACE          reduce using rule 4 (statement -> STR ID EQUALS SINGLEQUOTE STRING SINGLEQUOTE .)
    ALPHABET        reduce using rule 4 (statement -> STR ID EQUALS SINGLEQUOTE STRING SINGLEQUOTE .)
    STR             reduce using rule 4 (statement -> STR ID EQUALS SINGLEQUOTE STRING SINGLEQUOTE .)
    INITIAL         reduce using rule 4 (statement -> STR ID EQUALS SINGLEQUOTE STRING SINGLEQUOTE .)
    FINAL           reduce using rule 4 (statement -> STR ID EQUALS SINGLEQUOTE STRING SINGLEQUOTE .)
    STATES          reduce using rule 4 (statement -> STR ID EQUALS SINGLEQUOTE STRING SINGLEQUOTE .)
    TRANSITIONS     reduce using rule 4 (statement -> STR ID EQUALS SINGLEQUOTE STRING SINGLEQUOTE .)
    FA              reduce using rule 4 (statement -> STR ID EQUALS SINGLEQUOTE STRING SINGLEQUOTE .)
    PDA             reduce using rule 4 (statement -> STR ID EQUALS SINGLEQUOTE STRING SINGLEQUOTE .)
    STACK_INIT      reduce using rule 4 (statement -> STR ID EQUALS SINGLEQUOTE STRING SINGLEQUOTE .)
    CFG             reduce using rule 4 (statement -> STR ID EQUALS SINGLEQUOTE STRING SINGLEQUOTE .)
    NONTERMINALS    reduce using rule 4 (statement -> STR ID EQUALS SINGLEQUOTE STRING SINGLEQUOTE .)
    TERMINALS       reduce using rule 4 (statement -> STR ID EQUALS SINGLEQUOTE STRING SINGLEQUOTE .)
    START           reduce using rule 4 (statement -> STR ID EQUALS SINGLEQUOTE STRING SINGLEQUOTE .)
    RULES           reduce using rule 4 (statement -> STR ID EQUALS SINGLEQUOTE STRING SINGLEQUOTE .)
    RE              reduce using rule 4 (statement -> STR ID EQUALS SINGLEQUOTE STRING SINGLEQUOTE .)
    MINIMIZE        reduce using rule 4 (statement -> STR ID EQUALS SINGLEQUOTE STRING SINGLEQUOTE .)
    SIMULATE        reduce using rule 4 (statement -> STR ID EQUALS SINGLEQUOTE STRING SINGLEQUOTE .)
    VISUALIZE       reduce using rule 4 (statement -> STR ID EQUALS SINGLEQUOTE STRING SINGLEQUOTE .)
    CONCAT          reduce using rule 4 (statement -> STR ID EQUALS SINGLEQUOTE STRING SINGLEQUOTE .)
    POWER           reduce using rule 4 (statement -> STR ID EQUALS SINGLEQUOTE STRING SINGLEQUOTE .)
    KLEENE          reduce using rule 4 (statement -> STR ID EQUALS SINGLEQUOTE STRING SINGLEQUOTE .)
    CONVERT         reduce using rule 4 (statement -> STR ID EQUALS SINGLEQUOTE STRING SINGLEQUOTE .)
    CHECKPUMPINGLEMMAREG reduce using rule 4 (statement -> STR ID EQUALS SINGLEQUOTE STRING SINGLEQUOTE .)
    CHECKPUMPINGLEMMACFL reduce using rule 4 (statement -> STR ID EQUALS SINGLEQUOTE STRING SINGLEQUOTE .)
    ISEQUIVALENT    reduce using rule 4 (statement -> STR ID EQUALS SINGLEQUOTE STRING SINGLEQUOTE .)
    SHOW            reduce using rule 4 (statement -> STR ID EQUALS SINGLEQUOTE STRING SINGLEQUOTE .)
    UNION           reduce using rule 4 (statement -> STR ID EQUALS SINGLEQUOTE STRING SINGLEQUOTE .)
    INTERSECT       reduce using rule 4 (statement -> STR ID EQUALS SINGLEQUOTE STRING SINGLEQUOTE .)
    COMPLEMENT      reduce using rule 4 (statement -> STR ID EQUALS SINGLEQUOTE STRING SINGLEQUOTE .)
    DIFF            reduce using rule 4 (statement -> STR ID EQUALS SINGLEQUOTE STRING SINGLEQUOTE .)
    ISDFA           reduce using rule 4 (statement -> STR ID EQUALS SINGLEQUOTE STRING SINGLEQUOTE .)
    ISNFA           reduce using rule 4 (statement -> STR ID EQUALS SINGLEQUOTE STRING SINGLEQUOTE .)
    ISDPDA          reduce using rule 4 (statement -> STR ID EQUALS SINGLEQUOTE STRING SINGLEQUOTE .)
    ISNPDA          reduce using rule 4 (statement -> STR ID EQUALS SINGLEQUOTE STRING SINGLEQUOTE .)
    IF              reduce using rule 4 (statement -> STR ID EQUALS SINGLEQUOTE STRING SINGLEQUOTE .)
    SLCOMMENT       reduce using rule 4 (statement -> STR ID EQUALS SINGLEQUOTE STRING SINGLEQUOTE .)
    MLCOMMENT       reduce using rule 4 (statement -> STR ID EQUALS SINGLEQUOTE STRING SINGLEQUOTE .)
    DOCCOMMENT      reduce using rule 4 (statement -> STR ID EQUALS SINGLEQUOTE STRING SINGLEQUOTE .)


state 215

    (8) final_list -> final_list COMMA ID .

    RBRACE          reduce using rule 8 (final_list -> final_list COMMA ID .)
    COMMA           reduce using rule 8 (final_list -> final_list COMMA ID .)


state 216

    (11) states_list -> states_list COMMA ID .

    RBRACE          reduce using rule 11 (states_list -> states_list COMMA ID .)
    COMMA           reduce using rule 11 (states_list -> states_list COMMA ID .)


state 217

    (15) transition -> LBRACE FROM COLON . ID COMMA TO COLON ID COMMA ONN COLON ID RBRACE
    (16) transition -> LBRACE FROM COLON . ID COMMA TO COLON ID COMMA ONN COLON ID COMMA POP COLON ID COMMA PUSH COLON ID COMMA STACK COLON ID RBRACE

    ID              shift and go to state 241


state 218

    (14) transitions_list -> transitions_list COMMA transition .

    RBRACE          reduce using rule 14 (transitions_list -> transitions_list COMMA transition .)
    COMMA           reduce using rule 14 (transitions_list -> transitions_list COMMA transition .)


state 219

    (17) statement -> FA ID LPAREN RPAREN LBRACE statement_list_fa . RBRACE
    (19) statement_list_fa -> statement_list_fa . statement
    (1) statement -> . ALPHABET ID EQUALS LBRACE alphabet_list RBRACE
    (4) statement -> . STR ID EQUALS SINGLEQUOTE STRING SINGLEQUOTE
    (5) statement -> . INITIAL COLON LBRACE ID RBRACE
    (6) statement -> . FINAL COLON LBRACE final_list RBRACE
    (9) statement -> . STATES COLON LBRACE states_list RBRACE
    (12) statement -> . TRANSITIONS COLON LBRACE transitions_list RBRACE
    (17) statement -> . FA ID LPAREN RPAREN LBRACE statement_list_fa RBRACE
    (20) statement -> . PDA ID LPAREN RPAREN LBRACE statement_list_pda RBRACE
    (23) statement -> . STACK_INIT COLON ID
    (24) statement -> . CFG ID LPAREN RPAREN LBRACE statement_list_cfg RBRACE
    (27) statement -> . NONTERMINALS COLON LBRACE nonterminals_list RBRACE
    (30) statement -> . TERMINALS COLON LBRACE terminals_list RBRACE
    (33) statement -> . START COLON ID
    (34) statement -> . RULES COLON LBRACE rules_list RBRACE
    (41) statement -> . RE ID EQUALS SINGLEQUOTE REGEX SINGLEQUOTE
    (58) statement -> . MINIMIZE LPAREN ID RPAREN
    (59) statement -> . SIMULATE LPAREN ID COMMA ID RPAREN
    (60) statement -> . VISUALIZE LPAREN ID RPAREN
    (61) statement -> . CONCAT LPAREN ID COMMA ID RPAREN
    (62) statement -> . POWER LPAREN ID COMMA NUMBER RPAREN
    (63) statement -> . KLEENE LPAREN ID RPAREN
    (64) statement -> . CONVERT LPAREN ID COMMA ID RPAREN
    (65) statement -> . CHECKPUMPINGLEMMAREG LPAREN ID RPAREN
    (66) statement -> . CHECKPUMPINGLEMMACFL LPAREN ID RPAREN
    (67) statement -> . ISEQUIVALENT LPAREN ID COMMA ID RPAREN
    (76) statement -> . SHOW LPAREN show_type RPAREN
    (77) statement -> . UNION LPAREN ID COMMA ID RPAREN
    (78) statement -> . INTERSECT LPAREN ID COMMA ID RPAREN
    (79) statement -> . COMPLEMENT LPAREN ID RPAREN
    (80) statement -> . DIFF LPAREN ID COMMA ID RPAREN
    (81) statement -> . ISDFA LPAREN ID RPAREN
    (82) statement -> . ISNFA LPAREN ID RPAREN
    (83) statement -> . ISDPDA LPAREN ID RPAREN
    (84) statement -> . ISNPDA LPAREN ID RPAREN
    (85) statement -> . IF LPAREN condition RPAREN LBRACE statement RBRACE ELSE LBRACE statement RBRACE
    (86) statement -> . IF LPAREN condition RPAREN LBRACE statement RBRACE ELSE IF LPAREN condition RPAREN LBRACE statement RBRACE
    (87) statement -> . IF LPAREN condition RPAREN LBRACE statement RBRACE ELSE IF LPAREN condition RPAREN LBRACE statement RBRACE ELSE LBRACE statement RBRACE
    (88) statement -> . IF LPAREN condition RPAREN LBRACE statement RBRACE
    (96) statement -> . SLCOMMENT
    (97) statement -> . MLCOMMENT
    (98) statement -> . DOCCOMMENT

    RBRACE          shift and go to state 242
    ALPHABET        shift and go to state 2
    STR             shift and go to state 3
    INITIAL         shift and go to state 4
    FINAL           shift and go to state 5
    STATES          shift and go to state 6
    TRANSITIONS     shift and go to state 7
    FA              shift and go to state 8
    PDA             shift and go to state 9
    STACK_INIT      shift and go to state 10
    CFG             shift and go to state 11
    NONTERMINALS    shift and go to state 12
    TERMINALS       shift and go to state 13
    START           shift and go to state 14
    RULES           shift and go to state 15
    RE              shift and go to state 16
    MINIMIZE        shift and go to state 17
    SIMULATE        shift and go to state 18
    VISUALIZE       shift and go to state 19
    CONCAT          shift and go to state 20
    POWER           shift and go to state 21
    KLEENE          shift and go to state 22
    CONVERT         shift and go to state 23
    CHECKPUMPINGLEMMAREG shift and go to state 24
    CHECKPUMPINGLEMMACFL shift and go to state 25
    ISEQUIVALENT    shift and go to state 26
    SHOW            shift and go to state 27
    UNION           shift and go to state 28
    INTERSECT       shift and go to state 29
    COMPLEMENT      shift and go to state 30
    DIFF            shift and go to state 31
    ISDFA           shift and go to state 32
    ISNFA           shift and go to state 33
    ISDPDA          shift and go to state 34
    ISNPDA          shift and go to state 35
    IF              shift and go to state 36
    SLCOMMENT       shift and go to state 37
    MLCOMMENT       shift and go to state 38
    DOCCOMMENT      shift and go to state 39

    statement                      shift and go to state 243

state 220

    (18) statement_list_fa -> statement .

    RBRACE          reduce using rule 18 (statement_list_fa -> statement .)
    ALPHABET        reduce using rule 18 (statement_list_fa -> statement .)
    STR             reduce using rule 18 (statement_list_fa -> statement .)
    INITIAL         reduce using rule 18 (statement_list_fa -> statement .)
    FINAL           reduce using rule 18 (statement_list_fa -> statement .)
    STATES          reduce using rule 18 (statement_list_fa -> statement .)
    TRANSITIONS     reduce using rule 18 (statement_list_fa -> statement .)
    FA              reduce using rule 18 (statement_list_fa -> statement .)
    PDA             reduce using rule 18 (statement_list_fa -> statement .)
    STACK_INIT      reduce using rule 18 (statement_list_fa -> statement .)
    CFG             reduce using rule 18 (statement_list_fa -> statement .)
    NONTERMINALS    reduce using rule 18 (statement_list_fa -> statement .)
    TERMINALS       reduce using rule 18 (statement_list_fa -> statement .)
    START           reduce using rule 18 (statement_list_fa -> statement .)
    RULES           reduce using rule 18 (statement_list_fa -> statement .)
    RE              reduce using rule 18 (statement_list_fa -> statement .)
    MINIMIZE        reduce using rule 18 (statement_list_fa -> statement .)
    SIMULATE        reduce using rule 18 (statement_list_fa -> statement .)
    VISUALIZE       reduce using rule 18 (statement_list_fa -> statement .)
    CONCAT          reduce using rule 18 (statement_list_fa -> statement .)
    POWER           reduce using rule 18 (statement_list_fa -> statement .)
    KLEENE          reduce using rule 18 (statement_list_fa -> statement .)
    CONVERT         reduce using rule 18 (statement_list_fa -> statement .)
    CHECKPUMPINGLEMMAREG reduce using rule 18 (statement_list_fa -> statement .)
    CHECKPUMPINGLEMMACFL reduce using rule 18 (statement_list_fa -> statement .)
    ISEQUIVALENT    reduce using rule 18 (statement_list_fa -> statement .)
    SHOW            reduce using rule 18 (statement_list_fa -> statement .)
    UNION           reduce using rule 18 (statement_list_fa -> statement .)
    INTERSECT       reduce using rule 18 (statement_list_fa -> statement .)
    COMPLEMENT      reduce using rule 18 (statement_list_fa -> statement .)
    DIFF            reduce using rule 18 (statement_list_fa -> statement .)
    ISDFA           reduce using rule 18 (statement_list_fa -> statement .)
    ISNFA           reduce using rule 18 (statement_list_fa -> statement .)
    ISDPDA          reduce using rule 18 (statement_list_fa -> statement .)
    ISNPDA          reduce using rule 18 (statement_list_fa -> statement .)
    IF              reduce using rule 18 (statement_list_fa -> statement .)
    SLCOMMENT       reduce using rule 18 (statement_list_fa -> statement .)
    MLCOMMENT       reduce using rule 18 (statement_list_fa -> statement .)
    DOCCOMMENT      reduce using rule 18 (statement_list_fa -> statement .)


state 221

    (20) statement -> PDA ID LPAREN RPAREN LBRACE statement_list_pda . RBRACE
    (22) statement_list_pda -> statement_list_pda . statement
    (1) statement -> . ALPHABET ID EQUALS LBRACE alphabet_list RBRACE
    (4) statement -> . STR ID EQUALS SINGLEQUOTE STRING SINGLEQUOTE
    (5) statement -> . INITIAL COLON LBRACE ID RBRACE
    (6) statement -> . FINAL COLON LBRACE final_list RBRACE
    (9) statement -> . STATES COLON LBRACE states_list RBRACE
    (12) statement -> . TRANSITIONS COLON LBRACE transitions_list RBRACE
    (17) statement -> . FA ID LPAREN RPAREN LBRACE statement_list_fa RBRACE
    (20) statement -> . PDA ID LPAREN RPAREN LBRACE statement_list_pda RBRACE
    (23) statement -> . STACK_INIT COLON ID
    (24) statement -> . CFG ID LPAREN RPAREN LBRACE statement_list_cfg RBRACE
    (27) statement -> . NONTERMINALS COLON LBRACE nonterminals_list RBRACE
    (30) statement -> . TERMINALS COLON LBRACE terminals_list RBRACE
    (33) statement -> . START COLON ID
    (34) statement -> . RULES COLON LBRACE rules_list RBRACE
    (41) statement -> . RE ID EQUALS SINGLEQUOTE REGEX SINGLEQUOTE
    (58) statement -> . MINIMIZE LPAREN ID RPAREN
    (59) statement -> . SIMULATE LPAREN ID COMMA ID RPAREN
    (60) statement -> . VISUALIZE LPAREN ID RPAREN
    (61) statement -> . CONCAT LPAREN ID COMMA ID RPAREN
    (62) statement -> . POWER LPAREN ID COMMA NUMBER RPAREN
    (63) statement -> . KLEENE LPAREN ID RPAREN
    (64) statement -> . CONVERT LPAREN ID COMMA ID RPAREN
    (65) statement -> . CHECKPUMPINGLEMMAREG LPAREN ID RPAREN
    (66) statement -> . CHECKPUMPINGLEMMACFL LPAREN ID RPAREN
    (67) statement -> . ISEQUIVALENT LPAREN ID COMMA ID RPAREN
    (76) statement -> . SHOW LPAREN show_type RPAREN
    (77) statement -> . UNION LPAREN ID COMMA ID RPAREN
    (78) statement -> . INTERSECT LPAREN ID COMMA ID RPAREN
    (79) statement -> . COMPLEMENT LPAREN ID RPAREN
    (80) statement -> . DIFF LPAREN ID COMMA ID RPAREN
    (81) statement -> . ISDFA LPAREN ID RPAREN
    (82) statement -> . ISNFA LPAREN ID RPAREN
    (83) statement -> . ISDPDA LPAREN ID RPAREN
    (84) statement -> . ISNPDA LPAREN ID RPAREN
    (85) statement -> . IF LPAREN condition RPAREN LBRACE statement RBRACE ELSE LBRACE statement RBRACE
    (86) statement -> . IF LPAREN condition RPAREN LBRACE statement RBRACE ELSE IF LPAREN condition RPAREN LBRACE statement RBRACE
    (87) statement -> . IF LPAREN condition RPAREN LBRACE statement RBRACE ELSE IF LPAREN condition RPAREN LBRACE statement RBRACE ELSE LBRACE statement RBRACE
    (88) statement -> . IF LPAREN condition RPAREN LBRACE statement RBRACE
    (96) statement -> . SLCOMMENT
    (97) statement -> . MLCOMMENT
    (98) statement -> . DOCCOMMENT

    RBRACE          shift and go to state 244
    ALPHABET        shift and go to state 2
    STR             shift and go to state 3
    INITIAL         shift and go to state 4
    FINAL           shift and go to state 5
    STATES          shift and go to state 6
    TRANSITIONS     shift and go to state 7
    FA              shift and go to state 8
    PDA             shift and go to state 9
    STACK_INIT      shift and go to state 10
    CFG             shift and go to state 11
    NONTERMINALS    shift and go to state 12
    TERMINALS       shift and go to state 13
    START           shift and go to state 14
    RULES           shift and go to state 15
    RE              shift and go to state 16
    MINIMIZE        shift and go to state 17
    SIMULATE        shift and go to state 18
    VISUALIZE       shift and go to state 19
    CONCAT          shift and go to state 20
    POWER           shift and go to state 21
    KLEENE          shift and go to state 22
    CONVERT         shift and go to state 23
    CHECKPUMPINGLEMMAREG shift and go to state 24
    CHECKPUMPINGLEMMACFL shift and go to state 25
    ISEQUIVALENT    shift and go to state 26
    SHOW            shift and go to state 27
    UNION           shift and go to state 28
    INTERSECT       shift and go to state 29
    COMPLEMENT      shift and go to state 30
    DIFF            shift and go to state 31
    ISDFA           shift and go to state 32
    ISNFA           shift and go to state 33
    ISDPDA          shift and go to state 34
    ISNPDA          shift and go to state 35
    IF              shift and go to state 36
    SLCOMMENT       shift and go to state 37
    MLCOMMENT       shift and go to state 38
    DOCCOMMENT      shift and go to state 39

    statement                      shift and go to state 245

state 222

    (21) statement_list_pda -> statement .

    RBRACE          reduce using rule 21 (statement_list_pda -> statement .)
    ALPHABET        reduce using rule 21 (statement_list_pda -> statement .)
    STR             reduce using rule 21 (statement_list_pda -> statement .)
    INITIAL         reduce using rule 21 (statement_list_pda -> statement .)
    FINAL           reduce using rule 21 (statement_list_pda -> statement .)
    STATES          reduce using rule 21 (statement_list_pda -> statement .)
    TRANSITIONS     reduce using rule 21 (statement_list_pda -> statement .)
    FA              reduce using rule 21 (statement_list_pda -> statement .)
    PDA             reduce using rule 21 (statement_list_pda -> statement .)
    STACK_INIT      reduce using rule 21 (statement_list_pda -> statement .)
    CFG             reduce using rule 21 (statement_list_pda -> statement .)
    NONTERMINALS    reduce using rule 21 (statement_list_pda -> statement .)
    TERMINALS       reduce using rule 21 (statement_list_pda -> statement .)
    START           reduce using rule 21 (statement_list_pda -> statement .)
    RULES           reduce using rule 21 (statement_list_pda -> statement .)
    RE              reduce using rule 21 (statement_list_pda -> statement .)
    MINIMIZE        reduce using rule 21 (statement_list_pda -> statement .)
    SIMULATE        reduce using rule 21 (statement_list_pda -> statement .)
    VISUALIZE       reduce using rule 21 (statement_list_pda -> statement .)
    CONCAT          reduce using rule 21 (statement_list_pda -> statement .)
    POWER           reduce using rule 21 (statement_list_pda -> statement .)
    KLEENE          reduce using rule 21 (statement_list_pda -> statement .)
    CONVERT         reduce using rule 21 (statement_list_pda -> statement .)
    CHECKPUMPINGLEMMAREG reduce using rule 21 (statement_list_pda -> statement .)
    CHECKPUMPINGLEMMACFL reduce using rule 21 (statement_list_pda -> statement .)
    ISEQUIVALENT    reduce using rule 21 (statement_list_pda -> statement .)
    SHOW            reduce using rule 21 (statement_list_pda -> statement .)
    UNION           reduce using rule 21 (statement_list_pda -> statement .)
    INTERSECT       reduce using rule 21 (statement_list_pda -> statement .)
    COMPLEMENT      reduce using rule 21 (statement_list_pda -> statement .)
    DIFF            reduce using rule 21 (statement_list_pda -> statement .)
    ISDFA           reduce using rule 21 (statement_list_pda -> statement .)
    ISNFA           reduce using rule 21 (statement_list_pda -> statement .)
    ISDPDA          reduce using rule 21 (statement_list_pda -> statement .)
    ISNPDA          reduce using rule 21 (statement_list_pda -> statement .)
    IF              reduce using rule 21 (statement_list_pda -> statement .)
    SLCOMMENT       reduce using rule 21 (statement_list_pda -> statement .)
    MLCOMMENT       reduce using rule 21 (statement_list_pda -> statement .)
    DOCCOMMENT      reduce using rule 21 (statement_list_pda -> statement .)


state 223

    (24) statement -> CFG ID LPAREN RPAREN LBRACE statement_list_cfg . RBRACE
    (26) statement_list_cfg -> statement_list_cfg . statement
    (1) statement -> . ALPHABET ID EQUALS LBRACE alphabet_list RBRACE
    (4) statement -> . STR ID EQUALS SINGLEQUOTE STRING SINGLEQUOTE
    (5) statement -> . INITIAL COLON LBRACE ID RBRACE
    (6) statement -> . FINAL COLON LBRACE final_list RBRACE
    (9) statement -> . STATES COLON LBRACE states_list RBRACE
    (12) statement -> . TRANSITIONS COLON LBRACE transitions_list RBRACE
    (17) statement -> . FA ID LPAREN RPAREN LBRACE statement_list_fa RBRACE
    (20) statement -> . PDA ID LPAREN RPAREN LBRACE statement_list_pda RBRACE
    (23) statement -> . STACK_INIT COLON ID
    (24) statement -> . CFG ID LPAREN RPAREN LBRACE statement_list_cfg RBRACE
    (27) statement -> . NONTERMINALS COLON LBRACE nonterminals_list RBRACE
    (30) statement -> . TERMINALS COLON LBRACE terminals_list RBRACE
    (33) statement -> . START COLON ID
    (34) statement -> . RULES COLON LBRACE rules_list RBRACE
    (41) statement -> . RE ID EQUALS SINGLEQUOTE REGEX SINGLEQUOTE
    (58) statement -> . MINIMIZE LPAREN ID RPAREN
    (59) statement -> . SIMULATE LPAREN ID COMMA ID RPAREN
    (60) statement -> . VISUALIZE LPAREN ID RPAREN
    (61) statement -> . CONCAT LPAREN ID COMMA ID RPAREN
    (62) statement -> . POWER LPAREN ID COMMA NUMBER RPAREN
    (63) statement -> . KLEENE LPAREN ID RPAREN
    (64) statement -> . CONVERT LPAREN ID COMMA ID RPAREN
    (65) statement -> . CHECKPUMPINGLEMMAREG LPAREN ID RPAREN
    (66) statement -> . CHECKPUMPINGLEMMACFL LPAREN ID RPAREN
    (67) statement -> . ISEQUIVALENT LPAREN ID COMMA ID RPAREN
    (76) statement -> . SHOW LPAREN show_type RPAREN
    (77) statement -> . UNION LPAREN ID COMMA ID RPAREN
    (78) statement -> . INTERSECT LPAREN ID COMMA ID RPAREN
    (79) statement -> . COMPLEMENT LPAREN ID RPAREN
    (80) statement -> . DIFF LPAREN ID COMMA ID RPAREN
    (81) statement -> . ISDFA LPAREN ID RPAREN
    (82) statement -> . ISNFA LPAREN ID RPAREN
    (83) statement -> . ISDPDA LPAREN ID RPAREN
    (84) statement -> . ISNPDA LPAREN ID RPAREN
    (85) statement -> . IF LPAREN condition RPAREN LBRACE statement RBRACE ELSE LBRACE statement RBRACE
    (86) statement -> . IF LPAREN condition RPAREN LBRACE statement RBRACE ELSE IF LPAREN condition RPAREN LBRACE statement RBRACE
    (87) statement -> . IF LPAREN condition RPAREN LBRACE statement RBRACE ELSE IF LPAREN condition RPAREN LBRACE statement RBRACE ELSE LBRACE statement RBRACE
    (88) statement -> . IF LPAREN condition RPAREN LBRACE statement RBRACE
    (96) statement -> . SLCOMMENT
    (97) statement -> . MLCOMMENT
    (98) statement -> . DOCCOMMENT

    RBRACE          shift and go to state 246
    ALPHABET        shift and go to state 2
    STR             shift and go to state 3
    INITIAL         shift and go to state 4
    FINAL           shift and go to state 5
    STATES          shift and go to state 6
    TRANSITIONS     shift and go to state 7
    FA              shift and go to state 8
    PDA             shift and go to state 9
    STACK_INIT      shift and go to state 10
    CFG             shift and go to state 11
    NONTERMINALS    shift and go to state 12
    TERMINALS       shift and go to state 13
    START           shift and go to state 14
    RULES           shift and go to state 15
    RE              shift and go to state 16
    MINIMIZE        shift and go to state 17
    SIMULATE        shift and go to state 18
    VISUALIZE       shift and go to state 19
    CONCAT          shift and go to state 20
    POWER           shift and go to state 21
    KLEENE          shift and go to state 22
    CONVERT         shift and go to state 23
    CHECKPUMPINGLEMMAREG shift and go to state 24
    CHECKPUMPINGLEMMACFL shift and go to state 25
    ISEQUIVALENT    shift and go to state 26
    SHOW            shift and go to state 27
    UNION           shift and go to state 28
    INTERSECT       shift and go to state 29
    COMPLEMENT      shift and go to state 30
    DIFF            shift and go to state 31
    ISDFA           shift and go to state 32
    ISNFA           shift and go to state 33
    ISDPDA          shift and go to state 34
    ISNPDA          shift and go to state 35
    IF              shift and go to state 36
    SLCOMMENT       shift and go to state 37
    MLCOMMENT       shift and go to state 38
    DOCCOMMENT      shift and go to state 39

    statement                      shift and go to state 247

state 224

    (25) statement_list_cfg -> statement .

    RBRACE          reduce using rule 25 (statement_list_cfg -> statement .)
    ALPHABET        reduce using rule 25 (statement_list_cfg -> statement .)
    STR             reduce using rule 25 (statement_list_cfg -> statement .)
    INITIAL         reduce using rule 25 (statement_list_cfg -> statement .)
    FINAL           reduce using rule 25 (statement_list_cfg -> statement .)
    STATES          reduce using rule 25 (statement_list_cfg -> statement .)
    TRANSITIONS     reduce using rule 25 (statement_list_cfg -> statement .)
    FA              reduce using rule 25 (statement_list_cfg -> statement .)
    PDA             reduce using rule 25 (statement_list_cfg -> statement .)
    STACK_INIT      reduce using rule 25 (statement_list_cfg -> statement .)
    CFG             reduce using rule 25 (statement_list_cfg -> statement .)
    NONTERMINALS    reduce using rule 25 (statement_list_cfg -> statement .)
    TERMINALS       reduce using rule 25 (statement_list_cfg -> statement .)
    START           reduce using rule 25 (statement_list_cfg -> statement .)
    RULES           reduce using rule 25 (statement_list_cfg -> statement .)
    RE              reduce using rule 25 (statement_list_cfg -> statement .)
    MINIMIZE        reduce using rule 25 (statement_list_cfg -> statement .)
    SIMULATE        reduce using rule 25 (statement_list_cfg -> statement .)
    VISUALIZE       reduce using rule 25 (statement_list_cfg -> statement .)
    CONCAT          reduce using rule 25 (statement_list_cfg -> statement .)
    POWER           reduce using rule 25 (statement_list_cfg -> statement .)
    KLEENE          reduce using rule 25 (statement_list_cfg -> statement .)
    CONVERT         reduce using rule 25 (statement_list_cfg -> statement .)
    CHECKPUMPINGLEMMAREG reduce using rule 25 (statement_list_cfg -> statement .)
    CHECKPUMPINGLEMMACFL reduce using rule 25 (statement_list_cfg -> statement .)
    ISEQUIVALENT    reduce using rule 25 (statement_list_cfg -> statement .)
    SHOW            reduce using rule 25 (statement_list_cfg -> statement .)
    UNION           reduce using rule 25 (statement_list_cfg -> statement .)
    INTERSECT       reduce using rule 25 (statement_list_cfg -> statement .)
    COMPLEMENT      reduce using rule 25 (statement_list_cfg -> statement .)
    DIFF            reduce using rule 25 (statement_list_cfg -> statement .)
    ISDFA           reduce using rule 25 (statement_list_cfg -> statement .)
    ISNFA           reduce using rule 25 (statement_list_cfg -> statement .)
    ISDPDA          reduce using rule 25 (statement_list_cfg -> statement .)
    ISNPDA          reduce using rule 25 (statement_list_cfg -> statement .)
    IF              reduce using rule 25 (statement_list_cfg -> statement .)
    SLCOMMENT       reduce using rule 25 (statement_list_cfg -> statement .)
    MLCOMMENT       reduce using rule 25 (statement_list_cfg -> statement .)
    DOCCOMMENT      reduce using rule 25 (statement_list_cfg -> statement .)


state 225

    (29) nonterminals_list -> nonterminals_list COMMA ID .

    RBRACE          reduce using rule 29 (nonterminals_list -> nonterminals_list COMMA ID .)
    COMMA           reduce using rule 29 (nonterminals_list -> nonterminals_list COMMA ID .)


state 226

    (32) terminals_list -> terminals_list COMMA ID .

    RBRACE          reduce using rule 32 (terminals_list -> terminals_list COMMA ID .)
    COMMA           reduce using rule 32 (terminals_list -> terminals_list COMMA ID .)


state 227

    (38) rule_rhs -> ID .

    SEMICOLON       reduce using rule 38 (rule_rhs -> ID .)
    PIPE            reduce using rule 38 (rule_rhs -> ID .)


state 228

    (37) rule -> ID ARROW rule_rhs . SEMICOLON
    (39) rule_rhs -> rule_rhs . PIPE ID
    (40) rule_rhs -> rule_rhs . PIPE EPSILON

    SEMICOLON       shift and go to state 248
    PIPE            shift and go to state 249


state 229

    (41) statement -> RE ID EQUALS SINGLEQUOTE REGEX SINGLEQUOTE .

    $end            reduce using rule 41 (statement -> RE ID EQUALS SINGLEQUOTE REGEX SINGLEQUOTE .)
    RBRACE          reduce using rule 41 (statement -> RE ID EQUALS SINGLEQUOTE REGEX SINGLEQUOTE .)
    ALPHABET        reduce using rule 41 (statement -> RE ID EQUALS SINGLEQUOTE REGEX SINGLEQUOTE .)
    STR             reduce using rule 41 (statement -> RE ID EQUALS SINGLEQUOTE REGEX SINGLEQUOTE .)
    INITIAL         reduce using rule 41 (statement -> RE ID EQUALS SINGLEQUOTE REGEX SINGLEQUOTE .)
    FINAL           reduce using rule 41 (statement -> RE ID EQUALS SINGLEQUOTE REGEX SINGLEQUOTE .)
    STATES          reduce using rule 41 (statement -> RE ID EQUALS SINGLEQUOTE REGEX SINGLEQUOTE .)
    TRANSITIONS     reduce using rule 41 (statement -> RE ID EQUALS SINGLEQUOTE REGEX SINGLEQUOTE .)
    FA              reduce using rule 41 (statement -> RE ID EQUALS SINGLEQUOTE REGEX SINGLEQUOTE .)
    PDA             reduce using rule 41 (statement -> RE ID EQUALS SINGLEQUOTE REGEX SINGLEQUOTE .)
    STACK_INIT      reduce using rule 41 (statement -> RE ID EQUALS SINGLEQUOTE REGEX SINGLEQUOTE .)
    CFG             reduce using rule 41 (statement -> RE ID EQUALS SINGLEQUOTE REGEX SINGLEQUOTE .)
    NONTERMINALS    reduce using rule 41 (statement -> RE ID EQUALS SINGLEQUOTE REGEX SINGLEQUOTE .)
    TERMINALS       reduce using rule 41 (statement -> RE ID EQUALS SINGLEQUOTE REGEX SINGLEQUOTE .)
    START           reduce using rule 41 (statement -> RE ID EQUALS SINGLEQUOTE REGEX SINGLEQUOTE .)
    RULES           reduce using rule 41 (statement -> RE ID EQUALS SINGLEQUOTE REGEX SINGLEQUOTE .)
    RE              reduce using rule 41 (statement -> RE ID EQUALS SINGLEQUOTE REGEX SINGLEQUOTE .)
    MINIMIZE        reduce using rule 41 (statement -> RE ID EQUALS SINGLEQUOTE REGEX SINGLEQUOTE .)
    SIMULATE        reduce using rule 41 (statement -> RE ID EQUALS SINGLEQUOTE REGEX SINGLEQUOTE .)
    VISUALIZE       reduce using rule 41 (statement -> RE ID EQUALS SINGLEQUOTE REGEX SINGLEQUOTE .)
    CONCAT          reduce using rule 41 (statement -> RE ID EQUALS SINGLEQUOTE REGEX SINGLEQUOTE .)
    POWER           reduce using rule 41 (statement -> RE ID EQUALS SINGLEQUOTE REGEX SINGLEQUOTE .)
    KLEENE          reduce using rule 41 (statement -> RE ID EQUALS SINGLEQUOTE REGEX SINGLEQUOTE .)
    CONVERT         reduce using rule 41 (statement -> RE ID EQUALS SINGLEQUOTE REGEX SINGLEQUOTE .)
    CHECKPUMPINGLEMMAREG reduce using rule 41 (statement -> RE ID EQUALS SINGLEQUOTE REGEX SINGLEQUOTE .)
    CHECKPUMPINGLEMMACFL reduce using rule 41 (statement -> RE ID EQUALS SINGLEQUOTE REGEX SINGLEQUOTE .)
    ISEQUIVALENT    reduce using rule 41 (statement -> RE ID EQUALS SINGLEQUOTE REGEX SINGLEQUOTE .)
    SHOW            reduce using rule 41 (statement -> RE ID EQUALS SINGLEQUOTE REGEX SINGLEQUOTE .)
    UNION           reduce using rule 41 (statement -> RE ID EQUALS SINGLEQUOTE REGEX SINGLEQUOTE .)
    INTERSECT       reduce using rule 41 (statement -> RE ID EQUALS SINGLEQUOTE REGEX SINGLEQUOTE .)
    COMPLEMENT      reduce using rule 41 (statement -> RE ID EQUALS SINGLEQUOTE REGEX SINGLEQUOTE .)
    DIFF            reduce using rule 41 (statement -> RE ID EQUALS SINGLEQUOTE REGEX SINGLEQUOTE .)
    ISDFA           reduce using rule 41 (statement -> RE ID EQUALS SINGLEQUOTE REGEX SINGLEQUOTE .)
    ISNFA           reduce using rule 41 (statement -> RE ID EQUALS SINGLEQUOTE REGEX SINGLEQUOTE .)
    ISDPDA          reduce using rule 41 (statement -> RE ID EQUALS SINGLEQUOTE REGEX SINGLEQUOTE .)
    ISNPDA          reduce using rule 41 (statement -> RE ID EQUALS SINGLEQUOTE REGEX SINGLEQUOTE .)
    IF              reduce using rule 41 (statement -> RE ID EQUALS SINGLEQUOTE REGEX SINGLEQUOTE .)
    SLCOMMENT       reduce using rule 41 (statement -> RE ID EQUALS SINGLEQUOTE REGEX SINGLEQUOTE .)
    MLCOMMENT       reduce using rule 41 (statement -> RE ID EQUALS SINGLEQUOTE REGEX SINGLEQUOTE .)
    DOCCOMMENT      reduce using rule 41 (statement -> RE ID EQUALS SINGLEQUOTE REGEX SINGLEQUOTE .)


state 230

    (43) REGEX_CONTENT -> REGEX_CONTENT REGEX_CHAR .

    REGEX_LITERAL_CHAR reduce using rule 43 (REGEX_CONTENT -> REGEX_CONTENT REGEX_CHAR .)
    STAR            reduce using rule 43 (REGEX_CONTENT -> REGEX_CONTENT REGEX_CHAR .)
    PLUS            reduce using rule 43 (REGEX_CONTENT -> REGEX_CONTENT REGEX_CHAR .)
    OR              reduce using rule 43 (REGEX_CONTENT -> REGEX_CONTENT REGEX_CHAR .)
    DOT             reduce using rule 43 (REGEX_CONTENT -> REGEX_CONTENT REGEX_CHAR .)
    CARET           reduce using rule 43 (REGEX_CONTENT -> REGEX_CONTENT REGEX_CHAR .)
    DOLLAR          reduce using rule 43 (REGEX_CONTENT -> REGEX_CONTENT REGEX_CHAR .)
    QUESTION        reduce using rule 43 (REGEX_CONTENT -> REGEX_CONTENT REGEX_CHAR .)
    LPAREN          reduce using rule 43 (REGEX_CONTENT -> REGEX_CONTENT REGEX_CHAR .)
    RPAREN          reduce using rule 43 (REGEX_CONTENT -> REGEX_CONTENT REGEX_CHAR .)
    LBRACE          reduce using rule 43 (REGEX_CONTENT -> REGEX_CONTENT REGEX_CHAR .)
    RBRACE          reduce using rule 43 (REGEX_CONTENT -> REGEX_CONTENT REGEX_CHAR .)
    SINGLEQUOTE     reduce using rule 43 (REGEX_CONTENT -> REGEX_CONTENT REGEX_CHAR .)


state 231

    (59) statement -> SIMULATE LPAREN ID COMMA ID RPAREN .

    $end            reduce using rule 59 (statement -> SIMULATE LPAREN ID COMMA ID RPAREN .)
    RBRACE          reduce using rule 59 (statement -> SIMULATE LPAREN ID COMMA ID RPAREN .)
    ALPHABET        reduce using rule 59 (statement -> SIMULATE LPAREN ID COMMA ID RPAREN .)
    STR             reduce using rule 59 (statement -> SIMULATE LPAREN ID COMMA ID RPAREN .)
    INITIAL         reduce using rule 59 (statement -> SIMULATE LPAREN ID COMMA ID RPAREN .)
    FINAL           reduce using rule 59 (statement -> SIMULATE LPAREN ID COMMA ID RPAREN .)
    STATES          reduce using rule 59 (statement -> SIMULATE LPAREN ID COMMA ID RPAREN .)
    TRANSITIONS     reduce using rule 59 (statement -> SIMULATE LPAREN ID COMMA ID RPAREN .)
    FA              reduce using rule 59 (statement -> SIMULATE LPAREN ID COMMA ID RPAREN .)
    PDA             reduce using rule 59 (statement -> SIMULATE LPAREN ID COMMA ID RPAREN .)
    STACK_INIT      reduce using rule 59 (statement -> SIMULATE LPAREN ID COMMA ID RPAREN .)
    CFG             reduce using rule 59 (statement -> SIMULATE LPAREN ID COMMA ID RPAREN .)
    NONTERMINALS    reduce using rule 59 (statement -> SIMULATE LPAREN ID COMMA ID RPAREN .)
    TERMINALS       reduce using rule 59 (statement -> SIMULATE LPAREN ID COMMA ID RPAREN .)
    START           reduce using rule 59 (statement -> SIMULATE LPAREN ID COMMA ID RPAREN .)
    RULES           reduce using rule 59 (statement -> SIMULATE LPAREN ID COMMA ID RPAREN .)
    RE              reduce using rule 59 (statement -> SIMULATE LPAREN ID COMMA ID RPAREN .)
    MINIMIZE        reduce using rule 59 (statement -> SIMULATE LPAREN ID COMMA ID RPAREN .)
    SIMULATE        reduce using rule 59 (statement -> SIMULATE LPAREN ID COMMA ID RPAREN .)
    VISUALIZE       reduce using rule 59 (statement -> SIMULATE LPAREN ID COMMA ID RPAREN .)
    CONCAT          reduce using rule 59 (statement -> SIMULATE LPAREN ID COMMA ID RPAREN .)
    POWER           reduce using rule 59 (statement -> SIMULATE LPAREN ID COMMA ID RPAREN .)
    KLEENE          reduce using rule 59 (statement -> SIMULATE LPAREN ID COMMA ID RPAREN .)
    CONVERT         reduce using rule 59 (statement -> SIMULATE LPAREN ID COMMA ID RPAREN .)
    CHECKPUMPINGLEMMAREG reduce using rule 59 (statement -> SIMULATE LPAREN ID COMMA ID RPAREN .)
    CHECKPUMPINGLEMMACFL reduce using rule 59 (statement -> SIMULATE LPAREN ID COMMA ID RPAREN .)
    ISEQUIVALENT    reduce using rule 59 (statement -> SIMULATE LPAREN ID COMMA ID RPAREN .)
    SHOW            reduce using rule 59 (statement -> SIMULATE LPAREN ID COMMA ID RPAREN .)
    UNION           reduce using rule 59 (statement -> SIMULATE LPAREN ID COMMA ID RPAREN .)
    INTERSECT       reduce using rule 59 (statement -> SIMULATE LPAREN ID COMMA ID RPAREN .)
    COMPLEMENT      reduce using rule 59 (statement -> SIMULATE LPAREN ID COMMA ID RPAREN .)
    DIFF            reduce using rule 59 (statement -> SIMULATE LPAREN ID COMMA ID RPAREN .)
    ISDFA           reduce using rule 59 (statement -> SIMULATE LPAREN ID COMMA ID RPAREN .)
    ISNFA           reduce using rule 59 (statement -> SIMULATE LPAREN ID COMMA ID RPAREN .)
    ISDPDA          reduce using rule 59 (statement -> SIMULATE LPAREN ID COMMA ID RPAREN .)
    ISNPDA          reduce using rule 59 (statement -> SIMULATE LPAREN ID COMMA ID RPAREN .)
    IF              reduce using rule 59 (statement -> SIMULATE LPAREN ID COMMA ID RPAREN .)
    SLCOMMENT       reduce using rule 59 (statement -> SIMULATE LPAREN ID COMMA ID RPAREN .)
    MLCOMMENT       reduce using rule 59 (statement -> SIMULATE LPAREN ID COMMA ID RPAREN .)
    DOCCOMMENT      reduce using rule 59 (statement -> SIMULATE LPAREN ID COMMA ID RPAREN .)


state 232

    (61) statement -> CONCAT LPAREN ID COMMA ID RPAREN .

    $end            reduce using rule 61 (statement -> CONCAT LPAREN ID COMMA ID RPAREN .)
    RBRACE          reduce using rule 61 (statement -> CONCAT LPAREN ID COMMA ID RPAREN .)
    ALPHABET        reduce using rule 61 (statement -> CONCAT LPAREN ID COMMA ID RPAREN .)
    STR             reduce using rule 61 (statement -> CONCAT LPAREN ID COMMA ID RPAREN .)
    INITIAL         reduce using rule 61 (statement -> CONCAT LPAREN ID COMMA ID RPAREN .)
    FINAL           reduce using rule 61 (statement -> CONCAT LPAREN ID COMMA ID RPAREN .)
    STATES          reduce using rule 61 (statement -> CONCAT LPAREN ID COMMA ID RPAREN .)
    TRANSITIONS     reduce using rule 61 (statement -> CONCAT LPAREN ID COMMA ID RPAREN .)
    FA              reduce using rule 61 (statement -> CONCAT LPAREN ID COMMA ID RPAREN .)
    PDA             reduce using rule 61 (statement -> CONCAT LPAREN ID COMMA ID RPAREN .)
    STACK_INIT      reduce using rule 61 (statement -> CONCAT LPAREN ID COMMA ID RPAREN .)
    CFG             reduce using rule 61 (statement -> CONCAT LPAREN ID COMMA ID RPAREN .)
    NONTERMINALS    reduce using rule 61 (statement -> CONCAT LPAREN ID COMMA ID RPAREN .)
    TERMINALS       reduce using rule 61 (statement -> CONCAT LPAREN ID COMMA ID RPAREN .)
    START           reduce using rule 61 (statement -> CONCAT LPAREN ID COMMA ID RPAREN .)
    RULES           reduce using rule 61 (statement -> CONCAT LPAREN ID COMMA ID RPAREN .)
    RE              reduce using rule 61 (statement -> CONCAT LPAREN ID COMMA ID RPAREN .)
    MINIMIZE        reduce using rule 61 (statement -> CONCAT LPAREN ID COMMA ID RPAREN .)
    SIMULATE        reduce using rule 61 (statement -> CONCAT LPAREN ID COMMA ID RPAREN .)
    VISUALIZE       reduce using rule 61 (statement -> CONCAT LPAREN ID COMMA ID RPAREN .)
    CONCAT          reduce using rule 61 (statement -> CONCAT LPAREN ID COMMA ID RPAREN .)
    POWER           reduce using rule 61 (statement -> CONCAT LPAREN ID COMMA ID RPAREN .)
    KLEENE          reduce using rule 61 (statement -> CONCAT LPAREN ID COMMA ID RPAREN .)
    CONVERT         reduce using rule 61 (statement -> CONCAT LPAREN ID COMMA ID RPAREN .)
    CHECKPUMPINGLEMMAREG reduce using rule 61 (statement -> CONCAT LPAREN ID COMMA ID RPAREN .)
    CHECKPUMPINGLEMMACFL reduce using rule 61 (statement -> CONCAT LPAREN ID COMMA ID RPAREN .)
    ISEQUIVALENT    reduce using rule 61 (statement -> CONCAT LPAREN ID COMMA ID RPAREN .)
    SHOW            reduce using rule 61 (statement -> CONCAT LPAREN ID COMMA ID RPAREN .)
    UNION           reduce using rule 61 (statement -> CONCAT LPAREN ID COMMA ID RPAREN .)
    INTERSECT       reduce using rule 61 (statement -> CONCAT LPAREN ID COMMA ID RPAREN .)
    COMPLEMENT      reduce using rule 61 (statement -> CONCAT LPAREN ID COMMA ID RPAREN .)
    DIFF            reduce using rule 61 (statement -> CONCAT LPAREN ID COMMA ID RPAREN .)
    ISDFA           reduce using rule 61 (statement -> CONCAT LPAREN ID COMMA ID RPAREN .)
    ISNFA           reduce using rule 61 (statement -> CONCAT LPAREN ID COMMA ID RPAREN .)
    ISDPDA          reduce using rule 61 (statement -> CONCAT LPAREN ID COMMA ID RPAREN .)
    ISNPDA          reduce using rule 61 (statement -> CONCAT LPAREN ID COMMA ID RPAREN .)
    IF              reduce using rule 61 (statement -> CONCAT LPAREN ID COMMA ID RPAREN .)
    SLCOMMENT       reduce using rule 61 (statement -> CONCAT LPAREN ID COMMA ID RPAREN .)
    MLCOMMENT       reduce using rule 61 (statement -> CONCAT LPAREN ID COMMA ID RPAREN .)
    DOCCOMMENT      reduce using rule 61 (statement -> CONCAT LPAREN ID COMMA ID RPAREN .)


state 233

    (62) statement -> POWER LPAREN ID COMMA NUMBER RPAREN .

    $end            reduce using rule 62 (statement -> POWER LPAREN ID COMMA NUMBER RPAREN .)
    RBRACE          reduce using rule 62 (statement -> POWER LPAREN ID COMMA NUMBER RPAREN .)
    ALPHABET        reduce using rule 62 (statement -> POWER LPAREN ID COMMA NUMBER RPAREN .)
    STR             reduce using rule 62 (statement -> POWER LPAREN ID COMMA NUMBER RPAREN .)
    INITIAL         reduce using rule 62 (statement -> POWER LPAREN ID COMMA NUMBER RPAREN .)
    FINAL           reduce using rule 62 (statement -> POWER LPAREN ID COMMA NUMBER RPAREN .)
    STATES          reduce using rule 62 (statement -> POWER LPAREN ID COMMA NUMBER RPAREN .)
    TRANSITIONS     reduce using rule 62 (statement -> POWER LPAREN ID COMMA NUMBER RPAREN .)
    FA              reduce using rule 62 (statement -> POWER LPAREN ID COMMA NUMBER RPAREN .)
    PDA             reduce using rule 62 (statement -> POWER LPAREN ID COMMA NUMBER RPAREN .)
    STACK_INIT      reduce using rule 62 (statement -> POWER LPAREN ID COMMA NUMBER RPAREN .)
    CFG             reduce using rule 62 (statement -> POWER LPAREN ID COMMA NUMBER RPAREN .)
    NONTERMINALS    reduce using rule 62 (statement -> POWER LPAREN ID COMMA NUMBER RPAREN .)
    TERMINALS       reduce using rule 62 (statement -> POWER LPAREN ID COMMA NUMBER RPAREN .)
    START           reduce using rule 62 (statement -> POWER LPAREN ID COMMA NUMBER RPAREN .)
    RULES           reduce using rule 62 (statement -> POWER LPAREN ID COMMA NUMBER RPAREN .)
    RE              reduce using rule 62 (statement -> POWER LPAREN ID COMMA NUMBER RPAREN .)
    MINIMIZE        reduce using rule 62 (statement -> POWER LPAREN ID COMMA NUMBER RPAREN .)
    SIMULATE        reduce using rule 62 (statement -> POWER LPAREN ID COMMA NUMBER RPAREN .)
    VISUALIZE       reduce using rule 62 (statement -> POWER LPAREN ID COMMA NUMBER RPAREN .)
    CONCAT          reduce using rule 62 (statement -> POWER LPAREN ID COMMA NUMBER RPAREN .)
    POWER           reduce using rule 62 (statement -> POWER LPAREN ID COMMA NUMBER RPAREN .)
    KLEENE          reduce using rule 62 (statement -> POWER LPAREN ID COMMA NUMBER RPAREN .)
    CONVERT         reduce using rule 62 (statement -> POWER LPAREN ID COMMA NUMBER RPAREN .)
    CHECKPUMPINGLEMMAREG reduce using rule 62 (statement -> POWER LPAREN ID COMMA NUMBER RPAREN .)
    CHECKPUMPINGLEMMACFL reduce using rule 62 (statement -> POWER LPAREN ID COMMA NUMBER RPAREN .)
    ISEQUIVALENT    reduce using rule 62 (statement -> POWER LPAREN ID COMMA NUMBER RPAREN .)
    SHOW            reduce using rule 62 (statement -> POWER LPAREN ID COMMA NUMBER RPAREN .)
    UNION           reduce using rule 62 (statement -> POWER LPAREN ID COMMA NUMBER RPAREN .)
    INTERSECT       reduce using rule 62 (statement -> POWER LPAREN ID COMMA NUMBER RPAREN .)
    COMPLEMENT      reduce using rule 62 (statement -> POWER LPAREN ID COMMA NUMBER RPAREN .)
    DIFF            reduce using rule 62 (statement -> POWER LPAREN ID COMMA NUMBER RPAREN .)
    ISDFA           reduce using rule 62 (statement -> POWER LPAREN ID COMMA NUMBER RPAREN .)
    ISNFA           reduce using rule 62 (statement -> POWER LPAREN ID COMMA NUMBER RPAREN .)
    ISDPDA          reduce using rule 62 (statement -> POWER LPAREN ID COMMA NUMBER RPAREN .)
    ISNPDA          reduce using rule 62 (statement -> POWER LPAREN ID COMMA NUMBER RPAREN .)
    IF              reduce using rule 62 (statement -> POWER LPAREN ID COMMA NUMBER RPAREN .)
    SLCOMMENT       reduce using rule 62 (statement -> POWER LPAREN ID COMMA NUMBER RPAREN .)
    MLCOMMENT       reduce using rule 62 (statement -> POWER LPAREN ID COMMA NUMBER RPAREN .)
    DOCCOMMENT      reduce using rule 62 (statement -> POWER LPAREN ID COMMA NUMBER RPAREN .)


state 234

    (64) statement -> CONVERT LPAREN ID COMMA ID RPAREN .

    $end            reduce using rule 64 (statement -> CONVERT LPAREN ID COMMA ID RPAREN .)
    RBRACE          reduce using rule 64 (statement -> CONVERT LPAREN ID COMMA ID RPAREN .)
    ALPHABET        reduce using rule 64 (statement -> CONVERT LPAREN ID COMMA ID RPAREN .)
    STR             reduce using rule 64 (statement -> CONVERT LPAREN ID COMMA ID RPAREN .)
    INITIAL         reduce using rule 64 (statement -> CONVERT LPAREN ID COMMA ID RPAREN .)
    FINAL           reduce using rule 64 (statement -> CONVERT LPAREN ID COMMA ID RPAREN .)
    STATES          reduce using rule 64 (statement -> CONVERT LPAREN ID COMMA ID RPAREN .)
    TRANSITIONS     reduce using rule 64 (statement -> CONVERT LPAREN ID COMMA ID RPAREN .)
    FA              reduce using rule 64 (statement -> CONVERT LPAREN ID COMMA ID RPAREN .)
    PDA             reduce using rule 64 (statement -> CONVERT LPAREN ID COMMA ID RPAREN .)
    STACK_INIT      reduce using rule 64 (statement -> CONVERT LPAREN ID COMMA ID RPAREN .)
    CFG             reduce using rule 64 (statement -> CONVERT LPAREN ID COMMA ID RPAREN .)
    NONTERMINALS    reduce using rule 64 (statement -> CONVERT LPAREN ID COMMA ID RPAREN .)
    TERMINALS       reduce using rule 64 (statement -> CONVERT LPAREN ID COMMA ID RPAREN .)
    START           reduce using rule 64 (statement -> CONVERT LPAREN ID COMMA ID RPAREN .)
    RULES           reduce using rule 64 (statement -> CONVERT LPAREN ID COMMA ID RPAREN .)
    RE              reduce using rule 64 (statement -> CONVERT LPAREN ID COMMA ID RPAREN .)
    MINIMIZE        reduce using rule 64 (statement -> CONVERT LPAREN ID COMMA ID RPAREN .)
    SIMULATE        reduce using rule 64 (statement -> CONVERT LPAREN ID COMMA ID RPAREN .)
    VISUALIZE       reduce using rule 64 (statement -> CONVERT LPAREN ID COMMA ID RPAREN .)
    CONCAT          reduce using rule 64 (statement -> CONVERT LPAREN ID COMMA ID RPAREN .)
    POWER           reduce using rule 64 (statement -> CONVERT LPAREN ID COMMA ID RPAREN .)
    KLEENE          reduce using rule 64 (statement -> CONVERT LPAREN ID COMMA ID RPAREN .)
    CONVERT         reduce using rule 64 (statement -> CONVERT LPAREN ID COMMA ID RPAREN .)
    CHECKPUMPINGLEMMAREG reduce using rule 64 (statement -> CONVERT LPAREN ID COMMA ID RPAREN .)
    CHECKPUMPINGLEMMACFL reduce using rule 64 (statement -> CONVERT LPAREN ID COMMA ID RPAREN .)
    ISEQUIVALENT    reduce using rule 64 (statement -> CONVERT LPAREN ID COMMA ID RPAREN .)
    SHOW            reduce using rule 64 (statement -> CONVERT LPAREN ID COMMA ID RPAREN .)
    UNION           reduce using rule 64 (statement -> CONVERT LPAREN ID COMMA ID RPAREN .)
    INTERSECT       reduce using rule 64 (statement -> CONVERT LPAREN ID COMMA ID RPAREN .)
    COMPLEMENT      reduce using rule 64 (statement -> CONVERT LPAREN ID COMMA ID RPAREN .)
    DIFF            reduce using rule 64 (statement -> CONVERT LPAREN ID COMMA ID RPAREN .)
    ISDFA           reduce using rule 64 (statement -> CONVERT LPAREN ID COMMA ID RPAREN .)
    ISNFA           reduce using rule 64 (statement -> CONVERT LPAREN ID COMMA ID RPAREN .)
    ISDPDA          reduce using rule 64 (statement -> CONVERT LPAREN ID COMMA ID RPAREN .)
    ISNPDA          reduce using rule 64 (statement -> CONVERT LPAREN ID COMMA ID RPAREN .)
    IF              reduce using rule 64 (statement -> CONVERT LPAREN ID COMMA ID RPAREN .)
    SLCOMMENT       reduce using rule 64 (statement -> CONVERT LPAREN ID COMMA ID RPAREN .)
    MLCOMMENT       reduce using rule 64 (statement -> CONVERT LPAREN ID COMMA ID RPAREN .)
    DOCCOMMENT      reduce using rule 64 (statement -> CONVERT LPAREN ID COMMA ID RPAREN .)


state 235

    (67) statement -> ISEQUIVALENT LPAREN ID COMMA ID RPAREN .

    $end            reduce using rule 67 (statement -> ISEQUIVALENT LPAREN ID COMMA ID RPAREN .)
    RBRACE          reduce using rule 67 (statement -> ISEQUIVALENT LPAREN ID COMMA ID RPAREN .)
    ALPHABET        reduce using rule 67 (statement -> ISEQUIVALENT LPAREN ID COMMA ID RPAREN .)
    STR             reduce using rule 67 (statement -> ISEQUIVALENT LPAREN ID COMMA ID RPAREN .)
    INITIAL         reduce using rule 67 (statement -> ISEQUIVALENT LPAREN ID COMMA ID RPAREN .)
    FINAL           reduce using rule 67 (statement -> ISEQUIVALENT LPAREN ID COMMA ID RPAREN .)
    STATES          reduce using rule 67 (statement -> ISEQUIVALENT LPAREN ID COMMA ID RPAREN .)
    TRANSITIONS     reduce using rule 67 (statement -> ISEQUIVALENT LPAREN ID COMMA ID RPAREN .)
    FA              reduce using rule 67 (statement -> ISEQUIVALENT LPAREN ID COMMA ID RPAREN .)
    PDA             reduce using rule 67 (statement -> ISEQUIVALENT LPAREN ID COMMA ID RPAREN .)
    STACK_INIT      reduce using rule 67 (statement -> ISEQUIVALENT LPAREN ID COMMA ID RPAREN .)
    CFG             reduce using rule 67 (statement -> ISEQUIVALENT LPAREN ID COMMA ID RPAREN .)
    NONTERMINALS    reduce using rule 67 (statement -> ISEQUIVALENT LPAREN ID COMMA ID RPAREN .)
    TERMINALS       reduce using rule 67 (statement -> ISEQUIVALENT LPAREN ID COMMA ID RPAREN .)
    START           reduce using rule 67 (statement -> ISEQUIVALENT LPAREN ID COMMA ID RPAREN .)
    RULES           reduce using rule 67 (statement -> ISEQUIVALENT LPAREN ID COMMA ID RPAREN .)
    RE              reduce using rule 67 (statement -> ISEQUIVALENT LPAREN ID COMMA ID RPAREN .)
    MINIMIZE        reduce using rule 67 (statement -> ISEQUIVALENT LPAREN ID COMMA ID RPAREN .)
    SIMULATE        reduce using rule 67 (statement -> ISEQUIVALENT LPAREN ID COMMA ID RPAREN .)
    VISUALIZE       reduce using rule 67 (statement -> ISEQUIVALENT LPAREN ID COMMA ID RPAREN .)
    CONCAT          reduce using rule 67 (statement -> ISEQUIVALENT LPAREN ID COMMA ID RPAREN .)
    POWER           reduce using rule 67 (statement -> ISEQUIVALENT LPAREN ID COMMA ID RPAREN .)
    KLEENE          reduce using rule 67 (statement -> ISEQUIVALENT LPAREN ID COMMA ID RPAREN .)
    CONVERT         reduce using rule 67 (statement -> ISEQUIVALENT LPAREN ID COMMA ID RPAREN .)
    CHECKPUMPINGLEMMAREG reduce using rule 67 (statement -> ISEQUIVALENT LPAREN ID COMMA ID RPAREN .)
    CHECKPUMPINGLEMMACFL reduce using rule 67 (statement -> ISEQUIVALENT LPAREN ID COMMA ID RPAREN .)
    ISEQUIVALENT    reduce using rule 67 (statement -> ISEQUIVALENT LPAREN ID COMMA ID RPAREN .)
    SHOW            reduce using rule 67 (statement -> ISEQUIVALENT LPAREN ID COMMA ID RPAREN .)
    UNION           reduce using rule 67 (statement -> ISEQUIVALENT LPAREN ID COMMA ID RPAREN .)
    INTERSECT       reduce using rule 67 (statement -> ISEQUIVALENT LPAREN ID COMMA ID RPAREN .)
    COMPLEMENT      reduce using rule 67 (statement -> ISEQUIVALENT LPAREN ID COMMA ID RPAREN .)
    DIFF            reduce using rule 67 (statement -> ISEQUIVALENT LPAREN ID COMMA ID RPAREN .)
    ISDFA           reduce using rule 67 (statement -> ISEQUIVALENT LPAREN ID COMMA ID RPAREN .)
    ISNFA           reduce using rule 67 (statement -> ISEQUIVALENT LPAREN ID COMMA ID RPAREN .)
    ISDPDA          reduce using rule 67 (statement -> ISEQUIVALENT LPAREN ID COMMA ID RPAREN .)
    ISNPDA          reduce using rule 67 (statement -> ISEQUIVALENT LPAREN ID COMMA ID RPAREN .)
    IF              reduce using rule 67 (statement -> ISEQUIVALENT LPAREN ID COMMA ID RPAREN .)
    SLCOMMENT       reduce using rule 67 (statement -> ISEQUIVALENT LPAREN ID COMMA ID RPAREN .)
    MLCOMMENT       reduce using rule 67 (statement -> ISEQUIVALENT LPAREN ID COMMA ID RPAREN .)
    DOCCOMMENT      reduce using rule 67 (statement -> ISEQUIVALENT LPAREN ID COMMA ID RPAREN .)


state 236

    (77) statement -> UNION LPAREN ID COMMA ID RPAREN .

    $end            reduce using rule 77 (statement -> UNION LPAREN ID COMMA ID RPAREN .)
    RBRACE          reduce using rule 77 (statement -> UNION LPAREN ID COMMA ID RPAREN .)
    ALPHABET        reduce using rule 77 (statement -> UNION LPAREN ID COMMA ID RPAREN .)
    STR             reduce using rule 77 (statement -> UNION LPAREN ID COMMA ID RPAREN .)
    INITIAL         reduce using rule 77 (statement -> UNION LPAREN ID COMMA ID RPAREN .)
    FINAL           reduce using rule 77 (statement -> UNION LPAREN ID COMMA ID RPAREN .)
    STATES          reduce using rule 77 (statement -> UNION LPAREN ID COMMA ID RPAREN .)
    TRANSITIONS     reduce using rule 77 (statement -> UNION LPAREN ID COMMA ID RPAREN .)
    FA              reduce using rule 77 (statement -> UNION LPAREN ID COMMA ID RPAREN .)
    PDA             reduce using rule 77 (statement -> UNION LPAREN ID COMMA ID RPAREN .)
    STACK_INIT      reduce using rule 77 (statement -> UNION LPAREN ID COMMA ID RPAREN .)
    CFG             reduce using rule 77 (statement -> UNION LPAREN ID COMMA ID RPAREN .)
    NONTERMINALS    reduce using rule 77 (statement -> UNION LPAREN ID COMMA ID RPAREN .)
    TERMINALS       reduce using rule 77 (statement -> UNION LPAREN ID COMMA ID RPAREN .)
    START           reduce using rule 77 (statement -> UNION LPAREN ID COMMA ID RPAREN .)
    RULES           reduce using rule 77 (statement -> UNION LPAREN ID COMMA ID RPAREN .)
    RE              reduce using rule 77 (statement -> UNION LPAREN ID COMMA ID RPAREN .)
    MINIMIZE        reduce using rule 77 (statement -> UNION LPAREN ID COMMA ID RPAREN .)
    SIMULATE        reduce using rule 77 (statement -> UNION LPAREN ID COMMA ID RPAREN .)
    VISUALIZE       reduce using rule 77 (statement -> UNION LPAREN ID COMMA ID RPAREN .)
    CONCAT          reduce using rule 77 (statement -> UNION LPAREN ID COMMA ID RPAREN .)
    POWER           reduce using rule 77 (statement -> UNION LPAREN ID COMMA ID RPAREN .)
    KLEENE          reduce using rule 77 (statement -> UNION LPAREN ID COMMA ID RPAREN .)
    CONVERT         reduce using rule 77 (statement -> UNION LPAREN ID COMMA ID RPAREN .)
    CHECKPUMPINGLEMMAREG reduce using rule 77 (statement -> UNION LPAREN ID COMMA ID RPAREN .)
    CHECKPUMPINGLEMMACFL reduce using rule 77 (statement -> UNION LPAREN ID COMMA ID RPAREN .)
    ISEQUIVALENT    reduce using rule 77 (statement -> UNION LPAREN ID COMMA ID RPAREN .)
    SHOW            reduce using rule 77 (statement -> UNION LPAREN ID COMMA ID RPAREN .)
    UNION           reduce using rule 77 (statement -> UNION LPAREN ID COMMA ID RPAREN .)
    INTERSECT       reduce using rule 77 (statement -> UNION LPAREN ID COMMA ID RPAREN .)
    COMPLEMENT      reduce using rule 77 (statement -> UNION LPAREN ID COMMA ID RPAREN .)
    DIFF            reduce using rule 77 (statement -> UNION LPAREN ID COMMA ID RPAREN .)
    ISDFA           reduce using rule 77 (statement -> UNION LPAREN ID COMMA ID RPAREN .)
    ISNFA           reduce using rule 77 (statement -> UNION LPAREN ID COMMA ID RPAREN .)
    ISDPDA          reduce using rule 77 (statement -> UNION LPAREN ID COMMA ID RPAREN .)
    ISNPDA          reduce using rule 77 (statement -> UNION LPAREN ID COMMA ID RPAREN .)
    IF              reduce using rule 77 (statement -> UNION LPAREN ID COMMA ID RPAREN .)
    SLCOMMENT       reduce using rule 77 (statement -> UNION LPAREN ID COMMA ID RPAREN .)
    MLCOMMENT       reduce using rule 77 (statement -> UNION LPAREN ID COMMA ID RPAREN .)
    DOCCOMMENT      reduce using rule 77 (statement -> UNION LPAREN ID COMMA ID RPAREN .)


state 237

    (78) statement -> INTERSECT LPAREN ID COMMA ID RPAREN .

    $end            reduce using rule 78 (statement -> INTERSECT LPAREN ID COMMA ID RPAREN .)
    RBRACE          reduce using rule 78 (statement -> INTERSECT LPAREN ID COMMA ID RPAREN .)
    ALPHABET        reduce using rule 78 (statement -> INTERSECT LPAREN ID COMMA ID RPAREN .)
    STR             reduce using rule 78 (statement -> INTERSECT LPAREN ID COMMA ID RPAREN .)
    INITIAL         reduce using rule 78 (statement -> INTERSECT LPAREN ID COMMA ID RPAREN .)
    FINAL           reduce using rule 78 (statement -> INTERSECT LPAREN ID COMMA ID RPAREN .)
    STATES          reduce using rule 78 (statement -> INTERSECT LPAREN ID COMMA ID RPAREN .)
    TRANSITIONS     reduce using rule 78 (statement -> INTERSECT LPAREN ID COMMA ID RPAREN .)
    FA              reduce using rule 78 (statement -> INTERSECT LPAREN ID COMMA ID RPAREN .)
    PDA             reduce using rule 78 (statement -> INTERSECT LPAREN ID COMMA ID RPAREN .)
    STACK_INIT      reduce using rule 78 (statement -> INTERSECT LPAREN ID COMMA ID RPAREN .)
    CFG             reduce using rule 78 (statement -> INTERSECT LPAREN ID COMMA ID RPAREN .)
    NONTERMINALS    reduce using rule 78 (statement -> INTERSECT LPAREN ID COMMA ID RPAREN .)
    TERMINALS       reduce using rule 78 (statement -> INTERSECT LPAREN ID COMMA ID RPAREN .)
    START           reduce using rule 78 (statement -> INTERSECT LPAREN ID COMMA ID RPAREN .)
    RULES           reduce using rule 78 (statement -> INTERSECT LPAREN ID COMMA ID RPAREN .)
    RE              reduce using rule 78 (statement -> INTERSECT LPAREN ID COMMA ID RPAREN .)
    MINIMIZE        reduce using rule 78 (statement -> INTERSECT LPAREN ID COMMA ID RPAREN .)
    SIMULATE        reduce using rule 78 (statement -> INTERSECT LPAREN ID COMMA ID RPAREN .)
    VISUALIZE       reduce using rule 78 (statement -> INTERSECT LPAREN ID COMMA ID RPAREN .)
    CONCAT          reduce using rule 78 (statement -> INTERSECT LPAREN ID COMMA ID RPAREN .)
    POWER           reduce using rule 78 (statement -> INTERSECT LPAREN ID COMMA ID RPAREN .)
    KLEENE          reduce using rule 78 (statement -> INTERSECT LPAREN ID COMMA ID RPAREN .)
    CONVERT         reduce using rule 78 (statement -> INTERSECT LPAREN ID COMMA ID RPAREN .)
    CHECKPUMPINGLEMMAREG reduce using rule 78 (statement -> INTERSECT LPAREN ID COMMA ID RPAREN .)
    CHECKPUMPINGLEMMACFL reduce using rule 78 (statement -> INTERSECT LPAREN ID COMMA ID RPAREN .)
    ISEQUIVALENT    reduce using rule 78 (statement -> INTERSECT LPAREN ID COMMA ID RPAREN .)
    SHOW            reduce using rule 78 (statement -> INTERSECT LPAREN ID COMMA ID RPAREN .)
    UNION           reduce using rule 78 (statement -> INTERSECT LPAREN ID COMMA ID RPAREN .)
    INTERSECT       reduce using rule 78 (statement -> INTERSECT LPAREN ID COMMA ID RPAREN .)
    COMPLEMENT      reduce using rule 78 (statement -> INTERSECT LPAREN ID COMMA ID RPAREN .)
    DIFF            reduce using rule 78 (statement -> INTERSECT LPAREN ID COMMA ID RPAREN .)
    ISDFA           reduce using rule 78 (statement -> INTERSECT LPAREN ID COMMA ID RPAREN .)
    ISNFA           reduce using rule 78 (statement -> INTERSECT LPAREN ID COMMA ID RPAREN .)
    ISDPDA          reduce using rule 78 (statement -> INTERSECT LPAREN ID COMMA ID RPAREN .)
    ISNPDA          reduce using rule 78 (statement -> INTERSECT LPAREN ID COMMA ID RPAREN .)
    IF              reduce using rule 78 (statement -> INTERSECT LPAREN ID COMMA ID RPAREN .)
    SLCOMMENT       reduce using rule 78 (statement -> INTERSECT LPAREN ID COMMA ID RPAREN .)
    MLCOMMENT       reduce using rule 78 (statement -> INTERSECT LPAREN ID COMMA ID RPAREN .)
    DOCCOMMENT      reduce using rule 78 (statement -> INTERSECT LPAREN ID COMMA ID RPAREN .)


state 238

    (80) statement -> DIFF LPAREN ID COMMA ID RPAREN .

    $end            reduce using rule 80 (statement -> DIFF LPAREN ID COMMA ID RPAREN .)
    RBRACE          reduce using rule 80 (statement -> DIFF LPAREN ID COMMA ID RPAREN .)
    ALPHABET        reduce using rule 80 (statement -> DIFF LPAREN ID COMMA ID RPAREN .)
    STR             reduce using rule 80 (statement -> DIFF LPAREN ID COMMA ID RPAREN .)
    INITIAL         reduce using rule 80 (statement -> DIFF LPAREN ID COMMA ID RPAREN .)
    FINAL           reduce using rule 80 (statement -> DIFF LPAREN ID COMMA ID RPAREN .)
    STATES          reduce using rule 80 (statement -> DIFF LPAREN ID COMMA ID RPAREN .)
    TRANSITIONS     reduce using rule 80 (statement -> DIFF LPAREN ID COMMA ID RPAREN .)
    FA              reduce using rule 80 (statement -> DIFF LPAREN ID COMMA ID RPAREN .)
    PDA             reduce using rule 80 (statement -> DIFF LPAREN ID COMMA ID RPAREN .)
    STACK_INIT      reduce using rule 80 (statement -> DIFF LPAREN ID COMMA ID RPAREN .)
    CFG             reduce using rule 80 (statement -> DIFF LPAREN ID COMMA ID RPAREN .)
    NONTERMINALS    reduce using rule 80 (statement -> DIFF LPAREN ID COMMA ID RPAREN .)
    TERMINALS       reduce using rule 80 (statement -> DIFF LPAREN ID COMMA ID RPAREN .)
    START           reduce using rule 80 (statement -> DIFF LPAREN ID COMMA ID RPAREN .)
    RULES           reduce using rule 80 (statement -> DIFF LPAREN ID COMMA ID RPAREN .)
    RE              reduce using rule 80 (statement -> DIFF LPAREN ID COMMA ID RPAREN .)
    MINIMIZE        reduce using rule 80 (statement -> DIFF LPAREN ID COMMA ID RPAREN .)
    SIMULATE        reduce using rule 80 (statement -> DIFF LPAREN ID COMMA ID RPAREN .)
    VISUALIZE       reduce using rule 80 (statement -> DIFF LPAREN ID COMMA ID RPAREN .)
    CONCAT          reduce using rule 80 (statement -> DIFF LPAREN ID COMMA ID RPAREN .)
    POWER           reduce using rule 80 (statement -> DIFF LPAREN ID COMMA ID RPAREN .)
    KLEENE          reduce using rule 80 (statement -> DIFF LPAREN ID COMMA ID RPAREN .)
    CONVERT         reduce using rule 80 (statement -> DIFF LPAREN ID COMMA ID RPAREN .)
    CHECKPUMPINGLEMMAREG reduce using rule 80 (statement -> DIFF LPAREN ID COMMA ID RPAREN .)
    CHECKPUMPINGLEMMACFL reduce using rule 80 (statement -> DIFF LPAREN ID COMMA ID RPAREN .)
    ISEQUIVALENT    reduce using rule 80 (statement -> DIFF LPAREN ID COMMA ID RPAREN .)
    SHOW            reduce using rule 80 (statement -> DIFF LPAREN ID COMMA ID RPAREN .)
    UNION           reduce using rule 80 (statement -> DIFF LPAREN ID COMMA ID RPAREN .)
    INTERSECT       reduce using rule 80 (statement -> DIFF LPAREN ID COMMA ID RPAREN .)
    COMPLEMENT      reduce using rule 80 (statement -> DIFF LPAREN ID COMMA ID RPAREN .)
    DIFF            reduce using rule 80 (statement -> DIFF LPAREN ID COMMA ID RPAREN .)
    ISDFA           reduce using rule 80 (statement -> DIFF LPAREN ID COMMA ID RPAREN .)
    ISNFA           reduce using rule 80 (statement -> DIFF LPAREN ID COMMA ID RPAREN .)
    ISDPDA          reduce using rule 80 (statement -> DIFF LPAREN ID COMMA ID RPAREN .)
    ISNPDA          reduce using rule 80 (statement -> DIFF LPAREN ID COMMA ID RPAREN .)
    IF              reduce using rule 80 (statement -> DIFF LPAREN ID COMMA ID RPAREN .)
    SLCOMMENT       reduce using rule 80 (statement -> DIFF LPAREN ID COMMA ID RPAREN .)
    MLCOMMENT       reduce using rule 80 (statement -> DIFF LPAREN ID COMMA ID RPAREN .)
    DOCCOMMENT      reduce using rule 80 (statement -> DIFF LPAREN ID COMMA ID RPAREN .)


state 239

    (85) statement -> IF LPAREN condition RPAREN LBRACE statement . RBRACE ELSE LBRACE statement RBRACE
    (86) statement -> IF LPAREN condition RPAREN LBRACE statement . RBRACE ELSE IF LPAREN condition RPAREN LBRACE statement RBRACE
    (87) statement -> IF LPAREN condition RPAREN LBRACE statement . RBRACE ELSE IF LPAREN condition RPAREN LBRACE statement RBRACE ELSE LBRACE statement RBRACE
    (88) statement -> IF LPAREN condition RPAREN LBRACE statement . RBRACE

    RBRACE          shift and go to state 250


state 240

    (3) alphabet_list -> alphabet_list COMMA ID .

    RBRACE          reduce using rule 3 (alphabet_list -> alphabet_list COMMA ID .)
    COMMA           reduce using rule 3 (alphabet_list -> alphabet_list COMMA ID .)


state 241

    (15) transition -> LBRACE FROM COLON ID . COMMA TO COLON ID COMMA ONN COLON ID RBRACE
    (16) transition -> LBRACE FROM COLON ID . COMMA TO COLON ID COMMA ONN COLON ID COMMA POP COLON ID COMMA PUSH COLON ID COMMA STACK COLON ID RBRACE

    COMMA           shift and go to state 251


state 242

    (17) statement -> FA ID LPAREN RPAREN LBRACE statement_list_fa RBRACE .

    $end            reduce using rule 17 (statement -> FA ID LPAREN RPAREN LBRACE statement_list_fa RBRACE .)
    RBRACE          reduce using rule 17 (statement -> FA ID LPAREN RPAREN LBRACE statement_list_fa RBRACE .)
    ALPHABET        reduce using rule 17 (statement -> FA ID LPAREN RPAREN LBRACE statement_list_fa RBRACE .)
    STR             reduce using rule 17 (statement -> FA ID LPAREN RPAREN LBRACE statement_list_fa RBRACE .)
    INITIAL         reduce using rule 17 (statement -> FA ID LPAREN RPAREN LBRACE statement_list_fa RBRACE .)
    FINAL           reduce using rule 17 (statement -> FA ID LPAREN RPAREN LBRACE statement_list_fa RBRACE .)
    STATES          reduce using rule 17 (statement -> FA ID LPAREN RPAREN LBRACE statement_list_fa RBRACE .)
    TRANSITIONS     reduce using rule 17 (statement -> FA ID LPAREN RPAREN LBRACE statement_list_fa RBRACE .)
    FA              reduce using rule 17 (statement -> FA ID LPAREN RPAREN LBRACE statement_list_fa RBRACE .)
    PDA             reduce using rule 17 (statement -> FA ID LPAREN RPAREN LBRACE statement_list_fa RBRACE .)
    STACK_INIT      reduce using rule 17 (statement -> FA ID LPAREN RPAREN LBRACE statement_list_fa RBRACE .)
    CFG             reduce using rule 17 (statement -> FA ID LPAREN RPAREN LBRACE statement_list_fa RBRACE .)
    NONTERMINALS    reduce using rule 17 (statement -> FA ID LPAREN RPAREN LBRACE statement_list_fa RBRACE .)
    TERMINALS       reduce using rule 17 (statement -> FA ID LPAREN RPAREN LBRACE statement_list_fa RBRACE .)
    START           reduce using rule 17 (statement -> FA ID LPAREN RPAREN LBRACE statement_list_fa RBRACE .)
    RULES           reduce using rule 17 (statement -> FA ID LPAREN RPAREN LBRACE statement_list_fa RBRACE .)
    RE              reduce using rule 17 (statement -> FA ID LPAREN RPAREN LBRACE statement_list_fa RBRACE .)
    MINIMIZE        reduce using rule 17 (statement -> FA ID LPAREN RPAREN LBRACE statement_list_fa RBRACE .)
    SIMULATE        reduce using rule 17 (statement -> FA ID LPAREN RPAREN LBRACE statement_list_fa RBRACE .)
    VISUALIZE       reduce using rule 17 (statement -> FA ID LPAREN RPAREN LBRACE statement_list_fa RBRACE .)
    CONCAT          reduce using rule 17 (statement -> FA ID LPAREN RPAREN LBRACE statement_list_fa RBRACE .)
    POWER           reduce using rule 17 (statement -> FA ID LPAREN RPAREN LBRACE statement_list_fa RBRACE .)
    KLEENE          reduce using rule 17 (statement -> FA ID LPAREN RPAREN LBRACE statement_list_fa RBRACE .)
    CONVERT         reduce using rule 17 (statement -> FA ID LPAREN RPAREN LBRACE statement_list_fa RBRACE .)
    CHECKPUMPINGLEMMAREG reduce using rule 17 (statement -> FA ID LPAREN RPAREN LBRACE statement_list_fa RBRACE .)
    CHECKPUMPINGLEMMACFL reduce using rule 17 (statement -> FA ID LPAREN RPAREN LBRACE statement_list_fa RBRACE .)
    ISEQUIVALENT    reduce using rule 17 (statement -> FA ID LPAREN RPAREN LBRACE statement_list_fa RBRACE .)
    SHOW            reduce using rule 17 (statement -> FA ID LPAREN RPAREN LBRACE statement_list_fa RBRACE .)
    UNION           reduce using rule 17 (statement -> FA ID LPAREN RPAREN LBRACE statement_list_fa RBRACE .)
    INTERSECT       reduce using rule 17 (statement -> FA ID LPAREN RPAREN LBRACE statement_list_fa RBRACE .)
    COMPLEMENT      reduce using rule 17 (statement -> FA ID LPAREN RPAREN LBRACE statement_list_fa RBRACE .)
    DIFF            reduce using rule 17 (statement -> FA ID LPAREN RPAREN LBRACE statement_list_fa RBRACE .)
    ISDFA           reduce using rule 17 (statement -> FA ID LPAREN RPAREN LBRACE statement_list_fa RBRACE .)
    ISNFA           reduce using rule 17 (statement -> FA ID LPAREN RPAREN LBRACE statement_list_fa RBRACE .)
    ISDPDA          reduce using rule 17 (statement -> FA ID LPAREN RPAREN LBRACE statement_list_fa RBRACE .)
    ISNPDA          reduce using rule 17 (statement -> FA ID LPAREN RPAREN LBRACE statement_list_fa RBRACE .)
    IF              reduce using rule 17 (statement -> FA ID LPAREN RPAREN LBRACE statement_list_fa RBRACE .)
    SLCOMMENT       reduce using rule 17 (statement -> FA ID LPAREN RPAREN LBRACE statement_list_fa RBRACE .)
    MLCOMMENT       reduce using rule 17 (statement -> FA ID LPAREN RPAREN LBRACE statement_list_fa RBRACE .)
    DOCCOMMENT      reduce using rule 17 (statement -> FA ID LPAREN RPAREN LBRACE statement_list_fa RBRACE .)


state 243

    (19) statement_list_fa -> statement_list_fa statement .

    RBRACE          reduce using rule 19 (statement_list_fa -> statement_list_fa statement .)
    ALPHABET        reduce using rule 19 (statement_list_fa -> statement_list_fa statement .)
    STR             reduce using rule 19 (statement_list_fa -> statement_list_fa statement .)
    INITIAL         reduce using rule 19 (statement_list_fa -> statement_list_fa statement .)
    FINAL           reduce using rule 19 (statement_list_fa -> statement_list_fa statement .)
    STATES          reduce using rule 19 (statement_list_fa -> statement_list_fa statement .)
    TRANSITIONS     reduce using rule 19 (statement_list_fa -> statement_list_fa statement .)
    FA              reduce using rule 19 (statement_list_fa -> statement_list_fa statement .)
    PDA             reduce using rule 19 (statement_list_fa -> statement_list_fa statement .)
    STACK_INIT      reduce using rule 19 (statement_list_fa -> statement_list_fa statement .)
    CFG             reduce using rule 19 (statement_list_fa -> statement_list_fa statement .)
    NONTERMINALS    reduce using rule 19 (statement_list_fa -> statement_list_fa statement .)
    TERMINALS       reduce using rule 19 (statement_list_fa -> statement_list_fa statement .)
    START           reduce using rule 19 (statement_list_fa -> statement_list_fa statement .)
    RULES           reduce using rule 19 (statement_list_fa -> statement_list_fa statement .)
    RE              reduce using rule 19 (statement_list_fa -> statement_list_fa statement .)
    MINIMIZE        reduce using rule 19 (statement_list_fa -> statement_list_fa statement .)
    SIMULATE        reduce using rule 19 (statement_list_fa -> statement_list_fa statement .)
    VISUALIZE       reduce using rule 19 (statement_list_fa -> statement_list_fa statement .)
    CONCAT          reduce using rule 19 (statement_list_fa -> statement_list_fa statement .)
    POWER           reduce using rule 19 (statement_list_fa -> statement_list_fa statement .)
    KLEENE          reduce using rule 19 (statement_list_fa -> statement_list_fa statement .)
    CONVERT         reduce using rule 19 (statement_list_fa -> statement_list_fa statement .)
    CHECKPUMPINGLEMMAREG reduce using rule 19 (statement_list_fa -> statement_list_fa statement .)
    CHECKPUMPINGLEMMACFL reduce using rule 19 (statement_list_fa -> statement_list_fa statement .)
    ISEQUIVALENT    reduce using rule 19 (statement_list_fa -> statement_list_fa statement .)
    SHOW            reduce using rule 19 (statement_list_fa -> statement_list_fa statement .)
    UNION           reduce using rule 19 (statement_list_fa -> statement_list_fa statement .)
    INTERSECT       reduce using rule 19 (statement_list_fa -> statement_list_fa statement .)
    COMPLEMENT      reduce using rule 19 (statement_list_fa -> statement_list_fa statement .)
    DIFF            reduce using rule 19 (statement_list_fa -> statement_list_fa statement .)
    ISDFA           reduce using rule 19 (statement_list_fa -> statement_list_fa statement .)
    ISNFA           reduce using rule 19 (statement_list_fa -> statement_list_fa statement .)
    ISDPDA          reduce using rule 19 (statement_list_fa -> statement_list_fa statement .)
    ISNPDA          reduce using rule 19 (statement_list_fa -> statement_list_fa statement .)
    IF              reduce using rule 19 (statement_list_fa -> statement_list_fa statement .)
    SLCOMMENT       reduce using rule 19 (statement_list_fa -> statement_list_fa statement .)
    MLCOMMENT       reduce using rule 19 (statement_list_fa -> statement_list_fa statement .)
    DOCCOMMENT      reduce using rule 19 (statement_list_fa -> statement_list_fa statement .)


state 244

    (20) statement -> PDA ID LPAREN RPAREN LBRACE statement_list_pda RBRACE .

    $end            reduce using rule 20 (statement -> PDA ID LPAREN RPAREN LBRACE statement_list_pda RBRACE .)
    RBRACE          reduce using rule 20 (statement -> PDA ID LPAREN RPAREN LBRACE statement_list_pda RBRACE .)
    ALPHABET        reduce using rule 20 (statement -> PDA ID LPAREN RPAREN LBRACE statement_list_pda RBRACE .)
    STR             reduce using rule 20 (statement -> PDA ID LPAREN RPAREN LBRACE statement_list_pda RBRACE .)
    INITIAL         reduce using rule 20 (statement -> PDA ID LPAREN RPAREN LBRACE statement_list_pda RBRACE .)
    FINAL           reduce using rule 20 (statement -> PDA ID LPAREN RPAREN LBRACE statement_list_pda RBRACE .)
    STATES          reduce using rule 20 (statement -> PDA ID LPAREN RPAREN LBRACE statement_list_pda RBRACE .)
    TRANSITIONS     reduce using rule 20 (statement -> PDA ID LPAREN RPAREN LBRACE statement_list_pda RBRACE .)
    FA              reduce using rule 20 (statement -> PDA ID LPAREN RPAREN LBRACE statement_list_pda RBRACE .)
    PDA             reduce using rule 20 (statement -> PDA ID LPAREN RPAREN LBRACE statement_list_pda RBRACE .)
    STACK_INIT      reduce using rule 20 (statement -> PDA ID LPAREN RPAREN LBRACE statement_list_pda RBRACE .)
    CFG             reduce using rule 20 (statement -> PDA ID LPAREN RPAREN LBRACE statement_list_pda RBRACE .)
    NONTERMINALS    reduce using rule 20 (statement -> PDA ID LPAREN RPAREN LBRACE statement_list_pda RBRACE .)
    TERMINALS       reduce using rule 20 (statement -> PDA ID LPAREN RPAREN LBRACE statement_list_pda RBRACE .)
    START           reduce using rule 20 (statement -> PDA ID LPAREN RPAREN LBRACE statement_list_pda RBRACE .)
    RULES           reduce using rule 20 (statement -> PDA ID LPAREN RPAREN LBRACE statement_list_pda RBRACE .)
    RE              reduce using rule 20 (statement -> PDA ID LPAREN RPAREN LBRACE statement_list_pda RBRACE .)
    MINIMIZE        reduce using rule 20 (statement -> PDA ID LPAREN RPAREN LBRACE statement_list_pda RBRACE .)
    SIMULATE        reduce using rule 20 (statement -> PDA ID LPAREN RPAREN LBRACE statement_list_pda RBRACE .)
    VISUALIZE       reduce using rule 20 (statement -> PDA ID LPAREN RPAREN LBRACE statement_list_pda RBRACE .)
    CONCAT          reduce using rule 20 (statement -> PDA ID LPAREN RPAREN LBRACE statement_list_pda RBRACE .)
    POWER           reduce using rule 20 (statement -> PDA ID LPAREN RPAREN LBRACE statement_list_pda RBRACE .)
    KLEENE          reduce using rule 20 (statement -> PDA ID LPAREN RPAREN LBRACE statement_list_pda RBRACE .)
    CONVERT         reduce using rule 20 (statement -> PDA ID LPAREN RPAREN LBRACE statement_list_pda RBRACE .)
    CHECKPUMPINGLEMMAREG reduce using rule 20 (statement -> PDA ID LPAREN RPAREN LBRACE statement_list_pda RBRACE .)
    CHECKPUMPINGLEMMACFL reduce using rule 20 (statement -> PDA ID LPAREN RPAREN LBRACE statement_list_pda RBRACE .)
    ISEQUIVALENT    reduce using rule 20 (statement -> PDA ID LPAREN RPAREN LBRACE statement_list_pda RBRACE .)
    SHOW            reduce using rule 20 (statement -> PDA ID LPAREN RPAREN LBRACE statement_list_pda RBRACE .)
    UNION           reduce using rule 20 (statement -> PDA ID LPAREN RPAREN LBRACE statement_list_pda RBRACE .)
    INTERSECT       reduce using rule 20 (statement -> PDA ID LPAREN RPAREN LBRACE statement_list_pda RBRACE .)
    COMPLEMENT      reduce using rule 20 (statement -> PDA ID LPAREN RPAREN LBRACE statement_list_pda RBRACE .)
    DIFF            reduce using rule 20 (statement -> PDA ID LPAREN RPAREN LBRACE statement_list_pda RBRACE .)
    ISDFA           reduce using rule 20 (statement -> PDA ID LPAREN RPAREN LBRACE statement_list_pda RBRACE .)
    ISNFA           reduce using rule 20 (statement -> PDA ID LPAREN RPAREN LBRACE statement_list_pda RBRACE .)
    ISDPDA          reduce using rule 20 (statement -> PDA ID LPAREN RPAREN LBRACE statement_list_pda RBRACE .)
    ISNPDA          reduce using rule 20 (statement -> PDA ID LPAREN RPAREN LBRACE statement_list_pda RBRACE .)
    IF              reduce using rule 20 (statement -> PDA ID LPAREN RPAREN LBRACE statement_list_pda RBRACE .)
    SLCOMMENT       reduce using rule 20 (statement -> PDA ID LPAREN RPAREN LBRACE statement_list_pda RBRACE .)
    MLCOMMENT       reduce using rule 20 (statement -> PDA ID LPAREN RPAREN LBRACE statement_list_pda RBRACE .)
    DOCCOMMENT      reduce using rule 20 (statement -> PDA ID LPAREN RPAREN LBRACE statement_list_pda RBRACE .)


state 245

    (22) statement_list_pda -> statement_list_pda statement .

    RBRACE          reduce using rule 22 (statement_list_pda -> statement_list_pda statement .)
    ALPHABET        reduce using rule 22 (statement_list_pda -> statement_list_pda statement .)
    STR             reduce using rule 22 (statement_list_pda -> statement_list_pda statement .)
    INITIAL         reduce using rule 22 (statement_list_pda -> statement_list_pda statement .)
    FINAL           reduce using rule 22 (statement_list_pda -> statement_list_pda statement .)
    STATES          reduce using rule 22 (statement_list_pda -> statement_list_pda statement .)
    TRANSITIONS     reduce using rule 22 (statement_list_pda -> statement_list_pda statement .)
    FA              reduce using rule 22 (statement_list_pda -> statement_list_pda statement .)
    PDA             reduce using rule 22 (statement_list_pda -> statement_list_pda statement .)
    STACK_INIT      reduce using rule 22 (statement_list_pda -> statement_list_pda statement .)
    CFG             reduce using rule 22 (statement_list_pda -> statement_list_pda statement .)
    NONTERMINALS    reduce using rule 22 (statement_list_pda -> statement_list_pda statement .)
    TERMINALS       reduce using rule 22 (statement_list_pda -> statement_list_pda statement .)
    START           reduce using rule 22 (statement_list_pda -> statement_list_pda statement .)
    RULES           reduce using rule 22 (statement_list_pda -> statement_list_pda statement .)
    RE              reduce using rule 22 (statement_list_pda -> statement_list_pda statement .)
    MINIMIZE        reduce using rule 22 (statement_list_pda -> statement_list_pda statement .)
    SIMULATE        reduce using rule 22 (statement_list_pda -> statement_list_pda statement .)
    VISUALIZE       reduce using rule 22 (statement_list_pda -> statement_list_pda statement .)
    CONCAT          reduce using rule 22 (statement_list_pda -> statement_list_pda statement .)
    POWER           reduce using rule 22 (statement_list_pda -> statement_list_pda statement .)
    KLEENE          reduce using rule 22 (statement_list_pda -> statement_list_pda statement .)
    CONVERT         reduce using rule 22 (statement_list_pda -> statement_list_pda statement .)
    CHECKPUMPINGLEMMAREG reduce using rule 22 (statement_list_pda -> statement_list_pda statement .)
    CHECKPUMPINGLEMMACFL reduce using rule 22 (statement_list_pda -> statement_list_pda statement .)
    ISEQUIVALENT    reduce using rule 22 (statement_list_pda -> statement_list_pda statement .)
    SHOW            reduce using rule 22 (statement_list_pda -> statement_list_pda statement .)
    UNION           reduce using rule 22 (statement_list_pda -> statement_list_pda statement .)
    INTERSECT       reduce using rule 22 (statement_list_pda -> statement_list_pda statement .)
    COMPLEMENT      reduce using rule 22 (statement_list_pda -> statement_list_pda statement .)
    DIFF            reduce using rule 22 (statement_list_pda -> statement_list_pda statement .)
    ISDFA           reduce using rule 22 (statement_list_pda -> statement_list_pda statement .)
    ISNFA           reduce using rule 22 (statement_list_pda -> statement_list_pda statement .)
    ISDPDA          reduce using rule 22 (statement_list_pda -> statement_list_pda statement .)
    ISNPDA          reduce using rule 22 (statement_list_pda -> statement_list_pda statement .)
    IF              reduce using rule 22 (statement_list_pda -> statement_list_pda statement .)
    SLCOMMENT       reduce using rule 22 (statement_list_pda -> statement_list_pda statement .)
    MLCOMMENT       reduce using rule 22 (statement_list_pda -> statement_list_pda statement .)
    DOCCOMMENT      reduce using rule 22 (statement_list_pda -> statement_list_pda statement .)


state 246

    (24) statement -> CFG ID LPAREN RPAREN LBRACE statement_list_cfg RBRACE .

    $end            reduce using rule 24 (statement -> CFG ID LPAREN RPAREN LBRACE statement_list_cfg RBRACE .)
    RBRACE          reduce using rule 24 (statement -> CFG ID LPAREN RPAREN LBRACE statement_list_cfg RBRACE .)
    ALPHABET        reduce using rule 24 (statement -> CFG ID LPAREN RPAREN LBRACE statement_list_cfg RBRACE .)
    STR             reduce using rule 24 (statement -> CFG ID LPAREN RPAREN LBRACE statement_list_cfg RBRACE .)
    INITIAL         reduce using rule 24 (statement -> CFG ID LPAREN RPAREN LBRACE statement_list_cfg RBRACE .)
    FINAL           reduce using rule 24 (statement -> CFG ID LPAREN RPAREN LBRACE statement_list_cfg RBRACE .)
    STATES          reduce using rule 24 (statement -> CFG ID LPAREN RPAREN LBRACE statement_list_cfg RBRACE .)
    TRANSITIONS     reduce using rule 24 (statement -> CFG ID LPAREN RPAREN LBRACE statement_list_cfg RBRACE .)
    FA              reduce using rule 24 (statement -> CFG ID LPAREN RPAREN LBRACE statement_list_cfg RBRACE .)
    PDA             reduce using rule 24 (statement -> CFG ID LPAREN RPAREN LBRACE statement_list_cfg RBRACE .)
    STACK_INIT      reduce using rule 24 (statement -> CFG ID LPAREN RPAREN LBRACE statement_list_cfg RBRACE .)
    CFG             reduce using rule 24 (statement -> CFG ID LPAREN RPAREN LBRACE statement_list_cfg RBRACE .)
    NONTERMINALS    reduce using rule 24 (statement -> CFG ID LPAREN RPAREN LBRACE statement_list_cfg RBRACE .)
    TERMINALS       reduce using rule 24 (statement -> CFG ID LPAREN RPAREN LBRACE statement_list_cfg RBRACE .)
    START           reduce using rule 24 (statement -> CFG ID LPAREN RPAREN LBRACE statement_list_cfg RBRACE .)
    RULES           reduce using rule 24 (statement -> CFG ID LPAREN RPAREN LBRACE statement_list_cfg RBRACE .)
    RE              reduce using rule 24 (statement -> CFG ID LPAREN RPAREN LBRACE statement_list_cfg RBRACE .)
    MINIMIZE        reduce using rule 24 (statement -> CFG ID LPAREN RPAREN LBRACE statement_list_cfg RBRACE .)
    SIMULATE        reduce using rule 24 (statement -> CFG ID LPAREN RPAREN LBRACE statement_list_cfg RBRACE .)
    VISUALIZE       reduce using rule 24 (statement -> CFG ID LPAREN RPAREN LBRACE statement_list_cfg RBRACE .)
    CONCAT          reduce using rule 24 (statement -> CFG ID LPAREN RPAREN LBRACE statement_list_cfg RBRACE .)
    POWER           reduce using rule 24 (statement -> CFG ID LPAREN RPAREN LBRACE statement_list_cfg RBRACE .)
    KLEENE          reduce using rule 24 (statement -> CFG ID LPAREN RPAREN LBRACE statement_list_cfg RBRACE .)
    CONVERT         reduce using rule 24 (statement -> CFG ID LPAREN RPAREN LBRACE statement_list_cfg RBRACE .)
    CHECKPUMPINGLEMMAREG reduce using rule 24 (statement -> CFG ID LPAREN RPAREN LBRACE statement_list_cfg RBRACE .)
    CHECKPUMPINGLEMMACFL reduce using rule 24 (statement -> CFG ID LPAREN RPAREN LBRACE statement_list_cfg RBRACE .)
    ISEQUIVALENT    reduce using rule 24 (statement -> CFG ID LPAREN RPAREN LBRACE statement_list_cfg RBRACE .)
    SHOW            reduce using rule 24 (statement -> CFG ID LPAREN RPAREN LBRACE statement_list_cfg RBRACE .)
    UNION           reduce using rule 24 (statement -> CFG ID LPAREN RPAREN LBRACE statement_list_cfg RBRACE .)
    INTERSECT       reduce using rule 24 (statement -> CFG ID LPAREN RPAREN LBRACE statement_list_cfg RBRACE .)
    COMPLEMENT      reduce using rule 24 (statement -> CFG ID LPAREN RPAREN LBRACE statement_list_cfg RBRACE .)
    DIFF            reduce using rule 24 (statement -> CFG ID LPAREN RPAREN LBRACE statement_list_cfg RBRACE .)
    ISDFA           reduce using rule 24 (statement -> CFG ID LPAREN RPAREN LBRACE statement_list_cfg RBRACE .)
    ISNFA           reduce using rule 24 (statement -> CFG ID LPAREN RPAREN LBRACE statement_list_cfg RBRACE .)
    ISDPDA          reduce using rule 24 (statement -> CFG ID LPAREN RPAREN LBRACE statement_list_cfg RBRACE .)
    ISNPDA          reduce using rule 24 (statement -> CFG ID LPAREN RPAREN LBRACE statement_list_cfg RBRACE .)
    IF              reduce using rule 24 (statement -> CFG ID LPAREN RPAREN LBRACE statement_list_cfg RBRACE .)
    SLCOMMENT       reduce using rule 24 (statement -> CFG ID LPAREN RPAREN LBRACE statement_list_cfg RBRACE .)
    MLCOMMENT       reduce using rule 24 (statement -> CFG ID LPAREN RPAREN LBRACE statement_list_cfg RBRACE .)
    DOCCOMMENT      reduce using rule 24 (statement -> CFG ID LPAREN RPAREN LBRACE statement_list_cfg RBRACE .)


state 247

    (26) statement_list_cfg -> statement_list_cfg statement .

    RBRACE          reduce using rule 26 (statement_list_cfg -> statement_list_cfg statement .)
    ALPHABET        reduce using rule 26 (statement_list_cfg -> statement_list_cfg statement .)
    STR             reduce using rule 26 (statement_list_cfg -> statement_list_cfg statement .)
    INITIAL         reduce using rule 26 (statement_list_cfg -> statement_list_cfg statement .)
    FINAL           reduce using rule 26 (statement_list_cfg -> statement_list_cfg statement .)
    STATES          reduce using rule 26 (statement_list_cfg -> statement_list_cfg statement .)
    TRANSITIONS     reduce using rule 26 (statement_list_cfg -> statement_list_cfg statement .)
    FA              reduce using rule 26 (statement_list_cfg -> statement_list_cfg statement .)
    PDA             reduce using rule 26 (statement_list_cfg -> statement_list_cfg statement .)
    STACK_INIT      reduce using rule 26 (statement_list_cfg -> statement_list_cfg statement .)
    CFG             reduce using rule 26 (statement_list_cfg -> statement_list_cfg statement .)
    NONTERMINALS    reduce using rule 26 (statement_list_cfg -> statement_list_cfg statement .)
    TERMINALS       reduce using rule 26 (statement_list_cfg -> statement_list_cfg statement .)
    START           reduce using rule 26 (statement_list_cfg -> statement_list_cfg statement .)
    RULES           reduce using rule 26 (statement_list_cfg -> statement_list_cfg statement .)
    RE              reduce using rule 26 (statement_list_cfg -> statement_list_cfg statement .)
    MINIMIZE        reduce using rule 26 (statement_list_cfg -> statement_list_cfg statement .)
    SIMULATE        reduce using rule 26 (statement_list_cfg -> statement_list_cfg statement .)
    VISUALIZE       reduce using rule 26 (statement_list_cfg -> statement_list_cfg statement .)
    CONCAT          reduce using rule 26 (statement_list_cfg -> statement_list_cfg statement .)
    POWER           reduce using rule 26 (statement_list_cfg -> statement_list_cfg statement .)
    KLEENE          reduce using rule 26 (statement_list_cfg -> statement_list_cfg statement .)
    CONVERT         reduce using rule 26 (statement_list_cfg -> statement_list_cfg statement .)
    CHECKPUMPINGLEMMAREG reduce using rule 26 (statement_list_cfg -> statement_list_cfg statement .)
    CHECKPUMPINGLEMMACFL reduce using rule 26 (statement_list_cfg -> statement_list_cfg statement .)
    ISEQUIVALENT    reduce using rule 26 (statement_list_cfg -> statement_list_cfg statement .)
    SHOW            reduce using rule 26 (statement_list_cfg -> statement_list_cfg statement .)
    UNION           reduce using rule 26 (statement_list_cfg -> statement_list_cfg statement .)
    INTERSECT       reduce using rule 26 (statement_list_cfg -> statement_list_cfg statement .)
    COMPLEMENT      reduce using rule 26 (statement_list_cfg -> statement_list_cfg statement .)
    DIFF            reduce using rule 26 (statement_list_cfg -> statement_list_cfg statement .)
    ISDFA           reduce using rule 26 (statement_list_cfg -> statement_list_cfg statement .)
    ISNFA           reduce using rule 26 (statement_list_cfg -> statement_list_cfg statement .)
    ISDPDA          reduce using rule 26 (statement_list_cfg -> statement_list_cfg statement .)
    ISNPDA          reduce using rule 26 (statement_list_cfg -> statement_list_cfg statement .)
    IF              reduce using rule 26 (statement_list_cfg -> statement_list_cfg statement .)
    SLCOMMENT       reduce using rule 26 (statement_list_cfg -> statement_list_cfg statement .)
    MLCOMMENT       reduce using rule 26 (statement_list_cfg -> statement_list_cfg statement .)
    DOCCOMMENT      reduce using rule 26 (statement_list_cfg -> statement_list_cfg statement .)


state 248

    (37) rule -> ID ARROW rule_rhs SEMICOLON .

    RBRACE          reduce using rule 37 (rule -> ID ARROW rule_rhs SEMICOLON .)
    ID              reduce using rule 37 (rule -> ID ARROW rule_rhs SEMICOLON .)


state 249

    (39) rule_rhs -> rule_rhs PIPE . ID
    (40) rule_rhs -> rule_rhs PIPE . EPSILON

    ID              shift and go to state 252
    EPSILON         shift and go to state 253


state 250

    (85) statement -> IF LPAREN condition RPAREN LBRACE statement RBRACE . ELSE LBRACE statement RBRACE
    (86) statement -> IF LPAREN condition RPAREN LBRACE statement RBRACE . ELSE IF LPAREN condition RPAREN LBRACE statement RBRACE
    (87) statement -> IF LPAREN condition RPAREN LBRACE statement RBRACE . ELSE IF LPAREN condition RPAREN LBRACE statement RBRACE ELSE LBRACE statement RBRACE
    (88) statement -> IF LPAREN condition RPAREN LBRACE statement RBRACE .

    ELSE            shift and go to state 254
    $end            reduce using rule 88 (statement -> IF LPAREN condition RPAREN LBRACE statement RBRACE .)
    RBRACE          reduce using rule 88 (statement -> IF LPAREN condition RPAREN LBRACE statement RBRACE .)
    ALPHABET        reduce using rule 88 (statement -> IF LPAREN condition RPAREN LBRACE statement RBRACE .)
    STR             reduce using rule 88 (statement -> IF LPAREN condition RPAREN LBRACE statement RBRACE .)
    INITIAL         reduce using rule 88 (statement -> IF LPAREN condition RPAREN LBRACE statement RBRACE .)
    FINAL           reduce using rule 88 (statement -> IF LPAREN condition RPAREN LBRACE statement RBRACE .)
    STATES          reduce using rule 88 (statement -> IF LPAREN condition RPAREN LBRACE statement RBRACE .)
    TRANSITIONS     reduce using rule 88 (statement -> IF LPAREN condition RPAREN LBRACE statement RBRACE .)
    FA              reduce using rule 88 (statement -> IF LPAREN condition RPAREN LBRACE statement RBRACE .)
    PDA             reduce using rule 88 (statement -> IF LPAREN condition RPAREN LBRACE statement RBRACE .)
    STACK_INIT      reduce using rule 88 (statement -> IF LPAREN condition RPAREN LBRACE statement RBRACE .)
    CFG             reduce using rule 88 (statement -> IF LPAREN condition RPAREN LBRACE statement RBRACE .)
    NONTERMINALS    reduce using rule 88 (statement -> IF LPAREN condition RPAREN LBRACE statement RBRACE .)
    TERMINALS       reduce using rule 88 (statement -> IF LPAREN condition RPAREN LBRACE statement RBRACE .)
    START           reduce using rule 88 (statement -> IF LPAREN condition RPAREN LBRACE statement RBRACE .)
    RULES           reduce using rule 88 (statement -> IF LPAREN condition RPAREN LBRACE statement RBRACE .)
    RE              reduce using rule 88 (statement -> IF LPAREN condition RPAREN LBRACE statement RBRACE .)
    MINIMIZE        reduce using rule 88 (statement -> IF LPAREN condition RPAREN LBRACE statement RBRACE .)
    SIMULATE        reduce using rule 88 (statement -> IF LPAREN condition RPAREN LBRACE statement RBRACE .)
    VISUALIZE       reduce using rule 88 (statement -> IF LPAREN condition RPAREN LBRACE statement RBRACE .)
    CONCAT          reduce using rule 88 (statement -> IF LPAREN condition RPAREN LBRACE statement RBRACE .)
    POWER           reduce using rule 88 (statement -> IF LPAREN condition RPAREN LBRACE statement RBRACE .)
    KLEENE          reduce using rule 88 (statement -> IF LPAREN condition RPAREN LBRACE statement RBRACE .)
    CONVERT         reduce using rule 88 (statement -> IF LPAREN condition RPAREN LBRACE statement RBRACE .)
    CHECKPUMPINGLEMMAREG reduce using rule 88 (statement -> IF LPAREN condition RPAREN LBRACE statement RBRACE .)
    CHECKPUMPINGLEMMACFL reduce using rule 88 (statement -> IF LPAREN condition RPAREN LBRACE statement RBRACE .)
    ISEQUIVALENT    reduce using rule 88 (statement -> IF LPAREN condition RPAREN LBRACE statement RBRACE .)
    SHOW            reduce using rule 88 (statement -> IF LPAREN condition RPAREN LBRACE statement RBRACE .)
    UNION           reduce using rule 88 (statement -> IF LPAREN condition RPAREN LBRACE statement RBRACE .)
    INTERSECT       reduce using rule 88 (statement -> IF LPAREN condition RPAREN LBRACE statement RBRACE .)
    COMPLEMENT      reduce using rule 88 (statement -> IF LPAREN condition RPAREN LBRACE statement RBRACE .)
    DIFF            reduce using rule 88 (statement -> IF LPAREN condition RPAREN LBRACE statement RBRACE .)
    ISDFA           reduce using rule 88 (statement -> IF LPAREN condition RPAREN LBRACE statement RBRACE .)
    ISNFA           reduce using rule 88 (statement -> IF LPAREN condition RPAREN LBRACE statement RBRACE .)
    ISDPDA          reduce using rule 88 (statement -> IF LPAREN condition RPAREN LBRACE statement RBRACE .)
    ISNPDA          reduce using rule 88 (statement -> IF LPAREN condition RPAREN LBRACE statement RBRACE .)
    IF              reduce using rule 88 (statement -> IF LPAREN condition RPAREN LBRACE statement RBRACE .)
    SLCOMMENT       reduce using rule 88 (statement -> IF LPAREN condition RPAREN LBRACE statement RBRACE .)
    MLCOMMENT       reduce using rule 88 (statement -> IF LPAREN condition RPAREN LBRACE statement RBRACE .)
    DOCCOMMENT      reduce using rule 88 (statement -> IF LPAREN condition RPAREN LBRACE statement RBRACE .)


state 251

    (15) transition -> LBRACE FROM COLON ID COMMA . TO COLON ID COMMA ONN COLON ID RBRACE
    (16) transition -> LBRACE FROM COLON ID COMMA . TO COLON ID COMMA ONN COLON ID COMMA POP COLON ID COMMA PUSH COLON ID COMMA STACK COLON ID RBRACE

    TO              shift and go to state 255


state 252

    (39) rule_rhs -> rule_rhs PIPE ID .

    SEMICOLON       reduce using rule 39 (rule_rhs -> rule_rhs PIPE ID .)
    PIPE            reduce using rule 39 (rule_rhs -> rule_rhs PIPE ID .)


state 253

    (40) rule_rhs -> rule_rhs PIPE EPSILON .

    SEMICOLON       reduce using rule 40 (rule_rhs -> rule_rhs PIPE EPSILON .)
    PIPE            reduce using rule 40 (rule_rhs -> rule_rhs PIPE EPSILON .)


state 254

    (85) statement -> IF LPAREN condition RPAREN LBRACE statement RBRACE ELSE . LBRACE statement RBRACE
    (86) statement -> IF LPAREN condition RPAREN LBRACE statement RBRACE ELSE . IF LPAREN condition RPAREN LBRACE statement RBRACE
    (87) statement -> IF LPAREN condition RPAREN LBRACE statement RBRACE ELSE . IF LPAREN condition RPAREN LBRACE statement RBRACE ELSE LBRACE statement RBRACE

    LBRACE          shift and go to state 257
    IF              shift and go to state 256


state 255

    (15) transition -> LBRACE FROM COLON ID COMMA TO . COLON ID COMMA ONN COLON ID RBRACE
    (16) transition -> LBRACE FROM COLON ID COMMA TO . COLON ID COMMA ONN COLON ID COMMA POP COLON ID COMMA PUSH COLON ID COMMA STACK COLON ID RBRACE

    COLON           shift and go to state 258


state 256

    (86) statement -> IF LPAREN condition RPAREN LBRACE statement RBRACE ELSE IF . LPAREN condition RPAREN LBRACE statement RBRACE
    (87) statement -> IF LPAREN condition RPAREN LBRACE statement RBRACE ELSE IF . LPAREN condition RPAREN LBRACE statement RBRACE ELSE LBRACE statement RBRACE

    LPAREN          shift and go to state 259


state 257

    (85) statement -> IF LPAREN condition RPAREN LBRACE statement RBRACE ELSE LBRACE . statement RBRACE
    (1) statement -> . ALPHABET ID EQUALS LBRACE alphabet_list RBRACE
    (4) statement -> . STR ID EQUALS SINGLEQUOTE STRING SINGLEQUOTE
    (5) statement -> . INITIAL COLON LBRACE ID RBRACE
    (6) statement -> . FINAL COLON LBRACE final_list RBRACE
    (9) statement -> . STATES COLON LBRACE states_list RBRACE
    (12) statement -> . TRANSITIONS COLON LBRACE transitions_list RBRACE
    (17) statement -> . FA ID LPAREN RPAREN LBRACE statement_list_fa RBRACE
    (20) statement -> . PDA ID LPAREN RPAREN LBRACE statement_list_pda RBRACE
    (23) statement -> . STACK_INIT COLON ID
    (24) statement -> . CFG ID LPAREN RPAREN LBRACE statement_list_cfg RBRACE
    (27) statement -> . NONTERMINALS COLON LBRACE nonterminals_list RBRACE
    (30) statement -> . TERMINALS COLON LBRACE terminals_list RBRACE
    (33) statement -> . START COLON ID
    (34) statement -> . RULES COLON LBRACE rules_list RBRACE
    (41) statement -> . RE ID EQUALS SINGLEQUOTE REGEX SINGLEQUOTE
    (58) statement -> . MINIMIZE LPAREN ID RPAREN
    (59) statement -> . SIMULATE LPAREN ID COMMA ID RPAREN
    (60) statement -> . VISUALIZE LPAREN ID RPAREN
    (61) statement -> . CONCAT LPAREN ID COMMA ID RPAREN
    (62) statement -> . POWER LPAREN ID COMMA NUMBER RPAREN
    (63) statement -> . KLEENE LPAREN ID RPAREN
    (64) statement -> . CONVERT LPAREN ID COMMA ID RPAREN
    (65) statement -> . CHECKPUMPINGLEMMAREG LPAREN ID RPAREN
    (66) statement -> . CHECKPUMPINGLEMMACFL LPAREN ID RPAREN
    (67) statement -> . ISEQUIVALENT LPAREN ID COMMA ID RPAREN
    (76) statement -> . SHOW LPAREN show_type RPAREN
    (77) statement -> . UNION LPAREN ID COMMA ID RPAREN
    (78) statement -> . INTERSECT LPAREN ID COMMA ID RPAREN
    (79) statement -> . COMPLEMENT LPAREN ID RPAREN
    (80) statement -> . DIFF LPAREN ID COMMA ID RPAREN
    (81) statement -> . ISDFA LPAREN ID RPAREN
    (82) statement -> . ISNFA LPAREN ID RPAREN
    (83) statement -> . ISDPDA LPAREN ID RPAREN
    (84) statement -> . ISNPDA LPAREN ID RPAREN
    (85) statement -> . IF LPAREN condition RPAREN LBRACE statement RBRACE ELSE LBRACE statement RBRACE
    (86) statement -> . IF LPAREN condition RPAREN LBRACE statement RBRACE ELSE IF LPAREN condition RPAREN LBRACE statement RBRACE
    (87) statement -> . IF LPAREN condition RPAREN LBRACE statement RBRACE ELSE IF LPAREN condition RPAREN LBRACE statement RBRACE ELSE LBRACE statement RBRACE
    (88) statement -> . IF LPAREN condition RPAREN LBRACE statement RBRACE
    (96) statement -> . SLCOMMENT
    (97) statement -> . MLCOMMENT
    (98) statement -> . DOCCOMMENT

    ALPHABET        shift and go to state 2
    STR             shift and go to state 3
    INITIAL         shift and go to state 4
    FINAL           shift and go to state 5
    STATES          shift and go to state 6
    TRANSITIONS     shift and go to state 7
    FA              shift and go to state 8
    PDA             shift and go to state 9
    STACK_INIT      shift and go to state 10
    CFG             shift and go to state 11
    NONTERMINALS    shift and go to state 12
    TERMINALS       shift and go to state 13
    START           shift and go to state 14
    RULES           shift and go to state 15
    RE              shift and go to state 16
    MINIMIZE        shift and go to state 17
    SIMULATE        shift and go to state 18
    VISUALIZE       shift and go to state 19
    CONCAT          shift and go to state 20
    POWER           shift and go to state 21
    KLEENE          shift and go to state 22
    CONVERT         shift and go to state 23
    CHECKPUMPINGLEMMAREG shift and go to state 24
    CHECKPUMPINGLEMMACFL shift and go to state 25
    ISEQUIVALENT    shift and go to state 26
    SHOW            shift and go to state 27
    UNION           shift and go to state 28
    INTERSECT       shift and go to state 29
    COMPLEMENT      shift and go to state 30
    DIFF            shift and go to state 31
    ISDFA           shift and go to state 32
    ISNFA           shift and go to state 33
    ISDPDA          shift and go to state 34
    ISNPDA          shift and go to state 35
    IF              shift and go to state 36
    SLCOMMENT       shift and go to state 37
    MLCOMMENT       shift and go to state 38
    DOCCOMMENT      shift and go to state 39

    statement                      shift and go to state 260

state 258

    (15) transition -> LBRACE FROM COLON ID COMMA TO COLON . ID COMMA ONN COLON ID RBRACE
    (16) transition -> LBRACE FROM COLON ID COMMA TO COLON . ID COMMA ONN COLON ID COMMA POP COLON ID COMMA PUSH COLON ID COMMA STACK COLON ID RBRACE

    ID              shift and go to state 261


state 259

    (86) statement -> IF LPAREN condition RPAREN LBRACE statement RBRACE ELSE IF LPAREN . condition RPAREN LBRACE statement RBRACE
    (87) statement -> IF LPAREN condition RPAREN LBRACE statement RBRACE ELSE IF LPAREN . condition RPAREN LBRACE statement RBRACE ELSE LBRACE statement RBRACE
    (89) condition -> . CHECKPUMPINGLEMMAREG
    (90) condition -> . CHECKPUMPINGLEMMACFL
    (91) condition -> . ISEQUIVALENT
    (92) condition -> . ISDFA
    (93) condition -> . ISNFA
    (94) condition -> . ISDPDA
    (95) condition -> . ISNPDA

    CHECKPUMPINGLEMMAREG shift and go to state 118
    CHECKPUMPINGLEMMACFL shift and go to state 119
    ISEQUIVALENT    shift and go to state 120
    ISDFA           shift and go to state 121
    ISNFA           shift and go to state 122
    ISDPDA          shift and go to state 123
    ISNPDA          shift and go to state 124

    condition                      shift and go to state 262

state 260

    (85) statement -> IF LPAREN condition RPAREN LBRACE statement RBRACE ELSE LBRACE statement . RBRACE

    RBRACE          shift and go to state 263


state 261

    (15) transition -> LBRACE FROM COLON ID COMMA TO COLON ID . COMMA ONN COLON ID RBRACE
    (16) transition -> LBRACE FROM COLON ID COMMA TO COLON ID . COMMA ONN COLON ID COMMA POP COLON ID COMMA PUSH COLON ID COMMA STACK COLON ID RBRACE

    COMMA           shift and go to state 264


state 262

    (86) statement -> IF LPAREN condition RPAREN LBRACE statement RBRACE ELSE IF LPAREN condition . RPAREN LBRACE statement RBRACE
    (87) statement -> IF LPAREN condition RPAREN LBRACE statement RBRACE ELSE IF LPAREN condition . RPAREN LBRACE statement RBRACE ELSE LBRACE statement RBRACE

    RPAREN          shift and go to state 265


state 263

    (85) statement -> IF LPAREN condition RPAREN LBRACE statement RBRACE ELSE LBRACE statement RBRACE .

    $end            reduce using rule 85 (statement -> IF LPAREN condition RPAREN LBRACE statement RBRACE ELSE LBRACE statement RBRACE .)
    RBRACE          reduce using rule 85 (statement -> IF LPAREN condition RPAREN LBRACE statement RBRACE ELSE LBRACE statement RBRACE .)
    ALPHABET        reduce using rule 85 (statement -> IF LPAREN condition RPAREN LBRACE statement RBRACE ELSE LBRACE statement RBRACE .)
    STR             reduce using rule 85 (statement -> IF LPAREN condition RPAREN LBRACE statement RBRACE ELSE LBRACE statement RBRACE .)
    INITIAL         reduce using rule 85 (statement -> IF LPAREN condition RPAREN LBRACE statement RBRACE ELSE LBRACE statement RBRACE .)
    FINAL           reduce using rule 85 (statement -> IF LPAREN condition RPAREN LBRACE statement RBRACE ELSE LBRACE statement RBRACE .)
    STATES          reduce using rule 85 (statement -> IF LPAREN condition RPAREN LBRACE statement RBRACE ELSE LBRACE statement RBRACE .)
    TRANSITIONS     reduce using rule 85 (statement -> IF LPAREN condition RPAREN LBRACE statement RBRACE ELSE LBRACE statement RBRACE .)
    FA              reduce using rule 85 (statement -> IF LPAREN condition RPAREN LBRACE statement RBRACE ELSE LBRACE statement RBRACE .)
    PDA             reduce using rule 85 (statement -> IF LPAREN condition RPAREN LBRACE statement RBRACE ELSE LBRACE statement RBRACE .)
    STACK_INIT      reduce using rule 85 (statement -> IF LPAREN condition RPAREN LBRACE statement RBRACE ELSE LBRACE statement RBRACE .)
    CFG             reduce using rule 85 (statement -> IF LPAREN condition RPAREN LBRACE statement RBRACE ELSE LBRACE statement RBRACE .)
    NONTERMINALS    reduce using rule 85 (statement -> IF LPAREN condition RPAREN LBRACE statement RBRACE ELSE LBRACE statement RBRACE .)
    TERMINALS       reduce using rule 85 (statement -> IF LPAREN condition RPAREN LBRACE statement RBRACE ELSE LBRACE statement RBRACE .)
    START           reduce using rule 85 (statement -> IF LPAREN condition RPAREN LBRACE statement RBRACE ELSE LBRACE statement RBRACE .)
    RULES           reduce using rule 85 (statement -> IF LPAREN condition RPAREN LBRACE statement RBRACE ELSE LBRACE statement RBRACE .)
    RE              reduce using rule 85 (statement -> IF LPAREN condition RPAREN LBRACE statement RBRACE ELSE LBRACE statement RBRACE .)
    MINIMIZE        reduce using rule 85 (statement -> IF LPAREN condition RPAREN LBRACE statement RBRACE ELSE LBRACE statement RBRACE .)
    SIMULATE        reduce using rule 85 (statement -> IF LPAREN condition RPAREN LBRACE statement RBRACE ELSE LBRACE statement RBRACE .)
    VISUALIZE       reduce using rule 85 (statement -> IF LPAREN condition RPAREN LBRACE statement RBRACE ELSE LBRACE statement RBRACE .)
    CONCAT          reduce using rule 85 (statement -> IF LPAREN condition RPAREN LBRACE statement RBRACE ELSE LBRACE statement RBRACE .)
    POWER           reduce using rule 85 (statement -> IF LPAREN condition RPAREN LBRACE statement RBRACE ELSE LBRACE statement RBRACE .)
    KLEENE          reduce using rule 85 (statement -> IF LPAREN condition RPAREN LBRACE statement RBRACE ELSE LBRACE statement RBRACE .)
    CONVERT         reduce using rule 85 (statement -> IF LPAREN condition RPAREN LBRACE statement RBRACE ELSE LBRACE statement RBRACE .)
    CHECKPUMPINGLEMMAREG reduce using rule 85 (statement -> IF LPAREN condition RPAREN LBRACE statement RBRACE ELSE LBRACE statement RBRACE .)
    CHECKPUMPINGLEMMACFL reduce using rule 85 (statement -> IF LPAREN condition RPAREN LBRACE statement RBRACE ELSE LBRACE statement RBRACE .)
    ISEQUIVALENT    reduce using rule 85 (statement -> IF LPAREN condition RPAREN LBRACE statement RBRACE ELSE LBRACE statement RBRACE .)
    SHOW            reduce using rule 85 (statement -> IF LPAREN condition RPAREN LBRACE statement RBRACE ELSE LBRACE statement RBRACE .)
    UNION           reduce using rule 85 (statement -> IF LPAREN condition RPAREN LBRACE statement RBRACE ELSE LBRACE statement RBRACE .)
    INTERSECT       reduce using rule 85 (statement -> IF LPAREN condition RPAREN LBRACE statement RBRACE ELSE LBRACE statement RBRACE .)
    COMPLEMENT      reduce using rule 85 (statement -> IF LPAREN condition RPAREN LBRACE statement RBRACE ELSE LBRACE statement RBRACE .)
    DIFF            reduce using rule 85 (statement -> IF LPAREN condition RPAREN LBRACE statement RBRACE ELSE LBRACE statement RBRACE .)
    ISDFA           reduce using rule 85 (statement -> IF LPAREN condition RPAREN LBRACE statement RBRACE ELSE LBRACE statement RBRACE .)
    ISNFA           reduce using rule 85 (statement -> IF LPAREN condition RPAREN LBRACE statement RBRACE ELSE LBRACE statement RBRACE .)
    ISDPDA          reduce using rule 85 (statement -> IF LPAREN condition RPAREN LBRACE statement RBRACE ELSE LBRACE statement RBRACE .)
    ISNPDA          reduce using rule 85 (statement -> IF LPAREN condition RPAREN LBRACE statement RBRACE ELSE LBRACE statement RBRACE .)
    IF              reduce using rule 85 (statement -> IF LPAREN condition RPAREN LBRACE statement RBRACE ELSE LBRACE statement RBRACE .)
    SLCOMMENT       reduce using rule 85 (statement -> IF LPAREN condition RPAREN LBRACE statement RBRACE ELSE LBRACE statement RBRACE .)
    MLCOMMENT       reduce using rule 85 (statement -> IF LPAREN condition RPAREN LBRACE statement RBRACE ELSE LBRACE statement RBRACE .)
    DOCCOMMENT      reduce using rule 85 (statement -> IF LPAREN condition RPAREN LBRACE statement RBRACE ELSE LBRACE statement RBRACE .)


state 264

    (15) transition -> LBRACE FROM COLON ID COMMA TO COLON ID COMMA . ONN COLON ID RBRACE
    (16) transition -> LBRACE FROM COLON ID COMMA TO COLON ID COMMA . ONN COLON ID COMMA POP COLON ID COMMA PUSH COLON ID COMMA STACK COLON ID RBRACE

    ONN             shift and go to state 266


state 265

    (86) statement -> IF LPAREN condition RPAREN LBRACE statement RBRACE ELSE IF LPAREN condition RPAREN . LBRACE statement RBRACE
    (87) statement -> IF LPAREN condition RPAREN LBRACE statement RBRACE ELSE IF LPAREN condition RPAREN . LBRACE statement RBRACE ELSE LBRACE statement RBRACE

    LBRACE          shift and go to state 267


state 266

    (15) transition -> LBRACE FROM COLON ID COMMA TO COLON ID COMMA ONN . COLON ID RBRACE
    (16) transition -> LBRACE FROM COLON ID COMMA TO COLON ID COMMA ONN . COLON ID COMMA POP COLON ID COMMA PUSH COLON ID COMMA STACK COLON ID RBRACE

    COLON           shift and go to state 268


state 267

    (86) statement -> IF LPAREN condition RPAREN LBRACE statement RBRACE ELSE IF LPAREN condition RPAREN LBRACE . statement RBRACE
    (87) statement -> IF LPAREN condition RPAREN LBRACE statement RBRACE ELSE IF LPAREN condition RPAREN LBRACE . statement RBRACE ELSE LBRACE statement RBRACE
    (1) statement -> . ALPHABET ID EQUALS LBRACE alphabet_list RBRACE
    (4) statement -> . STR ID EQUALS SINGLEQUOTE STRING SINGLEQUOTE
    (5) statement -> . INITIAL COLON LBRACE ID RBRACE
    (6) statement -> . FINAL COLON LBRACE final_list RBRACE
    (9) statement -> . STATES COLON LBRACE states_list RBRACE
    (12) statement -> . TRANSITIONS COLON LBRACE transitions_list RBRACE
    (17) statement -> . FA ID LPAREN RPAREN LBRACE statement_list_fa RBRACE
    (20) statement -> . PDA ID LPAREN RPAREN LBRACE statement_list_pda RBRACE
    (23) statement -> . STACK_INIT COLON ID
    (24) statement -> . CFG ID LPAREN RPAREN LBRACE statement_list_cfg RBRACE
    (27) statement -> . NONTERMINALS COLON LBRACE nonterminals_list RBRACE
    (30) statement -> . TERMINALS COLON LBRACE terminals_list RBRACE
    (33) statement -> . START COLON ID
    (34) statement -> . RULES COLON LBRACE rules_list RBRACE
    (41) statement -> . RE ID EQUALS SINGLEQUOTE REGEX SINGLEQUOTE
    (58) statement -> . MINIMIZE LPAREN ID RPAREN
    (59) statement -> . SIMULATE LPAREN ID COMMA ID RPAREN
    (60) statement -> . VISUALIZE LPAREN ID RPAREN
    (61) statement -> . CONCAT LPAREN ID COMMA ID RPAREN
    (62) statement -> . POWER LPAREN ID COMMA NUMBER RPAREN
    (63) statement -> . KLEENE LPAREN ID RPAREN
    (64) statement -> . CONVERT LPAREN ID COMMA ID RPAREN
    (65) statement -> . CHECKPUMPINGLEMMAREG LPAREN ID RPAREN
    (66) statement -> . CHECKPUMPINGLEMMACFL LPAREN ID RPAREN
    (67) statement -> . ISEQUIVALENT LPAREN ID COMMA ID RPAREN
    (76) statement -> . SHOW LPAREN show_type RPAREN
    (77) statement -> . UNION LPAREN ID COMMA ID RPAREN
    (78) statement -> . INTERSECT LPAREN ID COMMA ID RPAREN
    (79) statement -> . COMPLEMENT LPAREN ID RPAREN
    (80) statement -> . DIFF LPAREN ID COMMA ID RPAREN
    (81) statement -> . ISDFA LPAREN ID RPAREN
    (82) statement -> . ISNFA LPAREN ID RPAREN
    (83) statement -> . ISDPDA LPAREN ID RPAREN
    (84) statement -> . ISNPDA LPAREN ID RPAREN
    (85) statement -> . IF LPAREN condition RPAREN LBRACE statement RBRACE ELSE LBRACE statement RBRACE
    (86) statement -> . IF LPAREN condition RPAREN LBRACE statement RBRACE ELSE IF LPAREN condition RPAREN LBRACE statement RBRACE
    (87) statement -> . IF LPAREN condition RPAREN LBRACE statement RBRACE ELSE IF LPAREN condition RPAREN LBRACE statement RBRACE ELSE LBRACE statement RBRACE
    (88) statement -> . IF LPAREN condition RPAREN LBRACE statement RBRACE
    (96) statement -> . SLCOMMENT
    (97) statement -> . MLCOMMENT
    (98) statement -> . DOCCOMMENT

    ALPHABET        shift and go to state 2
    STR             shift and go to state 3
    INITIAL         shift and go to state 4
    FINAL           shift and go to state 5
    STATES          shift and go to state 6
    TRANSITIONS     shift and go to state 7
    FA              shift and go to state 8
    PDA             shift and go to state 9
    STACK_INIT      shift and go to state 10
    CFG             shift and go to state 11
    NONTERMINALS    shift and go to state 12
    TERMINALS       shift and go to state 13
    START           shift and go to state 14
    RULES           shift and go to state 15
    RE              shift and go to state 16
    MINIMIZE        shift and go to state 17
    SIMULATE        shift and go to state 18
    VISUALIZE       shift and go to state 19
    CONCAT          shift and go to state 20
    POWER           shift and go to state 21
    KLEENE          shift and go to state 22
    CONVERT         shift and go to state 23
    CHECKPUMPINGLEMMAREG shift and go to state 24
    CHECKPUMPINGLEMMACFL shift and go to state 25
    ISEQUIVALENT    shift and go to state 26
    SHOW            shift and go to state 27
    UNION           shift and go to state 28
    INTERSECT       shift and go to state 29
    COMPLEMENT      shift and go to state 30
    DIFF            shift and go to state 31
    ISDFA           shift and go to state 32
    ISNFA           shift and go to state 33
    ISDPDA          shift and go to state 34
    ISNPDA          shift and go to state 35
    IF              shift and go to state 36
    SLCOMMENT       shift and go to state 37
    MLCOMMENT       shift and go to state 38
    DOCCOMMENT      shift and go to state 39

    statement                      shift and go to state 269

state 268

    (15) transition -> LBRACE FROM COLON ID COMMA TO COLON ID COMMA ONN COLON . ID RBRACE
    (16) transition -> LBRACE FROM COLON ID COMMA TO COLON ID COMMA ONN COLON . ID COMMA POP COLON ID COMMA PUSH COLON ID COMMA STACK COLON ID RBRACE

    ID              shift and go to state 270


state 269

    (86) statement -> IF LPAREN condition RPAREN LBRACE statement RBRACE ELSE IF LPAREN condition RPAREN LBRACE statement . RBRACE
    (87) statement -> IF LPAREN condition RPAREN LBRACE statement RBRACE ELSE IF LPAREN condition RPAREN LBRACE statement . RBRACE ELSE LBRACE statement RBRACE

    RBRACE          shift and go to state 271


state 270

    (15) transition -> LBRACE FROM COLON ID COMMA TO COLON ID COMMA ONN COLON ID . RBRACE
    (16) transition -> LBRACE FROM COLON ID COMMA TO COLON ID COMMA ONN COLON ID . COMMA POP COLON ID COMMA PUSH COLON ID COMMA STACK COLON ID RBRACE

    RBRACE          shift and go to state 273
    COMMA           shift and go to state 272


state 271

    (86) statement -> IF LPAREN condition RPAREN LBRACE statement RBRACE ELSE IF LPAREN condition RPAREN LBRACE statement RBRACE .
    (87) statement -> IF LPAREN condition RPAREN LBRACE statement RBRACE ELSE IF LPAREN condition RPAREN LBRACE statement RBRACE . ELSE LBRACE statement RBRACE

    $end            reduce using rule 86 (statement -> IF LPAREN condition RPAREN LBRACE statement RBRACE ELSE IF LPAREN condition RPAREN LBRACE statement RBRACE .)
    RBRACE          reduce using rule 86 (statement -> IF LPAREN condition RPAREN LBRACE statement RBRACE ELSE IF LPAREN condition RPAREN LBRACE statement RBRACE .)
    ALPHABET        reduce using rule 86 (statement -> IF LPAREN condition RPAREN LBRACE statement RBRACE ELSE IF LPAREN condition RPAREN LBRACE statement RBRACE .)
    STR             reduce using rule 86 (statement -> IF LPAREN condition RPAREN LBRACE statement RBRACE ELSE IF LPAREN condition RPAREN LBRACE statement RBRACE .)
    INITIAL         reduce using rule 86 (statement -> IF LPAREN condition RPAREN LBRACE statement RBRACE ELSE IF LPAREN condition RPAREN LBRACE statement RBRACE .)
    FINAL           reduce using rule 86 (statement -> IF LPAREN condition RPAREN LBRACE statement RBRACE ELSE IF LPAREN condition RPAREN LBRACE statement RBRACE .)
    STATES          reduce using rule 86 (statement -> IF LPAREN condition RPAREN LBRACE statement RBRACE ELSE IF LPAREN condition RPAREN LBRACE statement RBRACE .)
    TRANSITIONS     reduce using rule 86 (statement -> IF LPAREN condition RPAREN LBRACE statement RBRACE ELSE IF LPAREN condition RPAREN LBRACE statement RBRACE .)
    FA              reduce using rule 86 (statement -> IF LPAREN condition RPAREN LBRACE statement RBRACE ELSE IF LPAREN condition RPAREN LBRACE statement RBRACE .)
    PDA             reduce using rule 86 (statement -> IF LPAREN condition RPAREN LBRACE statement RBRACE ELSE IF LPAREN condition RPAREN LBRACE statement RBRACE .)
    STACK_INIT      reduce using rule 86 (statement -> IF LPAREN condition RPAREN LBRACE statement RBRACE ELSE IF LPAREN condition RPAREN LBRACE statement RBRACE .)
    CFG             reduce using rule 86 (statement -> IF LPAREN condition RPAREN LBRACE statement RBRACE ELSE IF LPAREN condition RPAREN LBRACE statement RBRACE .)
    NONTERMINALS    reduce using rule 86 (statement -> IF LPAREN condition RPAREN LBRACE statement RBRACE ELSE IF LPAREN condition RPAREN LBRACE statement RBRACE .)
    TERMINALS       reduce using rule 86 (statement -> IF LPAREN condition RPAREN LBRACE statement RBRACE ELSE IF LPAREN condition RPAREN LBRACE statement RBRACE .)
    START           reduce using rule 86 (statement -> IF LPAREN condition RPAREN LBRACE statement RBRACE ELSE IF LPAREN condition RPAREN LBRACE statement RBRACE .)
    RULES           reduce using rule 86 (statement -> IF LPAREN condition RPAREN LBRACE statement RBRACE ELSE IF LPAREN condition RPAREN LBRACE statement RBRACE .)
    RE              reduce using rule 86 (statement -> IF LPAREN condition RPAREN LBRACE statement RBRACE ELSE IF LPAREN condition RPAREN LBRACE statement RBRACE .)
    MINIMIZE        reduce using rule 86 (statement -> IF LPAREN condition RPAREN LBRACE statement RBRACE ELSE IF LPAREN condition RPAREN LBRACE statement RBRACE .)
    SIMULATE        reduce using rule 86 (statement -> IF LPAREN condition RPAREN LBRACE statement RBRACE ELSE IF LPAREN condition RPAREN LBRACE statement RBRACE .)
    VISUALIZE       reduce using rule 86 (statement -> IF LPAREN condition RPAREN LBRACE statement RBRACE ELSE IF LPAREN condition RPAREN LBRACE statement RBRACE .)
    CONCAT          reduce using rule 86 (statement -> IF LPAREN condition RPAREN LBRACE statement RBRACE ELSE IF LPAREN condition RPAREN LBRACE statement RBRACE .)
    POWER           reduce using rule 86 (statement -> IF LPAREN condition RPAREN LBRACE statement RBRACE ELSE IF LPAREN condition RPAREN LBRACE statement RBRACE .)
    KLEENE          reduce using rule 86 (statement -> IF LPAREN condition RPAREN LBRACE statement RBRACE ELSE IF LPAREN condition RPAREN LBRACE statement RBRACE .)
    CONVERT         reduce using rule 86 (statement -> IF LPAREN condition RPAREN LBRACE statement RBRACE ELSE IF LPAREN condition RPAREN LBRACE statement RBRACE .)
    CHECKPUMPINGLEMMAREG reduce using rule 86 (statement -> IF LPAREN condition RPAREN LBRACE statement RBRACE ELSE IF LPAREN condition RPAREN LBRACE statement RBRACE .)
    CHECKPUMPINGLEMMACFL reduce using rule 86 (statement -> IF LPAREN condition RPAREN LBRACE statement RBRACE ELSE IF LPAREN condition RPAREN LBRACE statement RBRACE .)
    ISEQUIVALENT    reduce using rule 86 (statement -> IF LPAREN condition RPAREN LBRACE statement RBRACE ELSE IF LPAREN condition RPAREN LBRACE statement RBRACE .)
    SHOW            reduce using rule 86 (statement -> IF LPAREN condition RPAREN LBRACE statement RBRACE ELSE IF LPAREN condition RPAREN LBRACE statement RBRACE .)
    UNION           reduce using rule 86 (statement -> IF LPAREN condition RPAREN LBRACE statement RBRACE ELSE IF LPAREN condition RPAREN LBRACE statement RBRACE .)
    INTERSECT       reduce using rule 86 (statement -> IF LPAREN condition RPAREN LBRACE statement RBRACE ELSE IF LPAREN condition RPAREN LBRACE statement RBRACE .)
    COMPLEMENT      reduce using rule 86 (statement -> IF LPAREN condition RPAREN LBRACE statement RBRACE ELSE IF LPAREN condition RPAREN LBRACE statement RBRACE .)
    DIFF            reduce using rule 86 (statement -> IF LPAREN condition RPAREN LBRACE statement RBRACE ELSE IF LPAREN condition RPAREN LBRACE statement RBRACE .)
    ISDFA           reduce using rule 86 (statement -> IF LPAREN condition RPAREN LBRACE statement RBRACE ELSE IF LPAREN condition RPAREN LBRACE statement RBRACE .)
    ISNFA           reduce using rule 86 (statement -> IF LPAREN condition RPAREN LBRACE statement RBRACE ELSE IF LPAREN condition RPAREN LBRACE statement RBRACE .)
    ISDPDA          reduce using rule 86 (statement -> IF LPAREN condition RPAREN LBRACE statement RBRACE ELSE IF LPAREN condition RPAREN LBRACE statement RBRACE .)
    ISNPDA          reduce using rule 86 (statement -> IF LPAREN condition RPAREN LBRACE statement RBRACE ELSE IF LPAREN condition RPAREN LBRACE statement RBRACE .)
    IF              reduce using rule 86 (statement -> IF LPAREN condition RPAREN LBRACE statement RBRACE ELSE IF LPAREN condition RPAREN LBRACE statement RBRACE .)
    SLCOMMENT       reduce using rule 86 (statement -> IF LPAREN condition RPAREN LBRACE statement RBRACE ELSE IF LPAREN condition RPAREN LBRACE statement RBRACE .)
    MLCOMMENT       reduce using rule 86 (statement -> IF LPAREN condition RPAREN LBRACE statement RBRACE ELSE IF LPAREN condition RPAREN LBRACE statement RBRACE .)
    DOCCOMMENT      reduce using rule 86 (statement -> IF LPAREN condition RPAREN LBRACE statement RBRACE ELSE IF LPAREN condition RPAREN LBRACE statement RBRACE .)
    ELSE            shift and go to state 274


state 272

    (16) transition -> LBRACE FROM COLON ID COMMA TO COLON ID COMMA ONN COLON ID COMMA . POP COLON ID COMMA PUSH COLON ID COMMA STACK COLON ID RBRACE

    POP             shift and go to state 275


state 273

    (15) transition -> LBRACE FROM COLON ID COMMA TO COLON ID COMMA ONN COLON ID RBRACE .

    RBRACE          reduce using rule 15 (transition -> LBRACE FROM COLON ID COMMA TO COLON ID COMMA ONN COLON ID RBRACE .)
    COMMA           reduce using rule 15 (transition -> LBRACE FROM COLON ID COMMA TO COLON ID COMMA ONN COLON ID RBRACE .)


state 274

    (87) statement -> IF LPAREN condition RPAREN LBRACE statement RBRACE ELSE IF LPAREN condition RPAREN LBRACE statement RBRACE ELSE . LBRACE statement RBRACE

    LBRACE          shift and go to state 276


state 275

    (16) transition -> LBRACE FROM COLON ID COMMA TO COLON ID COMMA ONN COLON ID COMMA POP . COLON ID COMMA PUSH COLON ID COMMA STACK COLON ID RBRACE

    COLON           shift and go to state 277


state 276

    (87) statement -> IF LPAREN condition RPAREN LBRACE statement RBRACE ELSE IF LPAREN condition RPAREN LBRACE statement RBRACE ELSE LBRACE . statement RBRACE
    (1) statement -> . ALPHABET ID EQUALS LBRACE alphabet_list RBRACE
    (4) statement -> . STR ID EQUALS SINGLEQUOTE STRING SINGLEQUOTE
    (5) statement -> . INITIAL COLON LBRACE ID RBRACE
    (6) statement -> . FINAL COLON LBRACE final_list RBRACE
    (9) statement -> . STATES COLON LBRACE states_list RBRACE
    (12) statement -> . TRANSITIONS COLON LBRACE transitions_list RBRACE
    (17) statement -> . FA ID LPAREN RPAREN LBRACE statement_list_fa RBRACE
    (20) statement -> . PDA ID LPAREN RPAREN LBRACE statement_list_pda RBRACE
    (23) statement -> . STACK_INIT COLON ID
    (24) statement -> . CFG ID LPAREN RPAREN LBRACE statement_list_cfg RBRACE
    (27) statement -> . NONTERMINALS COLON LBRACE nonterminals_list RBRACE
    (30) statement -> . TERMINALS COLON LBRACE terminals_list RBRACE
    (33) statement -> . START COLON ID
    (34) statement -> . RULES COLON LBRACE rules_list RBRACE
    (41) statement -> . RE ID EQUALS SINGLEQUOTE REGEX SINGLEQUOTE
    (58) statement -> . MINIMIZE LPAREN ID RPAREN
    (59) statement -> . SIMULATE LPAREN ID COMMA ID RPAREN
    (60) statement -> . VISUALIZE LPAREN ID RPAREN
    (61) statement -> . CONCAT LPAREN ID COMMA ID RPAREN
    (62) statement -> . POWER LPAREN ID COMMA NUMBER RPAREN
    (63) statement -> . KLEENE LPAREN ID RPAREN
    (64) statement -> . CONVERT LPAREN ID COMMA ID RPAREN
    (65) statement -> . CHECKPUMPINGLEMMAREG LPAREN ID RPAREN
    (66) statement -> . CHECKPUMPINGLEMMACFL LPAREN ID RPAREN
    (67) statement -> . ISEQUIVALENT LPAREN ID COMMA ID RPAREN
    (76) statement -> . SHOW LPAREN show_type RPAREN
    (77) statement -> . UNION LPAREN ID COMMA ID RPAREN
    (78) statement -> . INTERSECT LPAREN ID COMMA ID RPAREN
    (79) statement -> . COMPLEMENT LPAREN ID RPAREN
    (80) statement -> . DIFF LPAREN ID COMMA ID RPAREN
    (81) statement -> . ISDFA LPAREN ID RPAREN
    (82) statement -> . ISNFA LPAREN ID RPAREN
    (83) statement -> . ISDPDA LPAREN ID RPAREN
    (84) statement -> . ISNPDA LPAREN ID RPAREN
    (85) statement -> . IF LPAREN condition RPAREN LBRACE statement RBRACE ELSE LBRACE statement RBRACE
    (86) statement -> . IF LPAREN condition RPAREN LBRACE statement RBRACE ELSE IF LPAREN condition RPAREN LBRACE statement RBRACE
    (87) statement -> . IF LPAREN condition RPAREN LBRACE statement RBRACE ELSE IF LPAREN condition RPAREN LBRACE statement RBRACE ELSE LBRACE statement RBRACE
    (88) statement -> . IF LPAREN condition RPAREN LBRACE statement RBRACE
    (96) statement -> . SLCOMMENT
    (97) statement -> . MLCOMMENT
    (98) statement -> . DOCCOMMENT

    ALPHABET        shift and go to state 2
    STR             shift and go to state 3
    INITIAL         shift and go to state 4
    FINAL           shift and go to state 5
    STATES          shift and go to state 6
    TRANSITIONS     shift and go to state 7
    FA              shift and go to state 8
    PDA             shift and go to state 9
    STACK_INIT      shift and go to state 10
    CFG             shift and go to state 11
    NONTERMINALS    shift and go to state 12
    TERMINALS       shift and go to state 13
    START           shift and go to state 14
    RULES           shift and go to state 15
    RE              shift and go to state 16
    MINIMIZE        shift and go to state 17
    SIMULATE        shift and go to state 18
    VISUALIZE       shift and go to state 19
    CONCAT          shift and go to state 20
    POWER           shift and go to state 21
    KLEENE          shift and go to state 22
    CONVERT         shift and go to state 23
    CHECKPUMPINGLEMMAREG shift and go to state 24
    CHECKPUMPINGLEMMACFL shift and go to state 25
    ISEQUIVALENT    shift and go to state 26
    SHOW            shift and go to state 27
    UNION           shift and go to state 28
    INTERSECT       shift and go to state 29
    COMPLEMENT      shift and go to state 30
    DIFF            shift and go to state 31
    ISDFA           shift and go to state 32
    ISNFA           shift and go to state 33
    ISDPDA          shift and go to state 34
    ISNPDA          shift and go to state 35
    IF              shift and go to state 36
    SLCOMMENT       shift and go to state 37
    MLCOMMENT       shift and go to state 38
    DOCCOMMENT      shift and go to state 39

    statement                      shift and go to state 278

state 277

    (16) transition -> LBRACE FROM COLON ID COMMA TO COLON ID COMMA ONN COLON ID COMMA POP COLON . ID COMMA PUSH COLON ID COMMA STACK COLON ID RBRACE

    ID              shift and go to state 279


state 278

    (87) statement -> IF LPAREN condition RPAREN LBRACE statement RBRACE ELSE IF LPAREN condition RPAREN LBRACE statement RBRACE ELSE LBRACE statement . RBRACE

    RBRACE          shift and go to state 280


state 279

    (16) transition -> LBRACE FROM COLON ID COMMA TO COLON ID COMMA ONN COLON ID COMMA POP COLON ID . COMMA PUSH COLON ID COMMA STACK COLON ID RBRACE

    COMMA           shift and go to state 281


state 280

    (87) statement -> IF LPAREN condition RPAREN LBRACE statement RBRACE ELSE IF LPAREN condition RPAREN LBRACE statement RBRACE ELSE LBRACE statement RBRACE .

    $end            reduce using rule 87 (statement -> IF LPAREN condition RPAREN LBRACE statement RBRACE ELSE IF LPAREN condition RPAREN LBRACE statement RBRACE ELSE LBRACE statement RBRACE .)
    RBRACE          reduce using rule 87 (statement -> IF LPAREN condition RPAREN LBRACE statement RBRACE ELSE IF LPAREN condition RPAREN LBRACE statement RBRACE ELSE LBRACE statement RBRACE .)
    ALPHABET        reduce using rule 87 (statement -> IF LPAREN condition RPAREN LBRACE statement RBRACE ELSE IF LPAREN condition RPAREN LBRACE statement RBRACE ELSE LBRACE statement RBRACE .)
    STR             reduce using rule 87 (statement -> IF LPAREN condition RPAREN LBRACE statement RBRACE ELSE IF LPAREN condition RPAREN LBRACE statement RBRACE ELSE LBRACE statement RBRACE .)
    INITIAL         reduce using rule 87 (statement -> IF LPAREN condition RPAREN LBRACE statement RBRACE ELSE IF LPAREN condition RPAREN LBRACE statement RBRACE ELSE LBRACE statement RBRACE .)
    FINAL           reduce using rule 87 (statement -> IF LPAREN condition RPAREN LBRACE statement RBRACE ELSE IF LPAREN condition RPAREN LBRACE statement RBRACE ELSE LBRACE statement RBRACE .)
    STATES          reduce using rule 87 (statement -> IF LPAREN condition RPAREN LBRACE statement RBRACE ELSE IF LPAREN condition RPAREN LBRACE statement RBRACE ELSE LBRACE statement RBRACE .)
    TRANSITIONS     reduce using rule 87 (statement -> IF LPAREN condition RPAREN LBRACE statement RBRACE ELSE IF LPAREN condition RPAREN LBRACE statement RBRACE ELSE LBRACE statement RBRACE .)
    FA              reduce using rule 87 (statement -> IF LPAREN condition RPAREN LBRACE statement RBRACE ELSE IF LPAREN condition RPAREN LBRACE statement RBRACE ELSE LBRACE statement RBRACE .)
    PDA             reduce using rule 87 (statement -> IF LPAREN condition RPAREN LBRACE statement RBRACE ELSE IF LPAREN condition RPAREN LBRACE statement RBRACE ELSE LBRACE statement RBRACE .)
    STACK_INIT      reduce using rule 87 (statement -> IF LPAREN condition RPAREN LBRACE statement RBRACE ELSE IF LPAREN condition RPAREN LBRACE statement RBRACE ELSE LBRACE statement RBRACE .)
    CFG             reduce using rule 87 (statement -> IF LPAREN condition RPAREN LBRACE statement RBRACE ELSE IF LPAREN condition RPAREN LBRACE statement RBRACE ELSE LBRACE statement RBRACE .)
    NONTERMINALS    reduce using rule 87 (statement -> IF LPAREN condition RPAREN LBRACE statement RBRACE ELSE IF LPAREN condition RPAREN LBRACE statement RBRACE ELSE LBRACE statement RBRACE .)
    TERMINALS       reduce using rule 87 (statement -> IF LPAREN condition RPAREN LBRACE statement RBRACE ELSE IF LPAREN condition RPAREN LBRACE statement RBRACE ELSE LBRACE statement RBRACE .)
    START           reduce using rule 87 (statement -> IF LPAREN condition RPAREN LBRACE statement RBRACE ELSE IF LPAREN condition RPAREN LBRACE statement RBRACE ELSE LBRACE statement RBRACE .)
    RULES           reduce using rule 87 (statement -> IF LPAREN condition RPAREN LBRACE statement RBRACE ELSE IF LPAREN condition RPAREN LBRACE statement RBRACE ELSE LBRACE statement RBRACE .)
    RE              reduce using rule 87 (statement -> IF LPAREN condition RPAREN LBRACE statement RBRACE ELSE IF LPAREN condition RPAREN LBRACE statement RBRACE ELSE LBRACE statement RBRACE .)
    MINIMIZE        reduce using rule 87 (statement -> IF LPAREN condition RPAREN LBRACE statement RBRACE ELSE IF LPAREN condition RPAREN LBRACE statement RBRACE ELSE LBRACE statement RBRACE .)
    SIMULATE        reduce using rule 87 (statement -> IF LPAREN condition RPAREN LBRACE statement RBRACE ELSE IF LPAREN condition RPAREN LBRACE statement RBRACE ELSE LBRACE statement RBRACE .)
    VISUALIZE       reduce using rule 87 (statement -> IF LPAREN condition RPAREN LBRACE statement RBRACE ELSE IF LPAREN condition RPAREN LBRACE statement RBRACE ELSE LBRACE statement RBRACE .)
    CONCAT          reduce using rule 87 (statement -> IF LPAREN condition RPAREN LBRACE statement RBRACE ELSE IF LPAREN condition RPAREN LBRACE statement RBRACE ELSE LBRACE statement RBRACE .)
    POWER           reduce using rule 87 (statement -> IF LPAREN condition RPAREN LBRACE statement RBRACE ELSE IF LPAREN condition RPAREN LBRACE statement RBRACE ELSE LBRACE statement RBRACE .)
    KLEENE          reduce using rule 87 (statement -> IF LPAREN condition RPAREN LBRACE statement RBRACE ELSE IF LPAREN condition RPAREN LBRACE statement RBRACE ELSE LBRACE statement RBRACE .)
    CONVERT         reduce using rule 87 (statement -> IF LPAREN condition RPAREN LBRACE statement RBRACE ELSE IF LPAREN condition RPAREN LBRACE statement RBRACE ELSE LBRACE statement RBRACE .)
    CHECKPUMPINGLEMMAREG reduce using rule 87 (statement -> IF LPAREN condition RPAREN LBRACE statement RBRACE ELSE IF LPAREN condition RPAREN LBRACE statement RBRACE ELSE LBRACE statement RBRACE .)
    CHECKPUMPINGLEMMACFL reduce using rule 87 (statement -> IF LPAREN condition RPAREN LBRACE statement RBRACE ELSE IF LPAREN condition RPAREN LBRACE statement RBRACE ELSE LBRACE statement RBRACE .)
    ISEQUIVALENT    reduce using rule 87 (statement -> IF LPAREN condition RPAREN LBRACE statement RBRACE ELSE IF LPAREN condition RPAREN LBRACE statement RBRACE ELSE LBRACE statement RBRACE .)
    SHOW            reduce using rule 87 (statement -> IF LPAREN condition RPAREN LBRACE statement RBRACE ELSE IF LPAREN condition RPAREN LBRACE statement RBRACE ELSE LBRACE statement RBRACE .)
    UNION           reduce using rule 87 (statement -> IF LPAREN condition RPAREN LBRACE statement RBRACE ELSE IF LPAREN condition RPAREN LBRACE statement RBRACE ELSE LBRACE statement RBRACE .)
    INTERSECT       reduce using rule 87 (statement -> IF LPAREN condition RPAREN LBRACE statement RBRACE ELSE IF LPAREN condition RPAREN LBRACE statement RBRACE ELSE LBRACE statement RBRACE .)
    COMPLEMENT      reduce using rule 87 (statement -> IF LPAREN condition RPAREN LBRACE statement RBRACE ELSE IF LPAREN condition RPAREN LBRACE statement RBRACE ELSE LBRACE statement RBRACE .)
    DIFF            reduce using rule 87 (statement -> IF LPAREN condition RPAREN LBRACE statement RBRACE ELSE IF LPAREN condition RPAREN LBRACE statement RBRACE ELSE LBRACE statement RBRACE .)
    ISDFA           reduce using rule 87 (statement -> IF LPAREN condition RPAREN LBRACE statement RBRACE ELSE IF LPAREN condition RPAREN LBRACE statement RBRACE ELSE LBRACE statement RBRACE .)
    ISNFA           reduce using rule 87 (statement -> IF LPAREN condition RPAREN LBRACE statement RBRACE ELSE IF LPAREN condition RPAREN LBRACE statement RBRACE ELSE LBRACE statement RBRACE .)
    ISDPDA          reduce using rule 87 (statement -> IF LPAREN condition RPAREN LBRACE statement RBRACE ELSE IF LPAREN condition RPAREN LBRACE statement RBRACE ELSE LBRACE statement RBRACE .)
    ISNPDA          reduce using rule 87 (statement -> IF LPAREN condition RPAREN LBRACE statement RBRACE ELSE IF LPAREN condition RPAREN LBRACE statement RBRACE ELSE LBRACE statement RBRACE .)
    IF              reduce using rule 87 (statement -> IF LPAREN condition RPAREN LBRACE statement RBRACE ELSE IF LPAREN condition RPAREN LBRACE statement RBRACE ELSE LBRACE statement RBRACE .)
    SLCOMMENT       reduce using rule 87 (statement -> IF LPAREN condition RPAREN LBRACE statement RBRACE ELSE IF LPAREN condition RPAREN LBRACE statement RBRACE ELSE LBRACE statement RBRACE .)
    MLCOMMENT       reduce using rule 87 (statement -> IF LPAREN condition RPAREN LBRACE statement RBRACE ELSE IF LPAREN condition RPAREN LBRACE statement RBRACE ELSE LBRACE statement RBRACE .)
    DOCCOMMENT      reduce using rule 87 (statement -> IF LPAREN condition RPAREN LBRACE statement RBRACE ELSE IF LPAREN condition RPAREN LBRACE statement RBRACE ELSE LBRACE statement RBRACE .)


state 281

    (16) transition -> LBRACE FROM COLON ID COMMA TO COLON ID COMMA ONN COLON ID COMMA POP COLON ID COMMA . PUSH COLON ID COMMA STACK COLON ID RBRACE

    PUSH            shift and go to state 282


state 282

    (16) transition -> LBRACE FROM COLON ID COMMA TO COLON ID COMMA ONN COLON ID COMMA POP COLON ID COMMA PUSH . COLON ID COMMA STACK COLON ID RBRACE

    COLON           shift and go to state 283


state 283

    (16) transition -> LBRACE FROM COLON ID COMMA TO COLON ID COMMA ONN COLON ID COMMA POP COLON ID COMMA PUSH COLON . ID COMMA STACK COLON ID RBRACE

    ID              shift and go to state 284


state 284

    (16) transition -> LBRACE FROM COLON ID COMMA TO COLON ID COMMA ONN COLON ID COMMA POP COLON ID COMMA PUSH COLON ID . COMMA STACK COLON ID RBRACE

    COMMA           shift and go to state 285


state 285

    (16) transition -> LBRACE FROM COLON ID COMMA TO COLON ID COMMA ONN COLON ID COMMA POP COLON ID COMMA PUSH COLON ID COMMA . STACK COLON ID RBRACE

    STACK           shift and go to state 286


state 286

    (16) transition -> LBRACE FROM COLON ID COMMA TO COLON ID COMMA ONN COLON ID COMMA POP COLON ID COMMA PUSH COLON ID COMMA STACK . COLON ID RBRACE

    COLON           shift and go to state 287


state 287

    (16) transition -> LBRACE FROM COLON ID COMMA TO COLON ID COMMA ONN COLON ID COMMA POP COLON ID COMMA PUSH COLON ID COMMA STACK COLON . ID RBRACE

    ID              shift and go to state 288


state 288

    (16) transition -> LBRACE FROM COLON ID COMMA TO COLON ID COMMA ONN COLON ID COMMA POP COLON ID COMMA PUSH COLON ID COMMA STACK COLON ID . RBRACE

    RBRACE          shift and go to state 289


state 289

    (16) transition -> LBRACE FROM COLON ID COMMA TO COLON ID COMMA ONN COLON ID COMMA POP COLON ID COMMA PUSH COLON ID COMMA STACK COLON ID RBRACE .

    RBRACE          reduce using rule 16 (transition -> LBRACE FROM COLON ID COMMA TO COLON ID COMMA ONN COLON ID COMMA POP COLON ID COMMA PUSH COLON ID COMMA STACK COLON ID RBRACE .)
    COMMA           reduce using rule 16 (transition -> LBRACE FROM COLON ID COMMA TO COLON ID COMMA ONN COLON ID COMMA POP COLON ID COMMA PUSH COLON ID COMMA STACK COLON ID RBRACE .)

