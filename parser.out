Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> statement
Rule 1     statement -> ALPHABET ID EQUALS LBRACE alphabet_list RBRACE
Rule 2     alphabet_list -> ID
Rule 3     alphabet_list -> alphabet_list COMMA ID
Rule 4     statement -> STR ID EQUALS SINGLEQUOTE STRING SINGLEQUOTE
Rule 5     statement -> fa_statement
Rule 6     statement -> pda_statement
Rule 7     statement -> cfg_statement
Rule 8     fa_statement -> FA ID LPAREN RPAREN LBRACE fa_body RBRACE
Rule 9     pda_statement -> PDA ID LPAREN RPAREN LBRACE pda_body RBRACE
Rule 10    fa_body -> states
Rule 11    fa_body -> initial
Rule 12    fa_body -> final
Rule 13    fa_body -> transitions
Rule 14    states -> STATES COLON LBRACE states_list RBRACE
Rule 15    states_list -> ID
Rule 16    states_list -> states_list COMMA ID
Rule 17    initial -> INITIAL COLON LBRACE ID RBRACE
Rule 18    final -> FINAL COLON LBRACE final_list RBRACE
Rule 19    final_list -> ID
Rule 20    final_list -> final_list COMMA ID
Rule 21    transitions -> TRANSITIONS COLON LBRACE transitions_list RBRACE
Rule 22    transitions_list -> transition
Rule 23    transitions_list -> transitions_list COMMA transition
Rule 24    transition -> LSQUARE FROM COLON ID COMMA TO COLON ID COMMA ONN COLON ID RSQUARE
Rule 25    transition -> LSQUARE FROM COLON ID COMMA TO COLON ID COMMA ONN COLON ID COMMA POP COLON ID COMMA PUSH COLON ID COMMA STACK COLON ID RSQUARE
Rule 26    pda_body -> states
Rule 27    pda_body -> initial
Rule 28    pda_body -> stack_init
Rule 29    pda_body -> final
Rule 30    pda_body -> transitions
Rule 31    stack_init -> STACK_INIT COLON ID
Rule 32    cfg_statement -> CFG ID LPAREN RPAREN LBRACE cfg_body RBRACE
Rule 33    cfg_body -> nonterminals_statement
Rule 34    cfg_body -> terminals_statement
Rule 35    cfg_body -> start_statement
Rule 36    cfg_body -> rules_statement
Rule 37    cfg_body -> cfg_body nonterminals_statement
Rule 38    cfg_body -> cfg_body terminals_statement
Rule 39    cfg_body -> cfg_body start_statement
Rule 40    cfg_body -> cfg_body rules_statement
Rule 41    nonterminals_statement -> NONTERMINALS COLON LBRACE nonterminals_list RBRACE
Rule 42    nonterminals_list -> ID
Rule 43    nonterminals_list -> nonterminals_list COMMA ID
Rule 44    terminals_statement -> TERMINALS COLON LBRACE terminals_list RBRACE
Rule 45    terminals_list -> ID
Rule 46    terminals_list -> terminals_list COMMA ID
Rule 47    start_statement -> START COLON ID
Rule 48    rules_statement -> RULES COLON LBRACE rules_list RBRACE
Rule 49    rules_list -> rule
Rule 50    rules_list -> rules_list rule
Rule 51    rule -> ID ARROW rule_rhs SEMICOLON
Rule 52    rule_rhs -> ID
Rule 53    rule_rhs -> rule_rhs PIPE ID
Rule 54    rule_rhs -> rule_rhs PIPE EPSILON
Rule 55    statement -> RE ID EQUALS SINGLEQUOTE REGEX SINGLEQUOTE
Rule 56    REGEX -> REGEX_CONTENT
Rule 57    REGEX_CONTENT -> REGEX_CONTENT REGEX_CHAR
Rule 58    REGEX_CONTENT -> REGEX_CHAR
Rule 59    REGEX_CHAR -> REGEX_SPECIAL_CHAR
Rule 60    REGEX_CHAR -> REGEX_LITERAL_CHAR
Rule 61    REGEX_SPECIAL_CHAR -> STAR
Rule 62    REGEX_SPECIAL_CHAR -> PLUS
Rule 63    REGEX_SPECIAL_CHAR -> OR
Rule 64    REGEX_SPECIAL_CHAR -> DOT
Rule 65    REGEX_SPECIAL_CHAR -> CARET
Rule 66    REGEX_SPECIAL_CHAR -> DOLLAR
Rule 67    REGEX_SPECIAL_CHAR -> QUESTION
Rule 68    REGEX_SPECIAL_CHAR -> LPAREN
Rule 69    REGEX_SPECIAL_CHAR -> RPAREN
Rule 70    REGEX_SPECIAL_CHAR -> LBRACE
Rule 71    REGEX_SPECIAL_CHAR -> RBRACE
Rule 72    statement -> MINIMIZE LPAREN ID RPAREN
Rule 73    statement -> SIMULATE LPAREN ID COMMA ID RPAREN
Rule 74    statement -> VISUALIZE LPAREN ID RPAREN
Rule 75    statement -> CONCAT LPAREN ID COMMA ID RPAREN
Rule 76    statement -> POWER LPAREN ID COMMA NUMBER RPAREN
Rule 77    statement -> KLEENE LPAREN ID RPAREN
Rule 78    statement -> CONVERT LPAREN ID COMMA ID RPAREN
Rule 79    statement -> CHECKPUMPINGLEMMAREG LPAREN ID RPAREN
Rule 80    statement -> CHECKPUMPINGLEMMACFL LPAREN ID RPAREN
Rule 81    statement -> ISEQUIVALENT LPAREN ID COMMA ID RPAREN
Rule 82    show_type -> YES
Rule 83    show_type -> NO
Rule 84    show_type -> REGULAR
Rule 85    show_type -> ISNOTREGULAR
Rule 86    show_type -> CFL
Rule 87    show_type -> ISNOTCFL
Rule 88    show_type -> ACCEPT
Rule 89    show_type -> REJECT
Rule 90    statement -> SHOW LPAREN show_type RPAREN
Rule 91    statement -> UNION LPAREN ID COMMA ID RPAREN
Rule 92    statement -> INTERSECT LPAREN ID COMMA ID RPAREN
Rule 93    statement -> COMPLEMENT LPAREN ID RPAREN
Rule 94    statement -> DIFF LPAREN ID COMMA ID RPAREN
Rule 95    statement -> ISDFA LPAREN ID RPAREN
Rule 96    statement -> ISNFA LPAREN ID RPAREN
Rule 97    statement -> ISDPDA LPAREN ID RPAREN
Rule 98    statement -> ISNPDA LPAREN ID RPAREN
Rule 99    statement -> IF LPAREN condition RPAREN LBRACE statement RBRACE ELSE LBRACE statement RBRACE
Rule 100   statement -> IF LPAREN condition RPAREN LBRACE statement RBRACE ELSE IF LPAREN condition RPAREN LBRACE statement RBRACE
Rule 101   statement -> IF LPAREN condition RPAREN LBRACE statement RBRACE ELSE IF LPAREN condition RPAREN LBRACE statement RBRACE ELSE LBRACE statement RBRACE
Rule 102   statement -> IF LPAREN condition RPAREN LBRACE statement RBRACE
Rule 103   condition -> CHECKPUMPINGLEMMAREG
Rule 104   condition -> CHECKPUMPINGLEMMACFL
Rule 105   condition -> ISEQUIVALENT
Rule 106   condition -> ISDFA
Rule 107   condition -> ISNFA
Rule 108   condition -> ISDPDA
Rule 109   condition -> ISNPDA
Rule 110   statement -> SLCOMMENT
Rule 111   statement -> MLCOMMENT
Rule 112   statement -> DOCCOMMENT

Terminals, with rules where they appear

ACCEPT               : 88
ALPHABET             : 1
ARROW                : 51
CARET                : 65
CFG                  : 32
CFL                  : 86
CHECKPUMPINGLEMMACFL : 80 104
CHECKPUMPINGLEMMAREG : 79 103
COLON                : 14 17 18 21 24 24 24 25 25 25 25 25 25 31 41 44 47 48
COMMA                : 3 16 20 23 24 24 25 25 25 25 25 43 46 73 75 76 78 81 91 92 94
COMPLEMENT           : 93
CONCAT               : 75
CONVERT              : 78
DIFF                 : 94
DOCCOMMENT           : 112
DOLLAR               : 66
DOT                  : 64
ELSE                 : 99 100 101 101
EPSILON              : 54
EQUALS               : 1 4 55
FA                   : 8
FINAL                : 18
FROM                 : 24 25
ID                   : 1 2 3 4 8 9 15 16 17 19 20 24 24 24 25 25 25 25 25 25 31 32 42 43 45 46 47 51 52 53 55 72 73 73 74 75 75 76 77 78 78 79 80 81 81 91 91 92 92 93 94 94 95 96 97 98
IF                   : 99 100 100 101 101 102
INITIAL              : 17
INTERSECT            : 92
ISDFA                : 95 106
ISDPDA               : 97 108
ISEQUIVALENT         : 81 105
ISNFA                : 96 107
ISNOTCFL             : 87
ISNOTREGULAR         : 85
ISNPDA               : 98 109
KLEENE               : 77
LBRACE               : 1 8 9 14 17 18 21 32 41 44 48 70 99 99 100 100 101 101 101 102
LPAREN               : 8 9 32 68 72 73 74 75 76 77 78 79 80 81 90 91 92 93 94 95 96 97 98 99 100 100 101 101 102
LSQUARE              : 24 25
MINIMIZE             : 72
MLCOMMENT            : 111
NO                   : 83
NONTERMINALS         : 41
NUMBER               : 76
ONN                  : 24 25
OR                   : 63
PDA                  : 9
PIPE                 : 53 54
PLUS                 : 62
POP                  : 25
POWER                : 76
PUSH                 : 25
QUESTION             : 67
RBRACE               : 1 8 9 14 17 18 21 32 41 44 48 71 99 99 100 100 101 101 101 102
RE                   : 55
REGEX_LITERAL_CHAR   : 60
REGULAR              : 84
REJECT               : 89
RPAREN               : 8 9 32 69 72 73 74 75 76 77 78 79 80 81 90 91 92 93 94 95 96 97 98 99 100 100 101 101 102
RSQUARE              : 24 25
RULES                : 48
SEMICOLON            : 51
SHOW                 : 90
SIMULATE             : 73
SINGLEQUOTE          : 4 4 55 55
SLCOMMENT            : 110
STACK                : 25
STACK_INIT           : 31
STAR                 : 61
START                : 47
STATES               : 14
STR                  : 4
STRING               : 4
TERMINALS            : 44
TO                   : 24 25
TRANSITIONS          : 21
UNION                : 91
VISUALIZE            : 74
YES                  : 82
error                : 

Nonterminals, with rules where they appear

REGEX                : 55
REGEX_CHAR           : 57 58
REGEX_CONTENT        : 56 57
REGEX_SPECIAL_CHAR   : 59
alphabet_list        : 1 3
cfg_body             : 32 37 38 39 40
cfg_statement        : 7
condition            : 99 100 100 101 101 102
fa_body              : 8
fa_statement         : 5
final                : 12 29
final_list           : 18 20
initial              : 11 27
nonterminals_list    : 41 43
nonterminals_statement : 33 37
pda_body             : 9
pda_statement        : 6
rule                 : 49 50
rule_rhs             : 51 53 54
rules_list           : 48 50
rules_statement      : 36 40
show_type            : 90
stack_init           : 28
start_statement      : 35 39
statement            : 99 99 100 100 101 101 101 102 0
states               : 10 26
states_list          : 14 16
terminals_list       : 44 46
terminals_statement  : 34 38
transition           : 22 23
transitions          : 13 30
transitions_list     : 21 23

Parsing method: LALR

state 0

    (0) S' -> . statement
    (1) statement -> . ALPHABET ID EQUALS LBRACE alphabet_list RBRACE
    (4) statement -> . STR ID EQUALS SINGLEQUOTE STRING SINGLEQUOTE
    (5) statement -> . fa_statement
    (6) statement -> . pda_statement
    (7) statement -> . cfg_statement
    (55) statement -> . RE ID EQUALS SINGLEQUOTE REGEX SINGLEQUOTE
    (72) statement -> . MINIMIZE LPAREN ID RPAREN
    (73) statement -> . SIMULATE LPAREN ID COMMA ID RPAREN
    (74) statement -> . VISUALIZE LPAREN ID RPAREN
    (75) statement -> . CONCAT LPAREN ID COMMA ID RPAREN
    (76) statement -> . POWER LPAREN ID COMMA NUMBER RPAREN
    (77) statement -> . KLEENE LPAREN ID RPAREN
    (78) statement -> . CONVERT LPAREN ID COMMA ID RPAREN
    (79) statement -> . CHECKPUMPINGLEMMAREG LPAREN ID RPAREN
    (80) statement -> . CHECKPUMPINGLEMMACFL LPAREN ID RPAREN
    (81) statement -> . ISEQUIVALENT LPAREN ID COMMA ID RPAREN
    (90) statement -> . SHOW LPAREN show_type RPAREN
    (91) statement -> . UNION LPAREN ID COMMA ID RPAREN
    (92) statement -> . INTERSECT LPAREN ID COMMA ID RPAREN
    (93) statement -> . COMPLEMENT LPAREN ID RPAREN
    (94) statement -> . DIFF LPAREN ID COMMA ID RPAREN
    (95) statement -> . ISDFA LPAREN ID RPAREN
    (96) statement -> . ISNFA LPAREN ID RPAREN
    (97) statement -> . ISDPDA LPAREN ID RPAREN
    (98) statement -> . ISNPDA LPAREN ID RPAREN
    (99) statement -> . IF LPAREN condition RPAREN LBRACE statement RBRACE ELSE LBRACE statement RBRACE
    (100) statement -> . IF LPAREN condition RPAREN LBRACE statement RBRACE ELSE IF LPAREN condition RPAREN LBRACE statement RBRACE
    (101) statement -> . IF LPAREN condition RPAREN LBRACE statement RBRACE ELSE IF LPAREN condition RPAREN LBRACE statement RBRACE ELSE LBRACE statement RBRACE
    (102) statement -> . IF LPAREN condition RPAREN LBRACE statement RBRACE
    (110) statement -> . SLCOMMENT
    (111) statement -> . MLCOMMENT
    (112) statement -> . DOCCOMMENT
    (8) fa_statement -> . FA ID LPAREN RPAREN LBRACE fa_body RBRACE
    (9) pda_statement -> . PDA ID LPAREN RPAREN LBRACE pda_body RBRACE
    (32) cfg_statement -> . CFG ID LPAREN RPAREN LBRACE cfg_body RBRACE

    ALPHABET        shift and go to state 2
    STR             shift and go to state 3
    RE              shift and go to state 7
    MINIMIZE        shift and go to state 8
    SIMULATE        shift and go to state 9
    VISUALIZE       shift and go to state 10
    CONCAT          shift and go to state 11
    POWER           shift and go to state 12
    KLEENE          shift and go to state 13
    CONVERT         shift and go to state 14
    CHECKPUMPINGLEMMAREG shift and go to state 15
    CHECKPUMPINGLEMMACFL shift and go to state 16
    ISEQUIVALENT    shift and go to state 17
    SHOW            shift and go to state 18
    UNION           shift and go to state 19
    INTERSECT       shift and go to state 20
    COMPLEMENT      shift and go to state 21
    DIFF            shift and go to state 22
    ISDFA           shift and go to state 23
    ISNFA           shift and go to state 24
    ISDPDA          shift and go to state 25
    ISNPDA          shift and go to state 26
    IF              shift and go to state 27
    SLCOMMENT       shift and go to state 28
    MLCOMMENT       shift and go to state 29
    DOCCOMMENT      shift and go to state 30
    FA              shift and go to state 31
    PDA             shift and go to state 32
    CFG             shift and go to state 33

    statement                      shift and go to state 1
    fa_statement                   shift and go to state 4
    pda_statement                  shift and go to state 5
    cfg_statement                  shift and go to state 6

state 1

    (0) S' -> statement .



state 2

    (1) statement -> ALPHABET . ID EQUALS LBRACE alphabet_list RBRACE

    ID              shift and go to state 34


state 3

    (4) statement -> STR . ID EQUALS SINGLEQUOTE STRING SINGLEQUOTE

    ID              shift and go to state 35


state 4

    (5) statement -> fa_statement .

    $end            reduce using rule 5 (statement -> fa_statement .)
    RBRACE          reduce using rule 5 (statement -> fa_statement .)


state 5

    (6) statement -> pda_statement .

    $end            reduce using rule 6 (statement -> pda_statement .)
    RBRACE          reduce using rule 6 (statement -> pda_statement .)


state 6

    (7) statement -> cfg_statement .

    $end            reduce using rule 7 (statement -> cfg_statement .)
    RBRACE          reduce using rule 7 (statement -> cfg_statement .)


state 7

    (55) statement -> RE . ID EQUALS SINGLEQUOTE REGEX SINGLEQUOTE

    ID              shift and go to state 36


state 8

    (72) statement -> MINIMIZE . LPAREN ID RPAREN

    LPAREN          shift and go to state 37


state 9

    (73) statement -> SIMULATE . LPAREN ID COMMA ID RPAREN

    LPAREN          shift and go to state 38


state 10

    (74) statement -> VISUALIZE . LPAREN ID RPAREN

    LPAREN          shift and go to state 39


state 11

    (75) statement -> CONCAT . LPAREN ID COMMA ID RPAREN

    LPAREN          shift and go to state 40


state 12

    (76) statement -> POWER . LPAREN ID COMMA NUMBER RPAREN

    LPAREN          shift and go to state 41


state 13

    (77) statement -> KLEENE . LPAREN ID RPAREN

    LPAREN          shift and go to state 42


state 14

    (78) statement -> CONVERT . LPAREN ID COMMA ID RPAREN

    LPAREN          shift and go to state 43


state 15

    (79) statement -> CHECKPUMPINGLEMMAREG . LPAREN ID RPAREN

    LPAREN          shift and go to state 44


state 16

    (80) statement -> CHECKPUMPINGLEMMACFL . LPAREN ID RPAREN

    LPAREN          shift and go to state 45


state 17

    (81) statement -> ISEQUIVALENT . LPAREN ID COMMA ID RPAREN

    LPAREN          shift and go to state 46


state 18

    (90) statement -> SHOW . LPAREN show_type RPAREN

    LPAREN          shift and go to state 47


state 19

    (91) statement -> UNION . LPAREN ID COMMA ID RPAREN

    LPAREN          shift and go to state 48


state 20

    (92) statement -> INTERSECT . LPAREN ID COMMA ID RPAREN

    LPAREN          shift and go to state 49


state 21

    (93) statement -> COMPLEMENT . LPAREN ID RPAREN

    LPAREN          shift and go to state 50


state 22

    (94) statement -> DIFF . LPAREN ID COMMA ID RPAREN

    LPAREN          shift and go to state 51


state 23

    (95) statement -> ISDFA . LPAREN ID RPAREN

    LPAREN          shift and go to state 52


state 24

    (96) statement -> ISNFA . LPAREN ID RPAREN

    LPAREN          shift and go to state 53


state 25

    (97) statement -> ISDPDA . LPAREN ID RPAREN

    LPAREN          shift and go to state 54


state 26

    (98) statement -> ISNPDA . LPAREN ID RPAREN

    LPAREN          shift and go to state 55


state 27

    (99) statement -> IF . LPAREN condition RPAREN LBRACE statement RBRACE ELSE LBRACE statement RBRACE
    (100) statement -> IF . LPAREN condition RPAREN LBRACE statement RBRACE ELSE IF LPAREN condition RPAREN LBRACE statement RBRACE
    (101) statement -> IF . LPAREN condition RPAREN LBRACE statement RBRACE ELSE IF LPAREN condition RPAREN LBRACE statement RBRACE ELSE LBRACE statement RBRACE
    (102) statement -> IF . LPAREN condition RPAREN LBRACE statement RBRACE

    LPAREN          shift and go to state 56


state 28

    (110) statement -> SLCOMMENT .

    $end            reduce using rule 110 (statement -> SLCOMMENT .)
    RBRACE          reduce using rule 110 (statement -> SLCOMMENT .)


state 29

    (111) statement -> MLCOMMENT .

    $end            reduce using rule 111 (statement -> MLCOMMENT .)
    RBRACE          reduce using rule 111 (statement -> MLCOMMENT .)


state 30

    (112) statement -> DOCCOMMENT .

    $end            reduce using rule 112 (statement -> DOCCOMMENT .)
    RBRACE          reduce using rule 112 (statement -> DOCCOMMENT .)


state 31

    (8) fa_statement -> FA . ID LPAREN RPAREN LBRACE fa_body RBRACE

    ID              shift and go to state 57


state 32

    (9) pda_statement -> PDA . ID LPAREN RPAREN LBRACE pda_body RBRACE

    ID              shift and go to state 58


state 33

    (32) cfg_statement -> CFG . ID LPAREN RPAREN LBRACE cfg_body RBRACE

    ID              shift and go to state 59


state 34

    (1) statement -> ALPHABET ID . EQUALS LBRACE alphabet_list RBRACE

    EQUALS          shift and go to state 60


state 35

    (4) statement -> STR ID . EQUALS SINGLEQUOTE STRING SINGLEQUOTE

    EQUALS          shift and go to state 61


state 36

    (55) statement -> RE ID . EQUALS SINGLEQUOTE REGEX SINGLEQUOTE

    EQUALS          shift and go to state 62


state 37

    (72) statement -> MINIMIZE LPAREN . ID RPAREN

    ID              shift and go to state 63


state 38

    (73) statement -> SIMULATE LPAREN . ID COMMA ID RPAREN

    ID              shift and go to state 64


state 39

    (74) statement -> VISUALIZE LPAREN . ID RPAREN

    ID              shift and go to state 65


state 40

    (75) statement -> CONCAT LPAREN . ID COMMA ID RPAREN

    ID              shift and go to state 66


state 41

    (76) statement -> POWER LPAREN . ID COMMA NUMBER RPAREN

    ID              shift and go to state 67


state 42

    (77) statement -> KLEENE LPAREN . ID RPAREN

    ID              shift and go to state 68


state 43

    (78) statement -> CONVERT LPAREN . ID COMMA ID RPAREN

    ID              shift and go to state 69


state 44

    (79) statement -> CHECKPUMPINGLEMMAREG LPAREN . ID RPAREN

    ID              shift and go to state 70


state 45

    (80) statement -> CHECKPUMPINGLEMMACFL LPAREN . ID RPAREN

    ID              shift and go to state 71


state 46

    (81) statement -> ISEQUIVALENT LPAREN . ID COMMA ID RPAREN

    ID              shift and go to state 72


state 47

    (90) statement -> SHOW LPAREN . show_type RPAREN
    (82) show_type -> . YES
    (83) show_type -> . NO
    (84) show_type -> . REGULAR
    (85) show_type -> . ISNOTREGULAR
    (86) show_type -> . CFL
    (87) show_type -> . ISNOTCFL
    (88) show_type -> . ACCEPT
    (89) show_type -> . REJECT

    YES             shift and go to state 74
    NO              shift and go to state 75
    REGULAR         shift and go to state 76
    ISNOTREGULAR    shift and go to state 77
    CFL             shift and go to state 78
    ISNOTCFL        shift and go to state 79
    ACCEPT          shift and go to state 80
    REJECT          shift and go to state 81

    show_type                      shift and go to state 73

state 48

    (91) statement -> UNION LPAREN . ID COMMA ID RPAREN

    ID              shift and go to state 82


state 49

    (92) statement -> INTERSECT LPAREN . ID COMMA ID RPAREN

    ID              shift and go to state 83


state 50

    (93) statement -> COMPLEMENT LPAREN . ID RPAREN

    ID              shift and go to state 84


state 51

    (94) statement -> DIFF LPAREN . ID COMMA ID RPAREN

    ID              shift and go to state 85


state 52

    (95) statement -> ISDFA LPAREN . ID RPAREN

    ID              shift and go to state 86


state 53

    (96) statement -> ISNFA LPAREN . ID RPAREN

    ID              shift and go to state 87


state 54

    (97) statement -> ISDPDA LPAREN . ID RPAREN

    ID              shift and go to state 88


state 55

    (98) statement -> ISNPDA LPAREN . ID RPAREN

    ID              shift and go to state 89


state 56

    (99) statement -> IF LPAREN . condition RPAREN LBRACE statement RBRACE ELSE LBRACE statement RBRACE
    (100) statement -> IF LPAREN . condition RPAREN LBRACE statement RBRACE ELSE IF LPAREN condition RPAREN LBRACE statement RBRACE
    (101) statement -> IF LPAREN . condition RPAREN LBRACE statement RBRACE ELSE IF LPAREN condition RPAREN LBRACE statement RBRACE ELSE LBRACE statement RBRACE
    (102) statement -> IF LPAREN . condition RPAREN LBRACE statement RBRACE
    (103) condition -> . CHECKPUMPINGLEMMAREG
    (104) condition -> . CHECKPUMPINGLEMMACFL
    (105) condition -> . ISEQUIVALENT
    (106) condition -> . ISDFA
    (107) condition -> . ISNFA
    (108) condition -> . ISDPDA
    (109) condition -> . ISNPDA

    CHECKPUMPINGLEMMAREG shift and go to state 91
    CHECKPUMPINGLEMMACFL shift and go to state 92
    ISEQUIVALENT    shift and go to state 93
    ISDFA           shift and go to state 94
    ISNFA           shift and go to state 95
    ISDPDA          shift and go to state 96
    ISNPDA          shift and go to state 97

    condition                      shift and go to state 90

state 57

    (8) fa_statement -> FA ID . LPAREN RPAREN LBRACE fa_body RBRACE

    LPAREN          shift and go to state 98


state 58

    (9) pda_statement -> PDA ID . LPAREN RPAREN LBRACE pda_body RBRACE

    LPAREN          shift and go to state 99


state 59

    (32) cfg_statement -> CFG ID . LPAREN RPAREN LBRACE cfg_body RBRACE

    LPAREN          shift and go to state 100


state 60

    (1) statement -> ALPHABET ID EQUALS . LBRACE alphabet_list RBRACE

    LBRACE          shift and go to state 101


state 61

    (4) statement -> STR ID EQUALS . SINGLEQUOTE STRING SINGLEQUOTE

    SINGLEQUOTE     shift and go to state 102


state 62

    (55) statement -> RE ID EQUALS . SINGLEQUOTE REGEX SINGLEQUOTE

    SINGLEQUOTE     shift and go to state 103


state 63

    (72) statement -> MINIMIZE LPAREN ID . RPAREN

    RPAREN          shift and go to state 104


state 64

    (73) statement -> SIMULATE LPAREN ID . COMMA ID RPAREN

    COMMA           shift and go to state 105


state 65

    (74) statement -> VISUALIZE LPAREN ID . RPAREN

    RPAREN          shift and go to state 106


state 66

    (75) statement -> CONCAT LPAREN ID . COMMA ID RPAREN

    COMMA           shift and go to state 107


state 67

    (76) statement -> POWER LPAREN ID . COMMA NUMBER RPAREN

    COMMA           shift and go to state 108


state 68

    (77) statement -> KLEENE LPAREN ID . RPAREN

    RPAREN          shift and go to state 109


state 69

    (78) statement -> CONVERT LPAREN ID . COMMA ID RPAREN

    COMMA           shift and go to state 110


state 70

    (79) statement -> CHECKPUMPINGLEMMAREG LPAREN ID . RPAREN

    RPAREN          shift and go to state 111


state 71

    (80) statement -> CHECKPUMPINGLEMMACFL LPAREN ID . RPAREN

    RPAREN          shift and go to state 112


state 72

    (81) statement -> ISEQUIVALENT LPAREN ID . COMMA ID RPAREN

    COMMA           shift and go to state 113


state 73

    (90) statement -> SHOW LPAREN show_type . RPAREN

    RPAREN          shift and go to state 114


state 74

    (82) show_type -> YES .

    RPAREN          reduce using rule 82 (show_type -> YES .)


state 75

    (83) show_type -> NO .

    RPAREN          reduce using rule 83 (show_type -> NO .)


state 76

    (84) show_type -> REGULAR .

    RPAREN          reduce using rule 84 (show_type -> REGULAR .)


state 77

    (85) show_type -> ISNOTREGULAR .

    RPAREN          reduce using rule 85 (show_type -> ISNOTREGULAR .)


state 78

    (86) show_type -> CFL .

    RPAREN          reduce using rule 86 (show_type -> CFL .)


state 79

    (87) show_type -> ISNOTCFL .

    RPAREN          reduce using rule 87 (show_type -> ISNOTCFL .)


state 80

    (88) show_type -> ACCEPT .

    RPAREN          reduce using rule 88 (show_type -> ACCEPT .)


state 81

    (89) show_type -> REJECT .

    RPAREN          reduce using rule 89 (show_type -> REJECT .)


state 82

    (91) statement -> UNION LPAREN ID . COMMA ID RPAREN

    COMMA           shift and go to state 115


state 83

    (92) statement -> INTERSECT LPAREN ID . COMMA ID RPAREN

    COMMA           shift and go to state 116


state 84

    (93) statement -> COMPLEMENT LPAREN ID . RPAREN

    RPAREN          shift and go to state 117


state 85

    (94) statement -> DIFF LPAREN ID . COMMA ID RPAREN

    COMMA           shift and go to state 118


state 86

    (95) statement -> ISDFA LPAREN ID . RPAREN

    RPAREN          shift and go to state 119


state 87

    (96) statement -> ISNFA LPAREN ID . RPAREN

    RPAREN          shift and go to state 120


state 88

    (97) statement -> ISDPDA LPAREN ID . RPAREN

    RPAREN          shift and go to state 121


state 89

    (98) statement -> ISNPDA LPAREN ID . RPAREN

    RPAREN          shift and go to state 122


state 90

    (99) statement -> IF LPAREN condition . RPAREN LBRACE statement RBRACE ELSE LBRACE statement RBRACE
    (100) statement -> IF LPAREN condition . RPAREN LBRACE statement RBRACE ELSE IF LPAREN condition RPAREN LBRACE statement RBRACE
    (101) statement -> IF LPAREN condition . RPAREN LBRACE statement RBRACE ELSE IF LPAREN condition RPAREN LBRACE statement RBRACE ELSE LBRACE statement RBRACE
    (102) statement -> IF LPAREN condition . RPAREN LBRACE statement RBRACE

    RPAREN          shift and go to state 123


state 91

    (103) condition -> CHECKPUMPINGLEMMAREG .

    RPAREN          reduce using rule 103 (condition -> CHECKPUMPINGLEMMAREG .)


state 92

    (104) condition -> CHECKPUMPINGLEMMACFL .

    RPAREN          reduce using rule 104 (condition -> CHECKPUMPINGLEMMACFL .)


state 93

    (105) condition -> ISEQUIVALENT .

    RPAREN          reduce using rule 105 (condition -> ISEQUIVALENT .)


state 94

    (106) condition -> ISDFA .

    RPAREN          reduce using rule 106 (condition -> ISDFA .)


state 95

    (107) condition -> ISNFA .

    RPAREN          reduce using rule 107 (condition -> ISNFA .)


state 96

    (108) condition -> ISDPDA .

    RPAREN          reduce using rule 108 (condition -> ISDPDA .)


state 97

    (109) condition -> ISNPDA .

    RPAREN          reduce using rule 109 (condition -> ISNPDA .)


state 98

    (8) fa_statement -> FA ID LPAREN . RPAREN LBRACE fa_body RBRACE

    RPAREN          shift and go to state 124


state 99

    (9) pda_statement -> PDA ID LPAREN . RPAREN LBRACE pda_body RBRACE

    RPAREN          shift and go to state 125


state 100

    (32) cfg_statement -> CFG ID LPAREN . RPAREN LBRACE cfg_body RBRACE

    RPAREN          shift and go to state 126


state 101

    (1) statement -> ALPHABET ID EQUALS LBRACE . alphabet_list RBRACE
    (2) alphabet_list -> . ID
    (3) alphabet_list -> . alphabet_list COMMA ID

    ID              shift and go to state 127

    alphabet_list                  shift and go to state 128

state 102

    (4) statement -> STR ID EQUALS SINGLEQUOTE . STRING SINGLEQUOTE

    STRING          shift and go to state 129


state 103

    (55) statement -> RE ID EQUALS SINGLEQUOTE . REGEX SINGLEQUOTE
    (56) REGEX -> . REGEX_CONTENT
    (57) REGEX_CONTENT -> . REGEX_CONTENT REGEX_CHAR
    (58) REGEX_CONTENT -> . REGEX_CHAR
    (59) REGEX_CHAR -> . REGEX_SPECIAL_CHAR
    (60) REGEX_CHAR -> . REGEX_LITERAL_CHAR
    (61) REGEX_SPECIAL_CHAR -> . STAR
    (62) REGEX_SPECIAL_CHAR -> . PLUS
    (63) REGEX_SPECIAL_CHAR -> . OR
    (64) REGEX_SPECIAL_CHAR -> . DOT
    (65) REGEX_SPECIAL_CHAR -> . CARET
    (66) REGEX_SPECIAL_CHAR -> . DOLLAR
    (67) REGEX_SPECIAL_CHAR -> . QUESTION
    (68) REGEX_SPECIAL_CHAR -> . LPAREN
    (69) REGEX_SPECIAL_CHAR -> . RPAREN
    (70) REGEX_SPECIAL_CHAR -> . LBRACE
    (71) REGEX_SPECIAL_CHAR -> . RBRACE

    REGEX_LITERAL_CHAR shift and go to state 134
    STAR            shift and go to state 135
    PLUS            shift and go to state 136
    OR              shift and go to state 137
    DOT             shift and go to state 138
    CARET           shift and go to state 139
    DOLLAR          shift and go to state 140
    QUESTION        shift and go to state 141
    LPAREN          shift and go to state 142
    RPAREN          shift and go to state 143
    LBRACE          shift and go to state 144
    RBRACE          shift and go to state 145

    REGEX                          shift and go to state 130
    REGEX_CONTENT                  shift and go to state 131
    REGEX_CHAR                     shift and go to state 132
    REGEX_SPECIAL_CHAR             shift and go to state 133

state 104

    (72) statement -> MINIMIZE LPAREN ID RPAREN .

    $end            reduce using rule 72 (statement -> MINIMIZE LPAREN ID RPAREN .)
    RBRACE          reduce using rule 72 (statement -> MINIMIZE LPAREN ID RPAREN .)


state 105

    (73) statement -> SIMULATE LPAREN ID COMMA . ID RPAREN

    ID              shift and go to state 146


state 106

    (74) statement -> VISUALIZE LPAREN ID RPAREN .

    $end            reduce using rule 74 (statement -> VISUALIZE LPAREN ID RPAREN .)
    RBRACE          reduce using rule 74 (statement -> VISUALIZE LPAREN ID RPAREN .)


state 107

    (75) statement -> CONCAT LPAREN ID COMMA . ID RPAREN

    ID              shift and go to state 147


state 108

    (76) statement -> POWER LPAREN ID COMMA . NUMBER RPAREN

    NUMBER          shift and go to state 148


state 109

    (77) statement -> KLEENE LPAREN ID RPAREN .

    $end            reduce using rule 77 (statement -> KLEENE LPAREN ID RPAREN .)
    RBRACE          reduce using rule 77 (statement -> KLEENE LPAREN ID RPAREN .)


state 110

    (78) statement -> CONVERT LPAREN ID COMMA . ID RPAREN

    ID              shift and go to state 149


state 111

    (79) statement -> CHECKPUMPINGLEMMAREG LPAREN ID RPAREN .

    $end            reduce using rule 79 (statement -> CHECKPUMPINGLEMMAREG LPAREN ID RPAREN .)
    RBRACE          reduce using rule 79 (statement -> CHECKPUMPINGLEMMAREG LPAREN ID RPAREN .)


state 112

    (80) statement -> CHECKPUMPINGLEMMACFL LPAREN ID RPAREN .

    $end            reduce using rule 80 (statement -> CHECKPUMPINGLEMMACFL LPAREN ID RPAREN .)
    RBRACE          reduce using rule 80 (statement -> CHECKPUMPINGLEMMACFL LPAREN ID RPAREN .)


state 113

    (81) statement -> ISEQUIVALENT LPAREN ID COMMA . ID RPAREN

    ID              shift and go to state 150


state 114

    (90) statement -> SHOW LPAREN show_type RPAREN .

    $end            reduce using rule 90 (statement -> SHOW LPAREN show_type RPAREN .)
    RBRACE          reduce using rule 90 (statement -> SHOW LPAREN show_type RPAREN .)


state 115

    (91) statement -> UNION LPAREN ID COMMA . ID RPAREN

    ID              shift and go to state 151


state 116

    (92) statement -> INTERSECT LPAREN ID COMMA . ID RPAREN

    ID              shift and go to state 152


state 117

    (93) statement -> COMPLEMENT LPAREN ID RPAREN .

    $end            reduce using rule 93 (statement -> COMPLEMENT LPAREN ID RPAREN .)
    RBRACE          reduce using rule 93 (statement -> COMPLEMENT LPAREN ID RPAREN .)


state 118

    (94) statement -> DIFF LPAREN ID COMMA . ID RPAREN

    ID              shift and go to state 153


state 119

    (95) statement -> ISDFA LPAREN ID RPAREN .

    $end            reduce using rule 95 (statement -> ISDFA LPAREN ID RPAREN .)
    RBRACE          reduce using rule 95 (statement -> ISDFA LPAREN ID RPAREN .)


state 120

    (96) statement -> ISNFA LPAREN ID RPAREN .

    $end            reduce using rule 96 (statement -> ISNFA LPAREN ID RPAREN .)
    RBRACE          reduce using rule 96 (statement -> ISNFA LPAREN ID RPAREN .)


state 121

    (97) statement -> ISDPDA LPAREN ID RPAREN .

    $end            reduce using rule 97 (statement -> ISDPDA LPAREN ID RPAREN .)
    RBRACE          reduce using rule 97 (statement -> ISDPDA LPAREN ID RPAREN .)


state 122

    (98) statement -> ISNPDA LPAREN ID RPAREN .

    $end            reduce using rule 98 (statement -> ISNPDA LPAREN ID RPAREN .)
    RBRACE          reduce using rule 98 (statement -> ISNPDA LPAREN ID RPAREN .)


state 123

    (99) statement -> IF LPAREN condition RPAREN . LBRACE statement RBRACE ELSE LBRACE statement RBRACE
    (100) statement -> IF LPAREN condition RPAREN . LBRACE statement RBRACE ELSE IF LPAREN condition RPAREN LBRACE statement RBRACE
    (101) statement -> IF LPAREN condition RPAREN . LBRACE statement RBRACE ELSE IF LPAREN condition RPAREN LBRACE statement RBRACE ELSE LBRACE statement RBRACE
    (102) statement -> IF LPAREN condition RPAREN . LBRACE statement RBRACE

    LBRACE          shift and go to state 154


state 124

    (8) fa_statement -> FA ID LPAREN RPAREN . LBRACE fa_body RBRACE

    LBRACE          shift and go to state 155


state 125

    (9) pda_statement -> PDA ID LPAREN RPAREN . LBRACE pda_body RBRACE

    LBRACE          shift and go to state 156


state 126

    (32) cfg_statement -> CFG ID LPAREN RPAREN . LBRACE cfg_body RBRACE

    LBRACE          shift and go to state 157


state 127

    (2) alphabet_list -> ID .

    RBRACE          reduce using rule 2 (alphabet_list -> ID .)
    COMMA           reduce using rule 2 (alphabet_list -> ID .)


state 128

    (1) statement -> ALPHABET ID EQUALS LBRACE alphabet_list . RBRACE
    (3) alphabet_list -> alphabet_list . COMMA ID

    RBRACE          shift and go to state 158
    COMMA           shift and go to state 159


state 129

    (4) statement -> STR ID EQUALS SINGLEQUOTE STRING . SINGLEQUOTE

    SINGLEQUOTE     shift and go to state 160


state 130

    (55) statement -> RE ID EQUALS SINGLEQUOTE REGEX . SINGLEQUOTE

    SINGLEQUOTE     shift and go to state 161


state 131

    (56) REGEX -> REGEX_CONTENT .
    (57) REGEX_CONTENT -> REGEX_CONTENT . REGEX_CHAR
    (59) REGEX_CHAR -> . REGEX_SPECIAL_CHAR
    (60) REGEX_CHAR -> . REGEX_LITERAL_CHAR
    (61) REGEX_SPECIAL_CHAR -> . STAR
    (62) REGEX_SPECIAL_CHAR -> . PLUS
    (63) REGEX_SPECIAL_CHAR -> . OR
    (64) REGEX_SPECIAL_CHAR -> . DOT
    (65) REGEX_SPECIAL_CHAR -> . CARET
    (66) REGEX_SPECIAL_CHAR -> . DOLLAR
    (67) REGEX_SPECIAL_CHAR -> . QUESTION
    (68) REGEX_SPECIAL_CHAR -> . LPAREN
    (69) REGEX_SPECIAL_CHAR -> . RPAREN
    (70) REGEX_SPECIAL_CHAR -> . LBRACE
    (71) REGEX_SPECIAL_CHAR -> . RBRACE

    SINGLEQUOTE     reduce using rule 56 (REGEX -> REGEX_CONTENT .)
    REGEX_LITERAL_CHAR shift and go to state 134
    STAR            shift and go to state 135
    PLUS            shift and go to state 136
    OR              shift and go to state 137
    DOT             shift and go to state 138
    CARET           shift and go to state 139
    DOLLAR          shift and go to state 140
    QUESTION        shift and go to state 141
    LPAREN          shift and go to state 142
    RPAREN          shift and go to state 143
    LBRACE          shift and go to state 144
    RBRACE          shift and go to state 145

    REGEX_CHAR                     shift and go to state 162
    REGEX_SPECIAL_CHAR             shift and go to state 133

state 132

    (58) REGEX_CONTENT -> REGEX_CHAR .

    REGEX_LITERAL_CHAR reduce using rule 58 (REGEX_CONTENT -> REGEX_CHAR .)
    STAR            reduce using rule 58 (REGEX_CONTENT -> REGEX_CHAR .)
    PLUS            reduce using rule 58 (REGEX_CONTENT -> REGEX_CHAR .)
    OR              reduce using rule 58 (REGEX_CONTENT -> REGEX_CHAR .)
    DOT             reduce using rule 58 (REGEX_CONTENT -> REGEX_CHAR .)
    CARET           reduce using rule 58 (REGEX_CONTENT -> REGEX_CHAR .)
    DOLLAR          reduce using rule 58 (REGEX_CONTENT -> REGEX_CHAR .)
    QUESTION        reduce using rule 58 (REGEX_CONTENT -> REGEX_CHAR .)
    LPAREN          reduce using rule 58 (REGEX_CONTENT -> REGEX_CHAR .)
    RPAREN          reduce using rule 58 (REGEX_CONTENT -> REGEX_CHAR .)
    LBRACE          reduce using rule 58 (REGEX_CONTENT -> REGEX_CHAR .)
    RBRACE          reduce using rule 58 (REGEX_CONTENT -> REGEX_CHAR .)
    SINGLEQUOTE     reduce using rule 58 (REGEX_CONTENT -> REGEX_CHAR .)


state 133

    (59) REGEX_CHAR -> REGEX_SPECIAL_CHAR .

    REGEX_LITERAL_CHAR reduce using rule 59 (REGEX_CHAR -> REGEX_SPECIAL_CHAR .)
    STAR            reduce using rule 59 (REGEX_CHAR -> REGEX_SPECIAL_CHAR .)
    PLUS            reduce using rule 59 (REGEX_CHAR -> REGEX_SPECIAL_CHAR .)
    OR              reduce using rule 59 (REGEX_CHAR -> REGEX_SPECIAL_CHAR .)
    DOT             reduce using rule 59 (REGEX_CHAR -> REGEX_SPECIAL_CHAR .)
    CARET           reduce using rule 59 (REGEX_CHAR -> REGEX_SPECIAL_CHAR .)
    DOLLAR          reduce using rule 59 (REGEX_CHAR -> REGEX_SPECIAL_CHAR .)
    QUESTION        reduce using rule 59 (REGEX_CHAR -> REGEX_SPECIAL_CHAR .)
    LPAREN          reduce using rule 59 (REGEX_CHAR -> REGEX_SPECIAL_CHAR .)
    RPAREN          reduce using rule 59 (REGEX_CHAR -> REGEX_SPECIAL_CHAR .)
    LBRACE          reduce using rule 59 (REGEX_CHAR -> REGEX_SPECIAL_CHAR .)
    RBRACE          reduce using rule 59 (REGEX_CHAR -> REGEX_SPECIAL_CHAR .)
    SINGLEQUOTE     reduce using rule 59 (REGEX_CHAR -> REGEX_SPECIAL_CHAR .)


state 134

    (60) REGEX_CHAR -> REGEX_LITERAL_CHAR .

    REGEX_LITERAL_CHAR reduce using rule 60 (REGEX_CHAR -> REGEX_LITERAL_CHAR .)
    STAR            reduce using rule 60 (REGEX_CHAR -> REGEX_LITERAL_CHAR .)
    PLUS            reduce using rule 60 (REGEX_CHAR -> REGEX_LITERAL_CHAR .)
    OR              reduce using rule 60 (REGEX_CHAR -> REGEX_LITERAL_CHAR .)
    DOT             reduce using rule 60 (REGEX_CHAR -> REGEX_LITERAL_CHAR .)
    CARET           reduce using rule 60 (REGEX_CHAR -> REGEX_LITERAL_CHAR .)
    DOLLAR          reduce using rule 60 (REGEX_CHAR -> REGEX_LITERAL_CHAR .)
    QUESTION        reduce using rule 60 (REGEX_CHAR -> REGEX_LITERAL_CHAR .)
    LPAREN          reduce using rule 60 (REGEX_CHAR -> REGEX_LITERAL_CHAR .)
    RPAREN          reduce using rule 60 (REGEX_CHAR -> REGEX_LITERAL_CHAR .)
    LBRACE          reduce using rule 60 (REGEX_CHAR -> REGEX_LITERAL_CHAR .)
    RBRACE          reduce using rule 60 (REGEX_CHAR -> REGEX_LITERAL_CHAR .)
    SINGLEQUOTE     reduce using rule 60 (REGEX_CHAR -> REGEX_LITERAL_CHAR .)


state 135

    (61) REGEX_SPECIAL_CHAR -> STAR .

    REGEX_LITERAL_CHAR reduce using rule 61 (REGEX_SPECIAL_CHAR -> STAR .)
    STAR            reduce using rule 61 (REGEX_SPECIAL_CHAR -> STAR .)
    PLUS            reduce using rule 61 (REGEX_SPECIAL_CHAR -> STAR .)
    OR              reduce using rule 61 (REGEX_SPECIAL_CHAR -> STAR .)
    DOT             reduce using rule 61 (REGEX_SPECIAL_CHAR -> STAR .)
    CARET           reduce using rule 61 (REGEX_SPECIAL_CHAR -> STAR .)
    DOLLAR          reduce using rule 61 (REGEX_SPECIAL_CHAR -> STAR .)
    QUESTION        reduce using rule 61 (REGEX_SPECIAL_CHAR -> STAR .)
    LPAREN          reduce using rule 61 (REGEX_SPECIAL_CHAR -> STAR .)
    RPAREN          reduce using rule 61 (REGEX_SPECIAL_CHAR -> STAR .)
    LBRACE          reduce using rule 61 (REGEX_SPECIAL_CHAR -> STAR .)
    RBRACE          reduce using rule 61 (REGEX_SPECIAL_CHAR -> STAR .)
    SINGLEQUOTE     reduce using rule 61 (REGEX_SPECIAL_CHAR -> STAR .)


state 136

    (62) REGEX_SPECIAL_CHAR -> PLUS .

    REGEX_LITERAL_CHAR reduce using rule 62 (REGEX_SPECIAL_CHAR -> PLUS .)
    STAR            reduce using rule 62 (REGEX_SPECIAL_CHAR -> PLUS .)
    PLUS            reduce using rule 62 (REGEX_SPECIAL_CHAR -> PLUS .)
    OR              reduce using rule 62 (REGEX_SPECIAL_CHAR -> PLUS .)
    DOT             reduce using rule 62 (REGEX_SPECIAL_CHAR -> PLUS .)
    CARET           reduce using rule 62 (REGEX_SPECIAL_CHAR -> PLUS .)
    DOLLAR          reduce using rule 62 (REGEX_SPECIAL_CHAR -> PLUS .)
    QUESTION        reduce using rule 62 (REGEX_SPECIAL_CHAR -> PLUS .)
    LPAREN          reduce using rule 62 (REGEX_SPECIAL_CHAR -> PLUS .)
    RPAREN          reduce using rule 62 (REGEX_SPECIAL_CHAR -> PLUS .)
    LBRACE          reduce using rule 62 (REGEX_SPECIAL_CHAR -> PLUS .)
    RBRACE          reduce using rule 62 (REGEX_SPECIAL_CHAR -> PLUS .)
    SINGLEQUOTE     reduce using rule 62 (REGEX_SPECIAL_CHAR -> PLUS .)


state 137

    (63) REGEX_SPECIAL_CHAR -> OR .

    REGEX_LITERAL_CHAR reduce using rule 63 (REGEX_SPECIAL_CHAR -> OR .)
    STAR            reduce using rule 63 (REGEX_SPECIAL_CHAR -> OR .)
    PLUS            reduce using rule 63 (REGEX_SPECIAL_CHAR -> OR .)
    OR              reduce using rule 63 (REGEX_SPECIAL_CHAR -> OR .)
    DOT             reduce using rule 63 (REGEX_SPECIAL_CHAR -> OR .)
    CARET           reduce using rule 63 (REGEX_SPECIAL_CHAR -> OR .)
    DOLLAR          reduce using rule 63 (REGEX_SPECIAL_CHAR -> OR .)
    QUESTION        reduce using rule 63 (REGEX_SPECIAL_CHAR -> OR .)
    LPAREN          reduce using rule 63 (REGEX_SPECIAL_CHAR -> OR .)
    RPAREN          reduce using rule 63 (REGEX_SPECIAL_CHAR -> OR .)
    LBRACE          reduce using rule 63 (REGEX_SPECIAL_CHAR -> OR .)
    RBRACE          reduce using rule 63 (REGEX_SPECIAL_CHAR -> OR .)
    SINGLEQUOTE     reduce using rule 63 (REGEX_SPECIAL_CHAR -> OR .)


state 138

    (64) REGEX_SPECIAL_CHAR -> DOT .

    REGEX_LITERAL_CHAR reduce using rule 64 (REGEX_SPECIAL_CHAR -> DOT .)
    STAR            reduce using rule 64 (REGEX_SPECIAL_CHAR -> DOT .)
    PLUS            reduce using rule 64 (REGEX_SPECIAL_CHAR -> DOT .)
    OR              reduce using rule 64 (REGEX_SPECIAL_CHAR -> DOT .)
    DOT             reduce using rule 64 (REGEX_SPECIAL_CHAR -> DOT .)
    CARET           reduce using rule 64 (REGEX_SPECIAL_CHAR -> DOT .)
    DOLLAR          reduce using rule 64 (REGEX_SPECIAL_CHAR -> DOT .)
    QUESTION        reduce using rule 64 (REGEX_SPECIAL_CHAR -> DOT .)
    LPAREN          reduce using rule 64 (REGEX_SPECIAL_CHAR -> DOT .)
    RPAREN          reduce using rule 64 (REGEX_SPECIAL_CHAR -> DOT .)
    LBRACE          reduce using rule 64 (REGEX_SPECIAL_CHAR -> DOT .)
    RBRACE          reduce using rule 64 (REGEX_SPECIAL_CHAR -> DOT .)
    SINGLEQUOTE     reduce using rule 64 (REGEX_SPECIAL_CHAR -> DOT .)


state 139

    (65) REGEX_SPECIAL_CHAR -> CARET .

    REGEX_LITERAL_CHAR reduce using rule 65 (REGEX_SPECIAL_CHAR -> CARET .)
    STAR            reduce using rule 65 (REGEX_SPECIAL_CHAR -> CARET .)
    PLUS            reduce using rule 65 (REGEX_SPECIAL_CHAR -> CARET .)
    OR              reduce using rule 65 (REGEX_SPECIAL_CHAR -> CARET .)
    DOT             reduce using rule 65 (REGEX_SPECIAL_CHAR -> CARET .)
    CARET           reduce using rule 65 (REGEX_SPECIAL_CHAR -> CARET .)
    DOLLAR          reduce using rule 65 (REGEX_SPECIAL_CHAR -> CARET .)
    QUESTION        reduce using rule 65 (REGEX_SPECIAL_CHAR -> CARET .)
    LPAREN          reduce using rule 65 (REGEX_SPECIAL_CHAR -> CARET .)
    RPAREN          reduce using rule 65 (REGEX_SPECIAL_CHAR -> CARET .)
    LBRACE          reduce using rule 65 (REGEX_SPECIAL_CHAR -> CARET .)
    RBRACE          reduce using rule 65 (REGEX_SPECIAL_CHAR -> CARET .)
    SINGLEQUOTE     reduce using rule 65 (REGEX_SPECIAL_CHAR -> CARET .)


state 140

    (66) REGEX_SPECIAL_CHAR -> DOLLAR .

    REGEX_LITERAL_CHAR reduce using rule 66 (REGEX_SPECIAL_CHAR -> DOLLAR .)
    STAR            reduce using rule 66 (REGEX_SPECIAL_CHAR -> DOLLAR .)
    PLUS            reduce using rule 66 (REGEX_SPECIAL_CHAR -> DOLLAR .)
    OR              reduce using rule 66 (REGEX_SPECIAL_CHAR -> DOLLAR .)
    DOT             reduce using rule 66 (REGEX_SPECIAL_CHAR -> DOLLAR .)
    CARET           reduce using rule 66 (REGEX_SPECIAL_CHAR -> DOLLAR .)
    DOLLAR          reduce using rule 66 (REGEX_SPECIAL_CHAR -> DOLLAR .)
    QUESTION        reduce using rule 66 (REGEX_SPECIAL_CHAR -> DOLLAR .)
    LPAREN          reduce using rule 66 (REGEX_SPECIAL_CHAR -> DOLLAR .)
    RPAREN          reduce using rule 66 (REGEX_SPECIAL_CHAR -> DOLLAR .)
    LBRACE          reduce using rule 66 (REGEX_SPECIAL_CHAR -> DOLLAR .)
    RBRACE          reduce using rule 66 (REGEX_SPECIAL_CHAR -> DOLLAR .)
    SINGLEQUOTE     reduce using rule 66 (REGEX_SPECIAL_CHAR -> DOLLAR .)


state 141

    (67) REGEX_SPECIAL_CHAR -> QUESTION .

    REGEX_LITERAL_CHAR reduce using rule 67 (REGEX_SPECIAL_CHAR -> QUESTION .)
    STAR            reduce using rule 67 (REGEX_SPECIAL_CHAR -> QUESTION .)
    PLUS            reduce using rule 67 (REGEX_SPECIAL_CHAR -> QUESTION .)
    OR              reduce using rule 67 (REGEX_SPECIAL_CHAR -> QUESTION .)
    DOT             reduce using rule 67 (REGEX_SPECIAL_CHAR -> QUESTION .)
    CARET           reduce using rule 67 (REGEX_SPECIAL_CHAR -> QUESTION .)
    DOLLAR          reduce using rule 67 (REGEX_SPECIAL_CHAR -> QUESTION .)
    QUESTION        reduce using rule 67 (REGEX_SPECIAL_CHAR -> QUESTION .)
    LPAREN          reduce using rule 67 (REGEX_SPECIAL_CHAR -> QUESTION .)
    RPAREN          reduce using rule 67 (REGEX_SPECIAL_CHAR -> QUESTION .)
    LBRACE          reduce using rule 67 (REGEX_SPECIAL_CHAR -> QUESTION .)
    RBRACE          reduce using rule 67 (REGEX_SPECIAL_CHAR -> QUESTION .)
    SINGLEQUOTE     reduce using rule 67 (REGEX_SPECIAL_CHAR -> QUESTION .)


state 142

    (68) REGEX_SPECIAL_CHAR -> LPAREN .

    REGEX_LITERAL_CHAR reduce using rule 68 (REGEX_SPECIAL_CHAR -> LPAREN .)
    STAR            reduce using rule 68 (REGEX_SPECIAL_CHAR -> LPAREN .)
    PLUS            reduce using rule 68 (REGEX_SPECIAL_CHAR -> LPAREN .)
    OR              reduce using rule 68 (REGEX_SPECIAL_CHAR -> LPAREN .)
    DOT             reduce using rule 68 (REGEX_SPECIAL_CHAR -> LPAREN .)
    CARET           reduce using rule 68 (REGEX_SPECIAL_CHAR -> LPAREN .)
    DOLLAR          reduce using rule 68 (REGEX_SPECIAL_CHAR -> LPAREN .)
    QUESTION        reduce using rule 68 (REGEX_SPECIAL_CHAR -> LPAREN .)
    LPAREN          reduce using rule 68 (REGEX_SPECIAL_CHAR -> LPAREN .)
    RPAREN          reduce using rule 68 (REGEX_SPECIAL_CHAR -> LPAREN .)
    LBRACE          reduce using rule 68 (REGEX_SPECIAL_CHAR -> LPAREN .)
    RBRACE          reduce using rule 68 (REGEX_SPECIAL_CHAR -> LPAREN .)
    SINGLEQUOTE     reduce using rule 68 (REGEX_SPECIAL_CHAR -> LPAREN .)


state 143

    (69) REGEX_SPECIAL_CHAR -> RPAREN .

    REGEX_LITERAL_CHAR reduce using rule 69 (REGEX_SPECIAL_CHAR -> RPAREN .)
    STAR            reduce using rule 69 (REGEX_SPECIAL_CHAR -> RPAREN .)
    PLUS            reduce using rule 69 (REGEX_SPECIAL_CHAR -> RPAREN .)
    OR              reduce using rule 69 (REGEX_SPECIAL_CHAR -> RPAREN .)
    DOT             reduce using rule 69 (REGEX_SPECIAL_CHAR -> RPAREN .)
    CARET           reduce using rule 69 (REGEX_SPECIAL_CHAR -> RPAREN .)
    DOLLAR          reduce using rule 69 (REGEX_SPECIAL_CHAR -> RPAREN .)
    QUESTION        reduce using rule 69 (REGEX_SPECIAL_CHAR -> RPAREN .)
    LPAREN          reduce using rule 69 (REGEX_SPECIAL_CHAR -> RPAREN .)
    RPAREN          reduce using rule 69 (REGEX_SPECIAL_CHAR -> RPAREN .)
    LBRACE          reduce using rule 69 (REGEX_SPECIAL_CHAR -> RPAREN .)
    RBRACE          reduce using rule 69 (REGEX_SPECIAL_CHAR -> RPAREN .)
    SINGLEQUOTE     reduce using rule 69 (REGEX_SPECIAL_CHAR -> RPAREN .)


state 144

    (70) REGEX_SPECIAL_CHAR -> LBRACE .

    REGEX_LITERAL_CHAR reduce using rule 70 (REGEX_SPECIAL_CHAR -> LBRACE .)
    STAR            reduce using rule 70 (REGEX_SPECIAL_CHAR -> LBRACE .)
    PLUS            reduce using rule 70 (REGEX_SPECIAL_CHAR -> LBRACE .)
    OR              reduce using rule 70 (REGEX_SPECIAL_CHAR -> LBRACE .)
    DOT             reduce using rule 70 (REGEX_SPECIAL_CHAR -> LBRACE .)
    CARET           reduce using rule 70 (REGEX_SPECIAL_CHAR -> LBRACE .)
    DOLLAR          reduce using rule 70 (REGEX_SPECIAL_CHAR -> LBRACE .)
    QUESTION        reduce using rule 70 (REGEX_SPECIAL_CHAR -> LBRACE .)
    LPAREN          reduce using rule 70 (REGEX_SPECIAL_CHAR -> LBRACE .)
    RPAREN          reduce using rule 70 (REGEX_SPECIAL_CHAR -> LBRACE .)
    LBRACE          reduce using rule 70 (REGEX_SPECIAL_CHAR -> LBRACE .)
    RBRACE          reduce using rule 70 (REGEX_SPECIAL_CHAR -> LBRACE .)
    SINGLEQUOTE     reduce using rule 70 (REGEX_SPECIAL_CHAR -> LBRACE .)


state 145

    (71) REGEX_SPECIAL_CHAR -> RBRACE .

    REGEX_LITERAL_CHAR reduce using rule 71 (REGEX_SPECIAL_CHAR -> RBRACE .)
    STAR            reduce using rule 71 (REGEX_SPECIAL_CHAR -> RBRACE .)
    PLUS            reduce using rule 71 (REGEX_SPECIAL_CHAR -> RBRACE .)
    OR              reduce using rule 71 (REGEX_SPECIAL_CHAR -> RBRACE .)
    DOT             reduce using rule 71 (REGEX_SPECIAL_CHAR -> RBRACE .)
    CARET           reduce using rule 71 (REGEX_SPECIAL_CHAR -> RBRACE .)
    DOLLAR          reduce using rule 71 (REGEX_SPECIAL_CHAR -> RBRACE .)
    QUESTION        reduce using rule 71 (REGEX_SPECIAL_CHAR -> RBRACE .)
    LPAREN          reduce using rule 71 (REGEX_SPECIAL_CHAR -> RBRACE .)
    RPAREN          reduce using rule 71 (REGEX_SPECIAL_CHAR -> RBRACE .)
    LBRACE          reduce using rule 71 (REGEX_SPECIAL_CHAR -> RBRACE .)
    RBRACE          reduce using rule 71 (REGEX_SPECIAL_CHAR -> RBRACE .)
    SINGLEQUOTE     reduce using rule 71 (REGEX_SPECIAL_CHAR -> RBRACE .)


state 146

    (73) statement -> SIMULATE LPAREN ID COMMA ID . RPAREN

    RPAREN          shift and go to state 163


state 147

    (75) statement -> CONCAT LPAREN ID COMMA ID . RPAREN

    RPAREN          shift and go to state 164


state 148

    (76) statement -> POWER LPAREN ID COMMA NUMBER . RPAREN

    RPAREN          shift and go to state 165


state 149

    (78) statement -> CONVERT LPAREN ID COMMA ID . RPAREN

    RPAREN          shift and go to state 166


state 150

    (81) statement -> ISEQUIVALENT LPAREN ID COMMA ID . RPAREN

    RPAREN          shift and go to state 167


state 151

    (91) statement -> UNION LPAREN ID COMMA ID . RPAREN

    RPAREN          shift and go to state 168


state 152

    (92) statement -> INTERSECT LPAREN ID COMMA ID . RPAREN

    RPAREN          shift and go to state 169


state 153

    (94) statement -> DIFF LPAREN ID COMMA ID . RPAREN

    RPAREN          shift and go to state 170


state 154

    (99) statement -> IF LPAREN condition RPAREN LBRACE . statement RBRACE ELSE LBRACE statement RBRACE
    (100) statement -> IF LPAREN condition RPAREN LBRACE . statement RBRACE ELSE IF LPAREN condition RPAREN LBRACE statement RBRACE
    (101) statement -> IF LPAREN condition RPAREN LBRACE . statement RBRACE ELSE IF LPAREN condition RPAREN LBRACE statement RBRACE ELSE LBRACE statement RBRACE
    (102) statement -> IF LPAREN condition RPAREN LBRACE . statement RBRACE
    (1) statement -> . ALPHABET ID EQUALS LBRACE alphabet_list RBRACE
    (4) statement -> . STR ID EQUALS SINGLEQUOTE STRING SINGLEQUOTE
    (5) statement -> . fa_statement
    (6) statement -> . pda_statement
    (7) statement -> . cfg_statement
    (55) statement -> . RE ID EQUALS SINGLEQUOTE REGEX SINGLEQUOTE
    (72) statement -> . MINIMIZE LPAREN ID RPAREN
    (73) statement -> . SIMULATE LPAREN ID COMMA ID RPAREN
    (74) statement -> . VISUALIZE LPAREN ID RPAREN
    (75) statement -> . CONCAT LPAREN ID COMMA ID RPAREN
    (76) statement -> . POWER LPAREN ID COMMA NUMBER RPAREN
    (77) statement -> . KLEENE LPAREN ID RPAREN
    (78) statement -> . CONVERT LPAREN ID COMMA ID RPAREN
    (79) statement -> . CHECKPUMPINGLEMMAREG LPAREN ID RPAREN
    (80) statement -> . CHECKPUMPINGLEMMACFL LPAREN ID RPAREN
    (81) statement -> . ISEQUIVALENT LPAREN ID COMMA ID RPAREN
    (90) statement -> . SHOW LPAREN show_type RPAREN
    (91) statement -> . UNION LPAREN ID COMMA ID RPAREN
    (92) statement -> . INTERSECT LPAREN ID COMMA ID RPAREN
    (93) statement -> . COMPLEMENT LPAREN ID RPAREN
    (94) statement -> . DIFF LPAREN ID COMMA ID RPAREN
    (95) statement -> . ISDFA LPAREN ID RPAREN
    (96) statement -> . ISNFA LPAREN ID RPAREN
    (97) statement -> . ISDPDA LPAREN ID RPAREN
    (98) statement -> . ISNPDA LPAREN ID RPAREN
    (99) statement -> . IF LPAREN condition RPAREN LBRACE statement RBRACE ELSE LBRACE statement RBRACE
    (100) statement -> . IF LPAREN condition RPAREN LBRACE statement RBRACE ELSE IF LPAREN condition RPAREN LBRACE statement RBRACE
    (101) statement -> . IF LPAREN condition RPAREN LBRACE statement RBRACE ELSE IF LPAREN condition RPAREN LBRACE statement RBRACE ELSE LBRACE statement RBRACE
    (102) statement -> . IF LPAREN condition RPAREN LBRACE statement RBRACE
    (110) statement -> . SLCOMMENT
    (111) statement -> . MLCOMMENT
    (112) statement -> . DOCCOMMENT
    (8) fa_statement -> . FA ID LPAREN RPAREN LBRACE fa_body RBRACE
    (9) pda_statement -> . PDA ID LPAREN RPAREN LBRACE pda_body RBRACE
    (32) cfg_statement -> . CFG ID LPAREN RPAREN LBRACE cfg_body RBRACE

    ALPHABET        shift and go to state 2
    STR             shift and go to state 3
    RE              shift and go to state 7
    MINIMIZE        shift and go to state 8
    SIMULATE        shift and go to state 9
    VISUALIZE       shift and go to state 10
    CONCAT          shift and go to state 11
    POWER           shift and go to state 12
    KLEENE          shift and go to state 13
    CONVERT         shift and go to state 14
    CHECKPUMPINGLEMMAREG shift and go to state 15
    CHECKPUMPINGLEMMACFL shift and go to state 16
    ISEQUIVALENT    shift and go to state 17
    SHOW            shift and go to state 18
    UNION           shift and go to state 19
    INTERSECT       shift and go to state 20
    COMPLEMENT      shift and go to state 21
    DIFF            shift and go to state 22
    ISDFA           shift and go to state 23
    ISNFA           shift and go to state 24
    ISDPDA          shift and go to state 25
    ISNPDA          shift and go to state 26
    IF              shift and go to state 27
    SLCOMMENT       shift and go to state 28
    MLCOMMENT       shift and go to state 29
    DOCCOMMENT      shift and go to state 30
    FA              shift and go to state 31
    PDA             shift and go to state 32
    CFG             shift and go to state 33

    statement                      shift and go to state 171
    fa_statement                   shift and go to state 4
    pda_statement                  shift and go to state 5
    cfg_statement                  shift and go to state 6

state 155

    (8) fa_statement -> FA ID LPAREN RPAREN LBRACE . fa_body RBRACE
    (10) fa_body -> . states
    (11) fa_body -> . initial
    (12) fa_body -> . final
    (13) fa_body -> . transitions
    (14) states -> . STATES COLON LBRACE states_list RBRACE
    (17) initial -> . INITIAL COLON LBRACE ID RBRACE
    (18) final -> . FINAL COLON LBRACE final_list RBRACE
    (21) transitions -> . TRANSITIONS COLON LBRACE transitions_list RBRACE

    STATES          shift and go to state 177
    INITIAL         shift and go to state 178
    FINAL           shift and go to state 179
    TRANSITIONS     shift and go to state 180

    fa_body                        shift and go to state 172
    states                         shift and go to state 173
    initial                        shift and go to state 174
    final                          shift and go to state 175
    transitions                    shift and go to state 176

state 156

    (9) pda_statement -> PDA ID LPAREN RPAREN LBRACE . pda_body RBRACE
    (26) pda_body -> . states
    (27) pda_body -> . initial
    (28) pda_body -> . stack_init
    (29) pda_body -> . final
    (30) pda_body -> . transitions
    (14) states -> . STATES COLON LBRACE states_list RBRACE
    (17) initial -> . INITIAL COLON LBRACE ID RBRACE
    (31) stack_init -> . STACK_INIT COLON ID
    (18) final -> . FINAL COLON LBRACE final_list RBRACE
    (21) transitions -> . TRANSITIONS COLON LBRACE transitions_list RBRACE

    STATES          shift and go to state 177
    INITIAL         shift and go to state 178
    STACK_INIT      shift and go to state 187
    FINAL           shift and go to state 179
    TRANSITIONS     shift and go to state 180

    pda_body                       shift and go to state 181
    states                         shift and go to state 182
    initial                        shift and go to state 183
    stack_init                     shift and go to state 184
    final                          shift and go to state 185
    transitions                    shift and go to state 186

state 157

    (32) cfg_statement -> CFG ID LPAREN RPAREN LBRACE . cfg_body RBRACE
    (33) cfg_body -> . nonterminals_statement
    (34) cfg_body -> . terminals_statement
    (35) cfg_body -> . start_statement
    (36) cfg_body -> . rules_statement
    (37) cfg_body -> . cfg_body nonterminals_statement
    (38) cfg_body -> . cfg_body terminals_statement
    (39) cfg_body -> . cfg_body start_statement
    (40) cfg_body -> . cfg_body rules_statement
    (41) nonterminals_statement -> . NONTERMINALS COLON LBRACE nonterminals_list RBRACE
    (44) terminals_statement -> . TERMINALS COLON LBRACE terminals_list RBRACE
    (47) start_statement -> . START COLON ID
    (48) rules_statement -> . RULES COLON LBRACE rules_list RBRACE

    NONTERMINALS    shift and go to state 193
    TERMINALS       shift and go to state 194
    START           shift and go to state 195
    RULES           shift and go to state 196

    cfg_body                       shift and go to state 188
    nonterminals_statement         shift and go to state 189
    terminals_statement            shift and go to state 190
    start_statement                shift and go to state 191
    rules_statement                shift and go to state 192

state 158

    (1) statement -> ALPHABET ID EQUALS LBRACE alphabet_list RBRACE .

    $end            reduce using rule 1 (statement -> ALPHABET ID EQUALS LBRACE alphabet_list RBRACE .)
    RBRACE          reduce using rule 1 (statement -> ALPHABET ID EQUALS LBRACE alphabet_list RBRACE .)


state 159

    (3) alphabet_list -> alphabet_list COMMA . ID

    ID              shift and go to state 197


state 160

    (4) statement -> STR ID EQUALS SINGLEQUOTE STRING SINGLEQUOTE .

    $end            reduce using rule 4 (statement -> STR ID EQUALS SINGLEQUOTE STRING SINGLEQUOTE .)
    RBRACE          reduce using rule 4 (statement -> STR ID EQUALS SINGLEQUOTE STRING SINGLEQUOTE .)


state 161

    (55) statement -> RE ID EQUALS SINGLEQUOTE REGEX SINGLEQUOTE .

    $end            reduce using rule 55 (statement -> RE ID EQUALS SINGLEQUOTE REGEX SINGLEQUOTE .)
    RBRACE          reduce using rule 55 (statement -> RE ID EQUALS SINGLEQUOTE REGEX SINGLEQUOTE .)


state 162

    (57) REGEX_CONTENT -> REGEX_CONTENT REGEX_CHAR .

    REGEX_LITERAL_CHAR reduce using rule 57 (REGEX_CONTENT -> REGEX_CONTENT REGEX_CHAR .)
    STAR            reduce using rule 57 (REGEX_CONTENT -> REGEX_CONTENT REGEX_CHAR .)
    PLUS            reduce using rule 57 (REGEX_CONTENT -> REGEX_CONTENT REGEX_CHAR .)
    OR              reduce using rule 57 (REGEX_CONTENT -> REGEX_CONTENT REGEX_CHAR .)
    DOT             reduce using rule 57 (REGEX_CONTENT -> REGEX_CONTENT REGEX_CHAR .)
    CARET           reduce using rule 57 (REGEX_CONTENT -> REGEX_CONTENT REGEX_CHAR .)
    DOLLAR          reduce using rule 57 (REGEX_CONTENT -> REGEX_CONTENT REGEX_CHAR .)
    QUESTION        reduce using rule 57 (REGEX_CONTENT -> REGEX_CONTENT REGEX_CHAR .)
    LPAREN          reduce using rule 57 (REGEX_CONTENT -> REGEX_CONTENT REGEX_CHAR .)
    RPAREN          reduce using rule 57 (REGEX_CONTENT -> REGEX_CONTENT REGEX_CHAR .)
    LBRACE          reduce using rule 57 (REGEX_CONTENT -> REGEX_CONTENT REGEX_CHAR .)
    RBRACE          reduce using rule 57 (REGEX_CONTENT -> REGEX_CONTENT REGEX_CHAR .)
    SINGLEQUOTE     reduce using rule 57 (REGEX_CONTENT -> REGEX_CONTENT REGEX_CHAR .)


state 163

    (73) statement -> SIMULATE LPAREN ID COMMA ID RPAREN .

    $end            reduce using rule 73 (statement -> SIMULATE LPAREN ID COMMA ID RPAREN .)
    RBRACE          reduce using rule 73 (statement -> SIMULATE LPAREN ID COMMA ID RPAREN .)


state 164

    (75) statement -> CONCAT LPAREN ID COMMA ID RPAREN .

    $end            reduce using rule 75 (statement -> CONCAT LPAREN ID COMMA ID RPAREN .)
    RBRACE          reduce using rule 75 (statement -> CONCAT LPAREN ID COMMA ID RPAREN .)


state 165

    (76) statement -> POWER LPAREN ID COMMA NUMBER RPAREN .

    $end            reduce using rule 76 (statement -> POWER LPAREN ID COMMA NUMBER RPAREN .)
    RBRACE          reduce using rule 76 (statement -> POWER LPAREN ID COMMA NUMBER RPAREN .)


state 166

    (78) statement -> CONVERT LPAREN ID COMMA ID RPAREN .

    $end            reduce using rule 78 (statement -> CONVERT LPAREN ID COMMA ID RPAREN .)
    RBRACE          reduce using rule 78 (statement -> CONVERT LPAREN ID COMMA ID RPAREN .)


state 167

    (81) statement -> ISEQUIVALENT LPAREN ID COMMA ID RPAREN .

    $end            reduce using rule 81 (statement -> ISEQUIVALENT LPAREN ID COMMA ID RPAREN .)
    RBRACE          reduce using rule 81 (statement -> ISEQUIVALENT LPAREN ID COMMA ID RPAREN .)


state 168

    (91) statement -> UNION LPAREN ID COMMA ID RPAREN .

    $end            reduce using rule 91 (statement -> UNION LPAREN ID COMMA ID RPAREN .)
    RBRACE          reduce using rule 91 (statement -> UNION LPAREN ID COMMA ID RPAREN .)


state 169

    (92) statement -> INTERSECT LPAREN ID COMMA ID RPAREN .

    $end            reduce using rule 92 (statement -> INTERSECT LPAREN ID COMMA ID RPAREN .)
    RBRACE          reduce using rule 92 (statement -> INTERSECT LPAREN ID COMMA ID RPAREN .)


state 170

    (94) statement -> DIFF LPAREN ID COMMA ID RPAREN .

    $end            reduce using rule 94 (statement -> DIFF LPAREN ID COMMA ID RPAREN .)
    RBRACE          reduce using rule 94 (statement -> DIFF LPAREN ID COMMA ID RPAREN .)


state 171

    (99) statement -> IF LPAREN condition RPAREN LBRACE statement . RBRACE ELSE LBRACE statement RBRACE
    (100) statement -> IF LPAREN condition RPAREN LBRACE statement . RBRACE ELSE IF LPAREN condition RPAREN LBRACE statement RBRACE
    (101) statement -> IF LPAREN condition RPAREN LBRACE statement . RBRACE ELSE IF LPAREN condition RPAREN LBRACE statement RBRACE ELSE LBRACE statement RBRACE
    (102) statement -> IF LPAREN condition RPAREN LBRACE statement . RBRACE

    RBRACE          shift and go to state 198


state 172

    (8) fa_statement -> FA ID LPAREN RPAREN LBRACE fa_body . RBRACE

    RBRACE          shift and go to state 199


state 173

    (10) fa_body -> states .

    RBRACE          reduce using rule 10 (fa_body -> states .)


state 174

    (11) fa_body -> initial .

    RBRACE          reduce using rule 11 (fa_body -> initial .)


state 175

    (12) fa_body -> final .

    RBRACE          reduce using rule 12 (fa_body -> final .)


state 176

    (13) fa_body -> transitions .

    RBRACE          reduce using rule 13 (fa_body -> transitions .)


state 177

    (14) states -> STATES . COLON LBRACE states_list RBRACE

    COLON           shift and go to state 200


state 178

    (17) initial -> INITIAL . COLON LBRACE ID RBRACE

    COLON           shift and go to state 201


state 179

    (18) final -> FINAL . COLON LBRACE final_list RBRACE

    COLON           shift and go to state 202


state 180

    (21) transitions -> TRANSITIONS . COLON LBRACE transitions_list RBRACE

    COLON           shift and go to state 203


state 181

    (9) pda_statement -> PDA ID LPAREN RPAREN LBRACE pda_body . RBRACE

    RBRACE          shift and go to state 204


state 182

    (26) pda_body -> states .

    RBRACE          reduce using rule 26 (pda_body -> states .)


state 183

    (27) pda_body -> initial .

    RBRACE          reduce using rule 27 (pda_body -> initial .)


state 184

    (28) pda_body -> stack_init .

    RBRACE          reduce using rule 28 (pda_body -> stack_init .)


state 185

    (29) pda_body -> final .

    RBRACE          reduce using rule 29 (pda_body -> final .)


state 186

    (30) pda_body -> transitions .

    RBRACE          reduce using rule 30 (pda_body -> transitions .)


state 187

    (31) stack_init -> STACK_INIT . COLON ID

    COLON           shift and go to state 205


state 188

    (32) cfg_statement -> CFG ID LPAREN RPAREN LBRACE cfg_body . RBRACE
    (37) cfg_body -> cfg_body . nonterminals_statement
    (38) cfg_body -> cfg_body . terminals_statement
    (39) cfg_body -> cfg_body . start_statement
    (40) cfg_body -> cfg_body . rules_statement
    (41) nonterminals_statement -> . NONTERMINALS COLON LBRACE nonterminals_list RBRACE
    (44) terminals_statement -> . TERMINALS COLON LBRACE terminals_list RBRACE
    (47) start_statement -> . START COLON ID
    (48) rules_statement -> . RULES COLON LBRACE rules_list RBRACE

    RBRACE          shift and go to state 206
    NONTERMINALS    shift and go to state 193
    TERMINALS       shift and go to state 194
    START           shift and go to state 195
    RULES           shift and go to state 196

    nonterminals_statement         shift and go to state 207
    terminals_statement            shift and go to state 208
    start_statement                shift and go to state 209
    rules_statement                shift and go to state 210

state 189

    (33) cfg_body -> nonterminals_statement .

    RBRACE          reduce using rule 33 (cfg_body -> nonterminals_statement .)
    NONTERMINALS    reduce using rule 33 (cfg_body -> nonterminals_statement .)
    TERMINALS       reduce using rule 33 (cfg_body -> nonterminals_statement .)
    START           reduce using rule 33 (cfg_body -> nonterminals_statement .)
    RULES           reduce using rule 33 (cfg_body -> nonterminals_statement .)


state 190

    (34) cfg_body -> terminals_statement .

    RBRACE          reduce using rule 34 (cfg_body -> terminals_statement .)
    NONTERMINALS    reduce using rule 34 (cfg_body -> terminals_statement .)
    TERMINALS       reduce using rule 34 (cfg_body -> terminals_statement .)
    START           reduce using rule 34 (cfg_body -> terminals_statement .)
    RULES           reduce using rule 34 (cfg_body -> terminals_statement .)


state 191

    (35) cfg_body -> start_statement .

    RBRACE          reduce using rule 35 (cfg_body -> start_statement .)
    NONTERMINALS    reduce using rule 35 (cfg_body -> start_statement .)
    TERMINALS       reduce using rule 35 (cfg_body -> start_statement .)
    START           reduce using rule 35 (cfg_body -> start_statement .)
    RULES           reduce using rule 35 (cfg_body -> start_statement .)


state 192

    (36) cfg_body -> rules_statement .

    RBRACE          reduce using rule 36 (cfg_body -> rules_statement .)
    NONTERMINALS    reduce using rule 36 (cfg_body -> rules_statement .)
    TERMINALS       reduce using rule 36 (cfg_body -> rules_statement .)
    START           reduce using rule 36 (cfg_body -> rules_statement .)
    RULES           reduce using rule 36 (cfg_body -> rules_statement .)


state 193

    (41) nonterminals_statement -> NONTERMINALS . COLON LBRACE nonterminals_list RBRACE

    COLON           shift and go to state 211


state 194

    (44) terminals_statement -> TERMINALS . COLON LBRACE terminals_list RBRACE

    COLON           shift and go to state 212


state 195

    (47) start_statement -> START . COLON ID

    COLON           shift and go to state 213


state 196

    (48) rules_statement -> RULES . COLON LBRACE rules_list RBRACE

    COLON           shift and go to state 214


state 197

    (3) alphabet_list -> alphabet_list COMMA ID .

    RBRACE          reduce using rule 3 (alphabet_list -> alphabet_list COMMA ID .)
    COMMA           reduce using rule 3 (alphabet_list -> alphabet_list COMMA ID .)


state 198

    (99) statement -> IF LPAREN condition RPAREN LBRACE statement RBRACE . ELSE LBRACE statement RBRACE
    (100) statement -> IF LPAREN condition RPAREN LBRACE statement RBRACE . ELSE IF LPAREN condition RPAREN LBRACE statement RBRACE
    (101) statement -> IF LPAREN condition RPAREN LBRACE statement RBRACE . ELSE IF LPAREN condition RPAREN LBRACE statement RBRACE ELSE LBRACE statement RBRACE
    (102) statement -> IF LPAREN condition RPAREN LBRACE statement RBRACE .

    ELSE            shift and go to state 215
    $end            reduce using rule 102 (statement -> IF LPAREN condition RPAREN LBRACE statement RBRACE .)
    RBRACE          reduce using rule 102 (statement -> IF LPAREN condition RPAREN LBRACE statement RBRACE .)


state 199

    (8) fa_statement -> FA ID LPAREN RPAREN LBRACE fa_body RBRACE .

    $end            reduce using rule 8 (fa_statement -> FA ID LPAREN RPAREN LBRACE fa_body RBRACE .)
    RBRACE          reduce using rule 8 (fa_statement -> FA ID LPAREN RPAREN LBRACE fa_body RBRACE .)


state 200

    (14) states -> STATES COLON . LBRACE states_list RBRACE

    LBRACE          shift and go to state 216


state 201

    (17) initial -> INITIAL COLON . LBRACE ID RBRACE

    LBRACE          shift and go to state 217


state 202

    (18) final -> FINAL COLON . LBRACE final_list RBRACE

    LBRACE          shift and go to state 218


state 203

    (21) transitions -> TRANSITIONS COLON . LBRACE transitions_list RBRACE

    LBRACE          shift and go to state 219


state 204

    (9) pda_statement -> PDA ID LPAREN RPAREN LBRACE pda_body RBRACE .

    $end            reduce using rule 9 (pda_statement -> PDA ID LPAREN RPAREN LBRACE pda_body RBRACE .)
    RBRACE          reduce using rule 9 (pda_statement -> PDA ID LPAREN RPAREN LBRACE pda_body RBRACE .)


state 205

    (31) stack_init -> STACK_INIT COLON . ID

    ID              shift and go to state 220


state 206

    (32) cfg_statement -> CFG ID LPAREN RPAREN LBRACE cfg_body RBRACE .

    $end            reduce using rule 32 (cfg_statement -> CFG ID LPAREN RPAREN LBRACE cfg_body RBRACE .)
    RBRACE          reduce using rule 32 (cfg_statement -> CFG ID LPAREN RPAREN LBRACE cfg_body RBRACE .)


state 207

    (37) cfg_body -> cfg_body nonterminals_statement .

    RBRACE          reduce using rule 37 (cfg_body -> cfg_body nonterminals_statement .)
    NONTERMINALS    reduce using rule 37 (cfg_body -> cfg_body nonterminals_statement .)
    TERMINALS       reduce using rule 37 (cfg_body -> cfg_body nonterminals_statement .)
    START           reduce using rule 37 (cfg_body -> cfg_body nonterminals_statement .)
    RULES           reduce using rule 37 (cfg_body -> cfg_body nonterminals_statement .)


state 208

    (38) cfg_body -> cfg_body terminals_statement .

    RBRACE          reduce using rule 38 (cfg_body -> cfg_body terminals_statement .)
    NONTERMINALS    reduce using rule 38 (cfg_body -> cfg_body terminals_statement .)
    TERMINALS       reduce using rule 38 (cfg_body -> cfg_body terminals_statement .)
    START           reduce using rule 38 (cfg_body -> cfg_body terminals_statement .)
    RULES           reduce using rule 38 (cfg_body -> cfg_body terminals_statement .)


state 209

    (39) cfg_body -> cfg_body start_statement .

    RBRACE          reduce using rule 39 (cfg_body -> cfg_body start_statement .)
    NONTERMINALS    reduce using rule 39 (cfg_body -> cfg_body start_statement .)
    TERMINALS       reduce using rule 39 (cfg_body -> cfg_body start_statement .)
    START           reduce using rule 39 (cfg_body -> cfg_body start_statement .)
    RULES           reduce using rule 39 (cfg_body -> cfg_body start_statement .)


state 210

    (40) cfg_body -> cfg_body rules_statement .

    RBRACE          reduce using rule 40 (cfg_body -> cfg_body rules_statement .)
    NONTERMINALS    reduce using rule 40 (cfg_body -> cfg_body rules_statement .)
    TERMINALS       reduce using rule 40 (cfg_body -> cfg_body rules_statement .)
    START           reduce using rule 40 (cfg_body -> cfg_body rules_statement .)
    RULES           reduce using rule 40 (cfg_body -> cfg_body rules_statement .)


state 211

    (41) nonterminals_statement -> NONTERMINALS COLON . LBRACE nonterminals_list RBRACE

    LBRACE          shift and go to state 221


state 212

    (44) terminals_statement -> TERMINALS COLON . LBRACE terminals_list RBRACE

    LBRACE          shift and go to state 222


state 213

    (47) start_statement -> START COLON . ID

    ID              shift and go to state 223


state 214

    (48) rules_statement -> RULES COLON . LBRACE rules_list RBRACE

    LBRACE          shift and go to state 224


state 215

    (99) statement -> IF LPAREN condition RPAREN LBRACE statement RBRACE ELSE . LBRACE statement RBRACE
    (100) statement -> IF LPAREN condition RPAREN LBRACE statement RBRACE ELSE . IF LPAREN condition RPAREN LBRACE statement RBRACE
    (101) statement -> IF LPAREN condition RPAREN LBRACE statement RBRACE ELSE . IF LPAREN condition RPAREN LBRACE statement RBRACE ELSE LBRACE statement RBRACE

    LBRACE          shift and go to state 226
    IF              shift and go to state 225


state 216

    (14) states -> STATES COLON LBRACE . states_list RBRACE
    (15) states_list -> . ID
    (16) states_list -> . states_list COMMA ID

    ID              shift and go to state 228

    states_list                    shift and go to state 227

state 217

    (17) initial -> INITIAL COLON LBRACE . ID RBRACE

    ID              shift and go to state 229


state 218

    (18) final -> FINAL COLON LBRACE . final_list RBRACE
    (19) final_list -> . ID
    (20) final_list -> . final_list COMMA ID

    ID              shift and go to state 231

    final_list                     shift and go to state 230

state 219

    (21) transitions -> TRANSITIONS COLON LBRACE . transitions_list RBRACE
    (22) transitions_list -> . transition
    (23) transitions_list -> . transitions_list COMMA transition
    (24) transition -> . LSQUARE FROM COLON ID COMMA TO COLON ID COMMA ONN COLON ID RSQUARE
    (25) transition -> . LSQUARE FROM COLON ID COMMA TO COLON ID COMMA ONN COLON ID COMMA POP COLON ID COMMA PUSH COLON ID COMMA STACK COLON ID RSQUARE

    LSQUARE         shift and go to state 234

    transitions_list               shift and go to state 232
    transition                     shift and go to state 233

state 220

    (31) stack_init -> STACK_INIT COLON ID .

    RBRACE          reduce using rule 31 (stack_init -> STACK_INIT COLON ID .)


state 221

    (41) nonterminals_statement -> NONTERMINALS COLON LBRACE . nonterminals_list RBRACE
    (42) nonterminals_list -> . ID
    (43) nonterminals_list -> . nonterminals_list COMMA ID

    ID              shift and go to state 236

    nonterminals_list              shift and go to state 235

state 222

    (44) terminals_statement -> TERMINALS COLON LBRACE . terminals_list RBRACE
    (45) terminals_list -> . ID
    (46) terminals_list -> . terminals_list COMMA ID

    ID              shift and go to state 238

    terminals_list                 shift and go to state 237

state 223

    (47) start_statement -> START COLON ID .

    RBRACE          reduce using rule 47 (start_statement -> START COLON ID .)
    NONTERMINALS    reduce using rule 47 (start_statement -> START COLON ID .)
    TERMINALS       reduce using rule 47 (start_statement -> START COLON ID .)
    START           reduce using rule 47 (start_statement -> START COLON ID .)
    RULES           reduce using rule 47 (start_statement -> START COLON ID .)


state 224

    (48) rules_statement -> RULES COLON LBRACE . rules_list RBRACE
    (49) rules_list -> . rule
    (50) rules_list -> . rules_list rule
    (51) rule -> . ID ARROW rule_rhs SEMICOLON

    ID              shift and go to state 241

    rules_list                     shift and go to state 239
    rule                           shift and go to state 240

state 225

    (100) statement -> IF LPAREN condition RPAREN LBRACE statement RBRACE ELSE IF . LPAREN condition RPAREN LBRACE statement RBRACE
    (101) statement -> IF LPAREN condition RPAREN LBRACE statement RBRACE ELSE IF . LPAREN condition RPAREN LBRACE statement RBRACE ELSE LBRACE statement RBRACE

    LPAREN          shift and go to state 242


state 226

    (99) statement -> IF LPAREN condition RPAREN LBRACE statement RBRACE ELSE LBRACE . statement RBRACE
    (1) statement -> . ALPHABET ID EQUALS LBRACE alphabet_list RBRACE
    (4) statement -> . STR ID EQUALS SINGLEQUOTE STRING SINGLEQUOTE
    (5) statement -> . fa_statement
    (6) statement -> . pda_statement
    (7) statement -> . cfg_statement
    (55) statement -> . RE ID EQUALS SINGLEQUOTE REGEX SINGLEQUOTE
    (72) statement -> . MINIMIZE LPAREN ID RPAREN
    (73) statement -> . SIMULATE LPAREN ID COMMA ID RPAREN
    (74) statement -> . VISUALIZE LPAREN ID RPAREN
    (75) statement -> . CONCAT LPAREN ID COMMA ID RPAREN
    (76) statement -> . POWER LPAREN ID COMMA NUMBER RPAREN
    (77) statement -> . KLEENE LPAREN ID RPAREN
    (78) statement -> . CONVERT LPAREN ID COMMA ID RPAREN
    (79) statement -> . CHECKPUMPINGLEMMAREG LPAREN ID RPAREN
    (80) statement -> . CHECKPUMPINGLEMMACFL LPAREN ID RPAREN
    (81) statement -> . ISEQUIVALENT LPAREN ID COMMA ID RPAREN
    (90) statement -> . SHOW LPAREN show_type RPAREN
    (91) statement -> . UNION LPAREN ID COMMA ID RPAREN
    (92) statement -> . INTERSECT LPAREN ID COMMA ID RPAREN
    (93) statement -> . COMPLEMENT LPAREN ID RPAREN
    (94) statement -> . DIFF LPAREN ID COMMA ID RPAREN
    (95) statement -> . ISDFA LPAREN ID RPAREN
    (96) statement -> . ISNFA LPAREN ID RPAREN
    (97) statement -> . ISDPDA LPAREN ID RPAREN
    (98) statement -> . ISNPDA LPAREN ID RPAREN
    (99) statement -> . IF LPAREN condition RPAREN LBRACE statement RBRACE ELSE LBRACE statement RBRACE
    (100) statement -> . IF LPAREN condition RPAREN LBRACE statement RBRACE ELSE IF LPAREN condition RPAREN LBRACE statement RBRACE
    (101) statement -> . IF LPAREN condition RPAREN LBRACE statement RBRACE ELSE IF LPAREN condition RPAREN LBRACE statement RBRACE ELSE LBRACE statement RBRACE
    (102) statement -> . IF LPAREN condition RPAREN LBRACE statement RBRACE
    (110) statement -> . SLCOMMENT
    (111) statement -> . MLCOMMENT
    (112) statement -> . DOCCOMMENT
    (8) fa_statement -> . FA ID LPAREN RPAREN LBRACE fa_body RBRACE
    (9) pda_statement -> . PDA ID LPAREN RPAREN LBRACE pda_body RBRACE
    (32) cfg_statement -> . CFG ID LPAREN RPAREN LBRACE cfg_body RBRACE

    ALPHABET        shift and go to state 2
    STR             shift and go to state 3
    RE              shift and go to state 7
    MINIMIZE        shift and go to state 8
    SIMULATE        shift and go to state 9
    VISUALIZE       shift and go to state 10
    CONCAT          shift and go to state 11
    POWER           shift and go to state 12
    KLEENE          shift and go to state 13
    CONVERT         shift and go to state 14
    CHECKPUMPINGLEMMAREG shift and go to state 15
    CHECKPUMPINGLEMMACFL shift and go to state 16
    ISEQUIVALENT    shift and go to state 17
    SHOW            shift and go to state 18
    UNION           shift and go to state 19
    INTERSECT       shift and go to state 20
    COMPLEMENT      shift and go to state 21
    DIFF            shift and go to state 22
    ISDFA           shift and go to state 23
    ISNFA           shift and go to state 24
    ISDPDA          shift and go to state 25
    ISNPDA          shift and go to state 26
    IF              shift and go to state 27
    SLCOMMENT       shift and go to state 28
    MLCOMMENT       shift and go to state 29
    DOCCOMMENT      shift and go to state 30
    FA              shift and go to state 31
    PDA             shift and go to state 32
    CFG             shift and go to state 33

    statement                      shift and go to state 243
    fa_statement                   shift and go to state 4
    pda_statement                  shift and go to state 5
    cfg_statement                  shift and go to state 6

state 227

    (14) states -> STATES COLON LBRACE states_list . RBRACE
    (16) states_list -> states_list . COMMA ID

    RBRACE          shift and go to state 244
    COMMA           shift and go to state 245


state 228

    (15) states_list -> ID .

    RBRACE          reduce using rule 15 (states_list -> ID .)
    COMMA           reduce using rule 15 (states_list -> ID .)


state 229

    (17) initial -> INITIAL COLON LBRACE ID . RBRACE

    RBRACE          shift and go to state 246


state 230

    (18) final -> FINAL COLON LBRACE final_list . RBRACE
    (20) final_list -> final_list . COMMA ID

    RBRACE          shift and go to state 247
    COMMA           shift and go to state 248


state 231

    (19) final_list -> ID .

    RBRACE          reduce using rule 19 (final_list -> ID .)
    COMMA           reduce using rule 19 (final_list -> ID .)


state 232

    (21) transitions -> TRANSITIONS COLON LBRACE transitions_list . RBRACE
    (23) transitions_list -> transitions_list . COMMA transition

    RBRACE          shift and go to state 249
    COMMA           shift and go to state 250


state 233

    (22) transitions_list -> transition .

    RBRACE          reduce using rule 22 (transitions_list -> transition .)
    COMMA           reduce using rule 22 (transitions_list -> transition .)


state 234

    (24) transition -> LSQUARE . FROM COLON ID COMMA TO COLON ID COMMA ONN COLON ID RSQUARE
    (25) transition -> LSQUARE . FROM COLON ID COMMA TO COLON ID COMMA ONN COLON ID COMMA POP COLON ID COMMA PUSH COLON ID COMMA STACK COLON ID RSQUARE

    FROM            shift and go to state 251


state 235

    (41) nonterminals_statement -> NONTERMINALS COLON LBRACE nonterminals_list . RBRACE
    (43) nonterminals_list -> nonterminals_list . COMMA ID

    RBRACE          shift and go to state 252
    COMMA           shift and go to state 253


state 236

    (42) nonterminals_list -> ID .

    RBRACE          reduce using rule 42 (nonterminals_list -> ID .)
    COMMA           reduce using rule 42 (nonterminals_list -> ID .)


state 237

    (44) terminals_statement -> TERMINALS COLON LBRACE terminals_list . RBRACE
    (46) terminals_list -> terminals_list . COMMA ID

    RBRACE          shift and go to state 254
    COMMA           shift and go to state 255


state 238

    (45) terminals_list -> ID .

    RBRACE          reduce using rule 45 (terminals_list -> ID .)
    COMMA           reduce using rule 45 (terminals_list -> ID .)


state 239

    (48) rules_statement -> RULES COLON LBRACE rules_list . RBRACE
    (50) rules_list -> rules_list . rule
    (51) rule -> . ID ARROW rule_rhs SEMICOLON

    RBRACE          shift and go to state 256
    ID              shift and go to state 241

    rule                           shift and go to state 257

state 240

    (49) rules_list -> rule .

    RBRACE          reduce using rule 49 (rules_list -> rule .)
    ID              reduce using rule 49 (rules_list -> rule .)


state 241

    (51) rule -> ID . ARROW rule_rhs SEMICOLON

    ARROW           shift and go to state 258


state 242

    (100) statement -> IF LPAREN condition RPAREN LBRACE statement RBRACE ELSE IF LPAREN . condition RPAREN LBRACE statement RBRACE
    (101) statement -> IF LPAREN condition RPAREN LBRACE statement RBRACE ELSE IF LPAREN . condition RPAREN LBRACE statement RBRACE ELSE LBRACE statement RBRACE
    (103) condition -> . CHECKPUMPINGLEMMAREG
    (104) condition -> . CHECKPUMPINGLEMMACFL
    (105) condition -> . ISEQUIVALENT
    (106) condition -> . ISDFA
    (107) condition -> . ISNFA
    (108) condition -> . ISDPDA
    (109) condition -> . ISNPDA

    CHECKPUMPINGLEMMAREG shift and go to state 91
    CHECKPUMPINGLEMMACFL shift and go to state 92
    ISEQUIVALENT    shift and go to state 93
    ISDFA           shift and go to state 94
    ISNFA           shift and go to state 95
    ISDPDA          shift and go to state 96
    ISNPDA          shift and go to state 97

    condition                      shift and go to state 259

state 243

    (99) statement -> IF LPAREN condition RPAREN LBRACE statement RBRACE ELSE LBRACE statement . RBRACE

    RBRACE          shift and go to state 260


state 244

    (14) states -> STATES COLON LBRACE states_list RBRACE .

    RBRACE          reduce using rule 14 (states -> STATES COLON LBRACE states_list RBRACE .)


state 245

    (16) states_list -> states_list COMMA . ID

    ID              shift and go to state 261


state 246

    (17) initial -> INITIAL COLON LBRACE ID RBRACE .

    RBRACE          reduce using rule 17 (initial -> INITIAL COLON LBRACE ID RBRACE .)


state 247

    (18) final -> FINAL COLON LBRACE final_list RBRACE .

    RBRACE          reduce using rule 18 (final -> FINAL COLON LBRACE final_list RBRACE .)


state 248

    (20) final_list -> final_list COMMA . ID

    ID              shift and go to state 262


state 249

    (21) transitions -> TRANSITIONS COLON LBRACE transitions_list RBRACE .

    RBRACE          reduce using rule 21 (transitions -> TRANSITIONS COLON LBRACE transitions_list RBRACE .)


state 250

    (23) transitions_list -> transitions_list COMMA . transition
    (24) transition -> . LSQUARE FROM COLON ID COMMA TO COLON ID COMMA ONN COLON ID RSQUARE
    (25) transition -> . LSQUARE FROM COLON ID COMMA TO COLON ID COMMA ONN COLON ID COMMA POP COLON ID COMMA PUSH COLON ID COMMA STACK COLON ID RSQUARE

    LSQUARE         shift and go to state 234

    transition                     shift and go to state 263

state 251

    (24) transition -> LSQUARE FROM . COLON ID COMMA TO COLON ID COMMA ONN COLON ID RSQUARE
    (25) transition -> LSQUARE FROM . COLON ID COMMA TO COLON ID COMMA ONN COLON ID COMMA POP COLON ID COMMA PUSH COLON ID COMMA STACK COLON ID RSQUARE

    COLON           shift and go to state 264


state 252

    (41) nonterminals_statement -> NONTERMINALS COLON LBRACE nonterminals_list RBRACE .

    RBRACE          reduce using rule 41 (nonterminals_statement -> NONTERMINALS COLON LBRACE nonterminals_list RBRACE .)
    NONTERMINALS    reduce using rule 41 (nonterminals_statement -> NONTERMINALS COLON LBRACE nonterminals_list RBRACE .)
    TERMINALS       reduce using rule 41 (nonterminals_statement -> NONTERMINALS COLON LBRACE nonterminals_list RBRACE .)
    START           reduce using rule 41 (nonterminals_statement -> NONTERMINALS COLON LBRACE nonterminals_list RBRACE .)
    RULES           reduce using rule 41 (nonterminals_statement -> NONTERMINALS COLON LBRACE nonterminals_list RBRACE .)


state 253

    (43) nonterminals_list -> nonterminals_list COMMA . ID

    ID              shift and go to state 265


state 254

    (44) terminals_statement -> TERMINALS COLON LBRACE terminals_list RBRACE .

    RBRACE          reduce using rule 44 (terminals_statement -> TERMINALS COLON LBRACE terminals_list RBRACE .)
    NONTERMINALS    reduce using rule 44 (terminals_statement -> TERMINALS COLON LBRACE terminals_list RBRACE .)
    TERMINALS       reduce using rule 44 (terminals_statement -> TERMINALS COLON LBRACE terminals_list RBRACE .)
    START           reduce using rule 44 (terminals_statement -> TERMINALS COLON LBRACE terminals_list RBRACE .)
    RULES           reduce using rule 44 (terminals_statement -> TERMINALS COLON LBRACE terminals_list RBRACE .)


state 255

    (46) terminals_list -> terminals_list COMMA . ID

    ID              shift and go to state 266


state 256

    (48) rules_statement -> RULES COLON LBRACE rules_list RBRACE .

    RBRACE          reduce using rule 48 (rules_statement -> RULES COLON LBRACE rules_list RBRACE .)
    NONTERMINALS    reduce using rule 48 (rules_statement -> RULES COLON LBRACE rules_list RBRACE .)
    TERMINALS       reduce using rule 48 (rules_statement -> RULES COLON LBRACE rules_list RBRACE .)
    START           reduce using rule 48 (rules_statement -> RULES COLON LBRACE rules_list RBRACE .)
    RULES           reduce using rule 48 (rules_statement -> RULES COLON LBRACE rules_list RBRACE .)


state 257

    (50) rules_list -> rules_list rule .

    RBRACE          reduce using rule 50 (rules_list -> rules_list rule .)
    ID              reduce using rule 50 (rules_list -> rules_list rule .)


state 258

    (51) rule -> ID ARROW . rule_rhs SEMICOLON
    (52) rule_rhs -> . ID
    (53) rule_rhs -> . rule_rhs PIPE ID
    (54) rule_rhs -> . rule_rhs PIPE EPSILON

    ID              shift and go to state 267

    rule_rhs                       shift and go to state 268

state 259

    (100) statement -> IF LPAREN condition RPAREN LBRACE statement RBRACE ELSE IF LPAREN condition . RPAREN LBRACE statement RBRACE
    (101) statement -> IF LPAREN condition RPAREN LBRACE statement RBRACE ELSE IF LPAREN condition . RPAREN LBRACE statement RBRACE ELSE LBRACE statement RBRACE

    RPAREN          shift and go to state 269


state 260

    (99) statement -> IF LPAREN condition RPAREN LBRACE statement RBRACE ELSE LBRACE statement RBRACE .

    $end            reduce using rule 99 (statement -> IF LPAREN condition RPAREN LBRACE statement RBRACE ELSE LBRACE statement RBRACE .)
    RBRACE          reduce using rule 99 (statement -> IF LPAREN condition RPAREN LBRACE statement RBRACE ELSE LBRACE statement RBRACE .)


state 261

    (16) states_list -> states_list COMMA ID .

    RBRACE          reduce using rule 16 (states_list -> states_list COMMA ID .)
    COMMA           reduce using rule 16 (states_list -> states_list COMMA ID .)


state 262

    (20) final_list -> final_list COMMA ID .

    RBRACE          reduce using rule 20 (final_list -> final_list COMMA ID .)
    COMMA           reduce using rule 20 (final_list -> final_list COMMA ID .)


state 263

    (23) transitions_list -> transitions_list COMMA transition .

    RBRACE          reduce using rule 23 (transitions_list -> transitions_list COMMA transition .)
    COMMA           reduce using rule 23 (transitions_list -> transitions_list COMMA transition .)


state 264

    (24) transition -> LSQUARE FROM COLON . ID COMMA TO COLON ID COMMA ONN COLON ID RSQUARE
    (25) transition -> LSQUARE FROM COLON . ID COMMA TO COLON ID COMMA ONN COLON ID COMMA POP COLON ID COMMA PUSH COLON ID COMMA STACK COLON ID RSQUARE

    ID              shift and go to state 270


state 265

    (43) nonterminals_list -> nonterminals_list COMMA ID .

    RBRACE          reduce using rule 43 (nonterminals_list -> nonterminals_list COMMA ID .)
    COMMA           reduce using rule 43 (nonterminals_list -> nonterminals_list COMMA ID .)


state 266

    (46) terminals_list -> terminals_list COMMA ID .

    RBRACE          reduce using rule 46 (terminals_list -> terminals_list COMMA ID .)
    COMMA           reduce using rule 46 (terminals_list -> terminals_list COMMA ID .)


state 267

    (52) rule_rhs -> ID .

    SEMICOLON       reduce using rule 52 (rule_rhs -> ID .)
    PIPE            reduce using rule 52 (rule_rhs -> ID .)


state 268

    (51) rule -> ID ARROW rule_rhs . SEMICOLON
    (53) rule_rhs -> rule_rhs . PIPE ID
    (54) rule_rhs -> rule_rhs . PIPE EPSILON

    SEMICOLON       shift and go to state 271
    PIPE            shift and go to state 272


state 269

    (100) statement -> IF LPAREN condition RPAREN LBRACE statement RBRACE ELSE IF LPAREN condition RPAREN . LBRACE statement RBRACE
    (101) statement -> IF LPAREN condition RPAREN LBRACE statement RBRACE ELSE IF LPAREN condition RPAREN . LBRACE statement RBRACE ELSE LBRACE statement RBRACE

    LBRACE          shift and go to state 273


state 270

    (24) transition -> LSQUARE FROM COLON ID . COMMA TO COLON ID COMMA ONN COLON ID RSQUARE
    (25) transition -> LSQUARE FROM COLON ID . COMMA TO COLON ID COMMA ONN COLON ID COMMA POP COLON ID COMMA PUSH COLON ID COMMA STACK COLON ID RSQUARE

    COMMA           shift and go to state 274


state 271

    (51) rule -> ID ARROW rule_rhs SEMICOLON .

    RBRACE          reduce using rule 51 (rule -> ID ARROW rule_rhs SEMICOLON .)
    ID              reduce using rule 51 (rule -> ID ARROW rule_rhs SEMICOLON .)


state 272

    (53) rule_rhs -> rule_rhs PIPE . ID
    (54) rule_rhs -> rule_rhs PIPE . EPSILON

    ID              shift and go to state 275
    EPSILON         shift and go to state 276


state 273

    (100) statement -> IF LPAREN condition RPAREN LBRACE statement RBRACE ELSE IF LPAREN condition RPAREN LBRACE . statement RBRACE
    (101) statement -> IF LPAREN condition RPAREN LBRACE statement RBRACE ELSE IF LPAREN condition RPAREN LBRACE . statement RBRACE ELSE LBRACE statement RBRACE
    (1) statement -> . ALPHABET ID EQUALS LBRACE alphabet_list RBRACE
    (4) statement -> . STR ID EQUALS SINGLEQUOTE STRING SINGLEQUOTE
    (5) statement -> . fa_statement
    (6) statement -> . pda_statement
    (7) statement -> . cfg_statement
    (55) statement -> . RE ID EQUALS SINGLEQUOTE REGEX SINGLEQUOTE
    (72) statement -> . MINIMIZE LPAREN ID RPAREN
    (73) statement -> . SIMULATE LPAREN ID COMMA ID RPAREN
    (74) statement -> . VISUALIZE LPAREN ID RPAREN
    (75) statement -> . CONCAT LPAREN ID COMMA ID RPAREN
    (76) statement -> . POWER LPAREN ID COMMA NUMBER RPAREN
    (77) statement -> . KLEENE LPAREN ID RPAREN
    (78) statement -> . CONVERT LPAREN ID COMMA ID RPAREN
    (79) statement -> . CHECKPUMPINGLEMMAREG LPAREN ID RPAREN
    (80) statement -> . CHECKPUMPINGLEMMACFL LPAREN ID RPAREN
    (81) statement -> . ISEQUIVALENT LPAREN ID COMMA ID RPAREN
    (90) statement -> . SHOW LPAREN show_type RPAREN
    (91) statement -> . UNION LPAREN ID COMMA ID RPAREN
    (92) statement -> . INTERSECT LPAREN ID COMMA ID RPAREN
    (93) statement -> . COMPLEMENT LPAREN ID RPAREN
    (94) statement -> . DIFF LPAREN ID COMMA ID RPAREN
    (95) statement -> . ISDFA LPAREN ID RPAREN
    (96) statement -> . ISNFA LPAREN ID RPAREN
    (97) statement -> . ISDPDA LPAREN ID RPAREN
    (98) statement -> . ISNPDA LPAREN ID RPAREN
    (99) statement -> . IF LPAREN condition RPAREN LBRACE statement RBRACE ELSE LBRACE statement RBRACE
    (100) statement -> . IF LPAREN condition RPAREN LBRACE statement RBRACE ELSE IF LPAREN condition RPAREN LBRACE statement RBRACE
    (101) statement -> . IF LPAREN condition RPAREN LBRACE statement RBRACE ELSE IF LPAREN condition RPAREN LBRACE statement RBRACE ELSE LBRACE statement RBRACE
    (102) statement -> . IF LPAREN condition RPAREN LBRACE statement RBRACE
    (110) statement -> . SLCOMMENT
    (111) statement -> . MLCOMMENT
    (112) statement -> . DOCCOMMENT
    (8) fa_statement -> . FA ID LPAREN RPAREN LBRACE fa_body RBRACE
    (9) pda_statement -> . PDA ID LPAREN RPAREN LBRACE pda_body RBRACE
    (32) cfg_statement -> . CFG ID LPAREN RPAREN LBRACE cfg_body RBRACE

    ALPHABET        shift and go to state 2
    STR             shift and go to state 3
    RE              shift and go to state 7
    MINIMIZE        shift and go to state 8
    SIMULATE        shift and go to state 9
    VISUALIZE       shift and go to state 10
    CONCAT          shift and go to state 11
    POWER           shift and go to state 12
    KLEENE          shift and go to state 13
    CONVERT         shift and go to state 14
    CHECKPUMPINGLEMMAREG shift and go to state 15
    CHECKPUMPINGLEMMACFL shift and go to state 16
    ISEQUIVALENT    shift and go to state 17
    SHOW            shift and go to state 18
    UNION           shift and go to state 19
    INTERSECT       shift and go to state 20
    COMPLEMENT      shift and go to state 21
    DIFF            shift and go to state 22
    ISDFA           shift and go to state 23
    ISNFA           shift and go to state 24
    ISDPDA          shift and go to state 25
    ISNPDA          shift and go to state 26
    IF              shift and go to state 27
    SLCOMMENT       shift and go to state 28
    MLCOMMENT       shift and go to state 29
    DOCCOMMENT      shift and go to state 30
    FA              shift and go to state 31
    PDA             shift and go to state 32
    CFG             shift and go to state 33

    statement                      shift and go to state 277
    fa_statement                   shift and go to state 4
    pda_statement                  shift and go to state 5
    cfg_statement                  shift and go to state 6

state 274

    (24) transition -> LSQUARE FROM COLON ID COMMA . TO COLON ID COMMA ONN COLON ID RSQUARE
    (25) transition -> LSQUARE FROM COLON ID COMMA . TO COLON ID COMMA ONN COLON ID COMMA POP COLON ID COMMA PUSH COLON ID COMMA STACK COLON ID RSQUARE

    TO              shift and go to state 278


state 275

    (53) rule_rhs -> rule_rhs PIPE ID .

    SEMICOLON       reduce using rule 53 (rule_rhs -> rule_rhs PIPE ID .)
    PIPE            reduce using rule 53 (rule_rhs -> rule_rhs PIPE ID .)


state 276

    (54) rule_rhs -> rule_rhs PIPE EPSILON .

    SEMICOLON       reduce using rule 54 (rule_rhs -> rule_rhs PIPE EPSILON .)
    PIPE            reduce using rule 54 (rule_rhs -> rule_rhs PIPE EPSILON .)


state 277

    (100) statement -> IF LPAREN condition RPAREN LBRACE statement RBRACE ELSE IF LPAREN condition RPAREN LBRACE statement . RBRACE
    (101) statement -> IF LPAREN condition RPAREN LBRACE statement RBRACE ELSE IF LPAREN condition RPAREN LBRACE statement . RBRACE ELSE LBRACE statement RBRACE

    RBRACE          shift and go to state 279


state 278

    (24) transition -> LSQUARE FROM COLON ID COMMA TO . COLON ID COMMA ONN COLON ID RSQUARE
    (25) transition -> LSQUARE FROM COLON ID COMMA TO . COLON ID COMMA ONN COLON ID COMMA POP COLON ID COMMA PUSH COLON ID COMMA STACK COLON ID RSQUARE

    COLON           shift and go to state 280


state 279

    (100) statement -> IF LPAREN condition RPAREN LBRACE statement RBRACE ELSE IF LPAREN condition RPAREN LBRACE statement RBRACE .
    (101) statement -> IF LPAREN condition RPAREN LBRACE statement RBRACE ELSE IF LPAREN condition RPAREN LBRACE statement RBRACE . ELSE LBRACE statement RBRACE

    $end            reduce using rule 100 (statement -> IF LPAREN condition RPAREN LBRACE statement RBRACE ELSE IF LPAREN condition RPAREN LBRACE statement RBRACE .)
    RBRACE          reduce using rule 100 (statement -> IF LPAREN condition RPAREN LBRACE statement RBRACE ELSE IF LPAREN condition RPAREN LBRACE statement RBRACE .)
    ELSE            shift and go to state 281


state 280

    (24) transition -> LSQUARE FROM COLON ID COMMA TO COLON . ID COMMA ONN COLON ID RSQUARE
    (25) transition -> LSQUARE FROM COLON ID COMMA TO COLON . ID COMMA ONN COLON ID COMMA POP COLON ID COMMA PUSH COLON ID COMMA STACK COLON ID RSQUARE

    ID              shift and go to state 282


state 281

    (101) statement -> IF LPAREN condition RPAREN LBRACE statement RBRACE ELSE IF LPAREN condition RPAREN LBRACE statement RBRACE ELSE . LBRACE statement RBRACE

    LBRACE          shift and go to state 283


state 282

    (24) transition -> LSQUARE FROM COLON ID COMMA TO COLON ID . COMMA ONN COLON ID RSQUARE
    (25) transition -> LSQUARE FROM COLON ID COMMA TO COLON ID . COMMA ONN COLON ID COMMA POP COLON ID COMMA PUSH COLON ID COMMA STACK COLON ID RSQUARE

    COMMA           shift and go to state 284


state 283

    (101) statement -> IF LPAREN condition RPAREN LBRACE statement RBRACE ELSE IF LPAREN condition RPAREN LBRACE statement RBRACE ELSE LBRACE . statement RBRACE
    (1) statement -> . ALPHABET ID EQUALS LBRACE alphabet_list RBRACE
    (4) statement -> . STR ID EQUALS SINGLEQUOTE STRING SINGLEQUOTE
    (5) statement -> . fa_statement
    (6) statement -> . pda_statement
    (7) statement -> . cfg_statement
    (55) statement -> . RE ID EQUALS SINGLEQUOTE REGEX SINGLEQUOTE
    (72) statement -> . MINIMIZE LPAREN ID RPAREN
    (73) statement -> . SIMULATE LPAREN ID COMMA ID RPAREN
    (74) statement -> . VISUALIZE LPAREN ID RPAREN
    (75) statement -> . CONCAT LPAREN ID COMMA ID RPAREN
    (76) statement -> . POWER LPAREN ID COMMA NUMBER RPAREN
    (77) statement -> . KLEENE LPAREN ID RPAREN
    (78) statement -> . CONVERT LPAREN ID COMMA ID RPAREN
    (79) statement -> . CHECKPUMPINGLEMMAREG LPAREN ID RPAREN
    (80) statement -> . CHECKPUMPINGLEMMACFL LPAREN ID RPAREN
    (81) statement -> . ISEQUIVALENT LPAREN ID COMMA ID RPAREN
    (90) statement -> . SHOW LPAREN show_type RPAREN
    (91) statement -> . UNION LPAREN ID COMMA ID RPAREN
    (92) statement -> . INTERSECT LPAREN ID COMMA ID RPAREN
    (93) statement -> . COMPLEMENT LPAREN ID RPAREN
    (94) statement -> . DIFF LPAREN ID COMMA ID RPAREN
    (95) statement -> . ISDFA LPAREN ID RPAREN
    (96) statement -> . ISNFA LPAREN ID RPAREN
    (97) statement -> . ISDPDA LPAREN ID RPAREN
    (98) statement -> . ISNPDA LPAREN ID RPAREN
    (99) statement -> . IF LPAREN condition RPAREN LBRACE statement RBRACE ELSE LBRACE statement RBRACE
    (100) statement -> . IF LPAREN condition RPAREN LBRACE statement RBRACE ELSE IF LPAREN condition RPAREN LBRACE statement RBRACE
    (101) statement -> . IF LPAREN condition RPAREN LBRACE statement RBRACE ELSE IF LPAREN condition RPAREN LBRACE statement RBRACE ELSE LBRACE statement RBRACE
    (102) statement -> . IF LPAREN condition RPAREN LBRACE statement RBRACE
    (110) statement -> . SLCOMMENT
    (111) statement -> . MLCOMMENT
    (112) statement -> . DOCCOMMENT
    (8) fa_statement -> . FA ID LPAREN RPAREN LBRACE fa_body RBRACE
    (9) pda_statement -> . PDA ID LPAREN RPAREN LBRACE pda_body RBRACE
    (32) cfg_statement -> . CFG ID LPAREN RPAREN LBRACE cfg_body RBRACE

    ALPHABET        shift and go to state 2
    STR             shift and go to state 3
    RE              shift and go to state 7
    MINIMIZE        shift and go to state 8
    SIMULATE        shift and go to state 9
    VISUALIZE       shift and go to state 10
    CONCAT          shift and go to state 11
    POWER           shift and go to state 12
    KLEENE          shift and go to state 13
    CONVERT         shift and go to state 14
    CHECKPUMPINGLEMMAREG shift and go to state 15
    CHECKPUMPINGLEMMACFL shift and go to state 16
    ISEQUIVALENT    shift and go to state 17
    SHOW            shift and go to state 18
    UNION           shift and go to state 19
    INTERSECT       shift and go to state 20
    COMPLEMENT      shift and go to state 21
    DIFF            shift and go to state 22
    ISDFA           shift and go to state 23
    ISNFA           shift and go to state 24
    ISDPDA          shift and go to state 25
    ISNPDA          shift and go to state 26
    IF              shift and go to state 27
    SLCOMMENT       shift and go to state 28
    MLCOMMENT       shift and go to state 29
    DOCCOMMENT      shift and go to state 30
    FA              shift and go to state 31
    PDA             shift and go to state 32
    CFG             shift and go to state 33

    statement                      shift and go to state 285
    fa_statement                   shift and go to state 4
    pda_statement                  shift and go to state 5
    cfg_statement                  shift and go to state 6

state 284

    (24) transition -> LSQUARE FROM COLON ID COMMA TO COLON ID COMMA . ONN COLON ID RSQUARE
    (25) transition -> LSQUARE FROM COLON ID COMMA TO COLON ID COMMA . ONN COLON ID COMMA POP COLON ID COMMA PUSH COLON ID COMMA STACK COLON ID RSQUARE

    ONN             shift and go to state 286


state 285

    (101) statement -> IF LPAREN condition RPAREN LBRACE statement RBRACE ELSE IF LPAREN condition RPAREN LBRACE statement RBRACE ELSE LBRACE statement . RBRACE

    RBRACE          shift and go to state 287


state 286

    (24) transition -> LSQUARE FROM COLON ID COMMA TO COLON ID COMMA ONN . COLON ID RSQUARE
    (25) transition -> LSQUARE FROM COLON ID COMMA TO COLON ID COMMA ONN . COLON ID COMMA POP COLON ID COMMA PUSH COLON ID COMMA STACK COLON ID RSQUARE

    COLON           shift and go to state 288


state 287

    (101) statement -> IF LPAREN condition RPAREN LBRACE statement RBRACE ELSE IF LPAREN condition RPAREN LBRACE statement RBRACE ELSE LBRACE statement RBRACE .

    $end            reduce using rule 101 (statement -> IF LPAREN condition RPAREN LBRACE statement RBRACE ELSE IF LPAREN condition RPAREN LBRACE statement RBRACE ELSE LBRACE statement RBRACE .)
    RBRACE          reduce using rule 101 (statement -> IF LPAREN condition RPAREN LBRACE statement RBRACE ELSE IF LPAREN condition RPAREN LBRACE statement RBRACE ELSE LBRACE statement RBRACE .)


state 288

    (24) transition -> LSQUARE FROM COLON ID COMMA TO COLON ID COMMA ONN COLON . ID RSQUARE
    (25) transition -> LSQUARE FROM COLON ID COMMA TO COLON ID COMMA ONN COLON . ID COMMA POP COLON ID COMMA PUSH COLON ID COMMA STACK COLON ID RSQUARE

    ID              shift and go to state 289


state 289

    (24) transition -> LSQUARE FROM COLON ID COMMA TO COLON ID COMMA ONN COLON ID . RSQUARE
    (25) transition -> LSQUARE FROM COLON ID COMMA TO COLON ID COMMA ONN COLON ID . COMMA POP COLON ID COMMA PUSH COLON ID COMMA STACK COLON ID RSQUARE

    RSQUARE         shift and go to state 291
    COMMA           shift and go to state 290


state 290

    (25) transition -> LSQUARE FROM COLON ID COMMA TO COLON ID COMMA ONN COLON ID COMMA . POP COLON ID COMMA PUSH COLON ID COMMA STACK COLON ID RSQUARE

    POP             shift and go to state 292


state 291

    (24) transition -> LSQUARE FROM COLON ID COMMA TO COLON ID COMMA ONN COLON ID RSQUARE .

    RBRACE          reduce using rule 24 (transition -> LSQUARE FROM COLON ID COMMA TO COLON ID COMMA ONN COLON ID RSQUARE .)
    COMMA           reduce using rule 24 (transition -> LSQUARE FROM COLON ID COMMA TO COLON ID COMMA ONN COLON ID RSQUARE .)


state 292

    (25) transition -> LSQUARE FROM COLON ID COMMA TO COLON ID COMMA ONN COLON ID COMMA POP . COLON ID COMMA PUSH COLON ID COMMA STACK COLON ID RSQUARE

    COLON           shift and go to state 293


state 293

    (25) transition -> LSQUARE FROM COLON ID COMMA TO COLON ID COMMA ONN COLON ID COMMA POP COLON . ID COMMA PUSH COLON ID COMMA STACK COLON ID RSQUARE

    ID              shift and go to state 294


state 294

    (25) transition -> LSQUARE FROM COLON ID COMMA TO COLON ID COMMA ONN COLON ID COMMA POP COLON ID . COMMA PUSH COLON ID COMMA STACK COLON ID RSQUARE

    COMMA           shift and go to state 295


state 295

    (25) transition -> LSQUARE FROM COLON ID COMMA TO COLON ID COMMA ONN COLON ID COMMA POP COLON ID COMMA . PUSH COLON ID COMMA STACK COLON ID RSQUARE

    PUSH            shift and go to state 296


state 296

    (25) transition -> LSQUARE FROM COLON ID COMMA TO COLON ID COMMA ONN COLON ID COMMA POP COLON ID COMMA PUSH . COLON ID COMMA STACK COLON ID RSQUARE

    COLON           shift and go to state 297


state 297

    (25) transition -> LSQUARE FROM COLON ID COMMA TO COLON ID COMMA ONN COLON ID COMMA POP COLON ID COMMA PUSH COLON . ID COMMA STACK COLON ID RSQUARE

    ID              shift and go to state 298


state 298

    (25) transition -> LSQUARE FROM COLON ID COMMA TO COLON ID COMMA ONN COLON ID COMMA POP COLON ID COMMA PUSH COLON ID . COMMA STACK COLON ID RSQUARE

    COMMA           shift and go to state 299


state 299

    (25) transition -> LSQUARE FROM COLON ID COMMA TO COLON ID COMMA ONN COLON ID COMMA POP COLON ID COMMA PUSH COLON ID COMMA . STACK COLON ID RSQUARE

    STACK           shift and go to state 300


state 300

    (25) transition -> LSQUARE FROM COLON ID COMMA TO COLON ID COMMA ONN COLON ID COMMA POP COLON ID COMMA PUSH COLON ID COMMA STACK . COLON ID RSQUARE

    COLON           shift and go to state 301


state 301

    (25) transition -> LSQUARE FROM COLON ID COMMA TO COLON ID COMMA ONN COLON ID COMMA POP COLON ID COMMA PUSH COLON ID COMMA STACK COLON . ID RSQUARE

    ID              shift and go to state 302


state 302

    (25) transition -> LSQUARE FROM COLON ID COMMA TO COLON ID COMMA ONN COLON ID COMMA POP COLON ID COMMA PUSH COLON ID COMMA STACK COLON ID . RSQUARE

    RSQUARE         shift and go to state 303


state 303

    (25) transition -> LSQUARE FROM COLON ID COMMA TO COLON ID COMMA ONN COLON ID COMMA POP COLON ID COMMA PUSH COLON ID COMMA STACK COLON ID RSQUARE .

    RBRACE          reduce using rule 25 (transition -> LSQUARE FROM COLON ID COMMA TO COLON ID COMMA ONN COLON ID COMMA POP COLON ID COMMA PUSH COLON ID COMMA STACK COLON ID RSQUARE .)
    COMMA           reduce using rule 25 (transition -> LSQUARE FROM COLON ID COMMA TO COLON ID COMMA ONN COLON ID COMMA POP COLON ID COMMA PUSH COLON ID COMMA STACK COLON ID RSQUARE .)

